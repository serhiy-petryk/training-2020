<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfSpLib.Controls"
                    xmlns:common="clr-namespace:WpfSpLib.Common"
                    xmlns:effects="clr-namespace:WpfSpLib.Effects">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/WpfSpLib;component/Themes/Flags.xaml" />
        <ResourceDictionary Source="pack://application:,,,/WpfSpLib;component/Themes/Common.xaml" />
        <ResourceDictionary Source="pack://application:,,,/WpfSpLib;component/Styles/ButtonStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type local:VirtualKeyboard}">
        <Style.Resources>
            <common:MathConverter x:Key="MathConverter" />
            <Style x:Key="LanguageContextMenuStyle" TargetType="{x:Type ContextMenu}">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border x:Name="Border" Background="Transparent" BorderThickness="2" CornerRadius="3" Margin="0 0 5 5"
                                    BorderBrush="{Binding ConverterParameter=-30:100:50, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="0"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="LanguageItemMenuStyle" TargetType="{x:Type MenuItem}">
                <Setter Property="Background" Value="{Binding ConverterParameter=+30:+15%:+19%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}" />
                <Setter Property="Foreground" Value="{Binding ConverterParameter=+30:+15%:+19%/+90%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="IsChecked" Value="{Binding IsSelected}"/>
                <Setter Property="Command" Value="{Binding LanguageSelectCommand}"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="{Binding ConverterParameter=0.15%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="MenuItem">
                            <Border BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="24" MaxWidth="48" Width="{Binding ConverterParameter=4%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}}"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentControl Grid.Column="0" Content="{Binding Icon}" Margin="3"/>
                                    <TextBlock Grid.Column="1" Text="{Binding Label}" Margin="4 0 8 0" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="{Binding ConverterParameter=+30:+15%:+19%/+40%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{Binding ConverterParameter=+30:+15%:+19%/+20%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="KeyButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                <Setter Property="Margin" Value="{Binding ConverterParameter=0.15%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=FontFamily}"/>
                <Setter Property="Background" Value="{Binding ConverterParameter='+38%,0/+19%,0.2/+12.5%,0.9/+38%,1.0', RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:GradientMonochromeBrush.Instance}}"/>
                <Setter Property="Foreground" Value="{Binding ConverterParameter=+19%/+90%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="FontSize" Value="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseFontSize}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="Border" UseLayoutRounding="{TemplateBinding UseLayoutRounding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    BorderThickness="{TemplateBinding BorderThickness}" Padding="0" BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}" CornerRadius="3">
                                <Grid x:Name="PART_Content">
                                    <!-- Command -->
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"
                                                Visibility="{Binding IsCommand, Converter={x:Static common:VisibilityConverter.Instance}}">
                                        <TextBlock Margin="0 0 2 0" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding BeforeText}"
                                                   Visibility="{Binding BeforeText, Converter={x:Static common:VisibilityConverter.Instance}}"
                                                   FontSize="{Binding ConverterParameter=1.05*, RelativeSource={RelativeSource TemplatedParent}, Path=FontSize, Converter={x:Static common:MathConverter.Instance}}">
                                            <TextBlock.RenderTransform>
                                                <TranslateTransform Y="-1.5" />
                                            </TextBlock.RenderTransform>
                                        </TextBlock>
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Label}"
                                                   Padding="{TemplateBinding Padding}"
                                                   FontSize="{Binding ConverterParameter=0.6*, RelativeSource={RelativeSource TemplatedParent}, Path=FontSize, Converter={x:Static common:MathConverter.Instance}}"/>
                                        <TextBlock Margin="5 0 0 0" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding AfterText}"
                                                   Visibility="{Binding AfterText, Converter={x:Static common:VisibilityConverter.Instance}}"
                                                   FontSize="{Binding ConverterParameter=1.05*, RelativeSource={RelativeSource TemplatedParent}, Path=FontSize, Converter={x:Static common:MathConverter.Instance}}">
                                            <TextBlock.RenderTransform>
                                                <TranslateTransform Y="-1.5" />
                                            </TextBlock.RenderTransform>
                                        </TextBlock>
                                    </StackPanel>

                                    <!-- Extra mode -->
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding ExtraText}"
                                               Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsExtra, Converter={x:Static common:VisibilityConverter.Instance}}"/>

                                    <!-- Common mode -->
                                    <Grid Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsExtra, Converter={x:Static common:VisibilityConverter.InverseInstance}}">
                                        <!-- Left-top: Extra key -->
                                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding ExtraText}"
                                                   Foreground="{Binding ConverterParameter=+19%/+65%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}"
                                                   FontSize="{Binding ConverterParameter=0.75*, RelativeSource={RelativeSource TemplatedParent}, Path=FontSize, Converter={x:Static common:MathConverter.Instance}}"
                                                   Padding="{Binding ConverterParameter=0.5%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}}"/>

                                        <!-- Caps lock == off -->
                                        <Grid Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsCapsLock, Converter={x:Static common:VisibilityConverter.InverseInstance}}">
                                            <!-- Caps lock = off, Shift == off, Right-top -->
                                            <TextBlock HorizontalAlignment="Right" VerticalAlignment="Top" Text="{Binding ShiftedText}"
                                                       Foreground="{Binding ConverterParameter=+19%/+65%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted, Converter={x:Static common:VisibilityConverter.InverseInstance}}"
                                                       FontSize="{Binding ConverterParameter=0.75*, RelativeSource={RelativeSource TemplatedParent}, Path=FontSize, Converter={x:Static common:MathConverter.Instance}}"
                                                       Padding="{Binding ConverterParameter=0.5%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}}"/>

                                            <!-- Caps lock = off, Shift == on, Right-top -->
                                            <TextBlock HorizontalAlignment="Right" VerticalAlignment="Top" Text="{Binding Text}"
                                                       Foreground="{Binding ConverterParameter=+19%/+65%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted, Converter={x:Static common:VisibilityConverter.Instance}}"
                                                       FontSize="{Binding ConverterParameter=0.75*, RelativeSource={RelativeSource TemplatedParent}, Path=FontSize, Converter={x:Static common:MathConverter.Instance}}"
                                                       Padding="{Binding ConverterParameter=0.5%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}}"/>

                                            <!-- Caps lock = off, Shift == off, center-bottom -->
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding Text}" Foreground="{TemplateBinding Foreground}"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted, Converter={x:Static common:VisibilityConverter.InverseInstance}}"
                                                       Padding="{Binding ConverterParameter=0.5%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}}"/>

                                            <!-- Caps lock = off, Shift == on, center-bottom -->
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding ShiftedText}" Foreground="{TemplateBinding Foreground}"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted, Converter={x:Static common:VisibilityConverter.Instance}}"
                                                       Padding="{Binding ConverterParameter=0.5%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}}"/>
                                        </Grid>

                                        <!-- Caps lock == on -->
                                        <Grid Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsCapsLock, Converter={x:Static common:VisibilityConverter.Instance}}">
                                            <!-- Caps lock = on, Shift == off, Right-top -->
                                            <TextBlock HorizontalAlignment="Right" VerticalAlignment="Top" Text="{Binding ShiftedCapsText}"
                                                       Foreground="{Binding ConverterParameter=+19%/+65%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted, Converter={x:Static common:VisibilityConverter.InverseInstance}}"
                                                       FontSize="{Binding ConverterParameter=0.75*, RelativeSource={RelativeSource TemplatedParent}, Path=FontSize, Converter={x:Static common:MathConverter.Instance}}"
                                                       Padding="{Binding ConverterParameter=0.5%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}}"/>
                                            <!-- Caps lock = on, Shift == on, Right-top -->
                                            <TextBlock HorizontalAlignment="Right" VerticalAlignment="Top" Text="{Binding CapsText}"
                                                       Foreground="{Binding ConverterParameter=+19%/+65%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted, Converter={x:Static common:VisibilityConverter.Instance}}"
                                                       FontSize="{Binding ConverterParameter=0.75*, RelativeSource={RelativeSource TemplatedParent}, Path=FontSize, Converter={x:Static common:MathConverter.Instance}}"
                                                       Padding="{Binding ConverterParameter=0.5%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}}"/>
                                            <!-- Caps lock = on, Shift == off, center-bottom -->
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding CapsText}" Foreground="{TemplateBinding Foreground}"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted, Converter={x:Static common:VisibilityConverter.InverseInstance}}"
                                                       Padding="{Binding ConverterParameter=0.5%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}}"/>
                                            <!-- Caps lock = on, Shift = on, center-bottom -->
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding ShiftedCapsText}" Foreground="{TemplateBinding Foreground}"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted, Converter={x:Static common:VisibilityConverter.Instance}}"
                                                       Padding="{Binding ConverterParameter=0.5%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}}"/>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="PART_Content" Property="RenderTransform">
                                        <Setter.Value>
                                            <TranslateTransform Y="1.5" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{Binding ConverterParameter=100:50, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="KeyButtonStyle" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource KeyButtonBaseStyle}"/>

            <Style x:Key="CommandButtonStyle" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource KeyButtonBaseStyle}">
                <Setter Property="Background" Value="{Binding ConverterParameter='+30:+15%:+38%,0/+30:+15%:+19%,0.2/+30:+15%:+12.5%,0.9/+30:+15%:+38%,1.0', RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:GradientMonochromeBrush.Instance}}"/>
                <Setter Property="Foreground" Value="{Binding ConverterParameter=+30:+15%:+19%/+90%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{Binding ConverterParameter=+45:100:50, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="CommandToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource CommandButtonStyle}">
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Foreground" Value="{Binding ConverterParameter=+60:100:50, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ArrowButtonStyle" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource CommandButtonStyle}">
                <Setter Property="Padding" Value="0 0 0 4"/>
                <Setter Property="FontSize" Value="{Binding ConverterParameter=2*, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseFontSize, Converter={x:Static common:MathConverter.Instance}}"/>
            </Style>

            <Style x:Key="LanguageSelectorButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource DefaultButtonBaseStyle}">
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="effects:DoubleIconToggleButtonEffect.GeometryOff" Value="{StaticResource DownArrowGeometry}"/>
                <Setter Property="effects:DoubleIconToggleButtonEffect.GeometryOn" Value="{StaticResource CloseGeometry}"/>
                <Setter Property="effects:DoubleIconToggleButtonEffect.Width" Value="{Binding ConverterParameter=0.7*, RelativeSource={RelativeSource Self}, Path=FontSize, Converter={x:Static common:MathConverter.Instance}}"/>
                <Setter Property="effects:DoubleIconToggleButtonEffect.MarginOff" Value="0 0 8 0"/>
                <Setter Property="effects:DoubleIconToggleButtonEffect.MarginOn" Value="0 0 8 0"/>
                <Setter Property="effects:CornerRadiusEffect.CornerRadius" Value="4"/>
                <Setter Property="Background" Value="{Binding ConverterParameter='+30:+15%:+38%,0/+30:+15%:+19%,0.2/+30:+15%:+12.5%,0.9/+30:+15%:+38%,1.0', RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:GradientMonochromeBrush.Instance}}"/>
                <Setter Property="Foreground" Value="{Binding ConverterParameter=+30:+15%:+19%/+90%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                <Setter Property="Margin" Value="{Binding ConverterParameter=0.15%, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}}"/>
                <Setter Property="FontSize" Value="{Binding ConverterParameter=0.7*, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseFontSize, Converter={x:Static common:MathConverter.Instance}}"/>
                <Setter Property="FontFamily" Value="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=FontFamily}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderBrush" Value="{Binding ConverterParameter=+45:100:50, RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </Style.Resources>

        <Setter Property="BaseHsl" Value="240,0,0"/>
        <Setter Property="BaseFontSize">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource MathConverter}" ConverterParameter="+*650/">
                    <Binding RelativeSource="{RelativeSource Self}" Path="FontSize" />
                    <Binding RelativeSource="{RelativeSource Self}" Path="ActualWidth" />
                    <Binding RelativeSource="{RelativeSource Self}" Path="ActualHeight" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="Verdana"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="DataContext" Value="{Binding RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:VirtualKeyboard}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="{TemplateBinding Padding}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BaseHsl.Self, Converter={x:Static common:ColorHslBrush.Instance}}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="1*"/>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="5*"/>
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0" DataContext="{Binding KeyboardSet[VK_OEM_3]}" Style="{DynamicResource KeyButtonStyle}"/>
                                <Button Grid.Column="1" DataContext="{Binding KeyboardSet[VK_1]}" Style="{DynamicResource KeyButtonStyle}"/>
                                <Button Grid.Column="2" DataContext="{Binding KeyboardSet[VK_2]}" Style="{DynamicResource KeyButtonStyle}"/>
                                <Button Grid.Column="3" DataContext="{Binding KeyboardSet[VK_3]}" Style="{DynamicResource KeyButtonStyle}"/>
                                <Button Grid.Column="4" DataContext="{Binding KeyboardSet[VK_4]}" Style="{DynamicResource KeyButtonStyle}"/>
                                <Button Grid.Column="5" DataContext="{Binding KeyboardSet[VK_5]}" Style="{DynamicResource KeyButtonStyle}"/>
                                <Button Grid.Column="6" DataContext="{Binding KeyboardSet[VK_6]}" Style="{DynamicResource KeyButtonStyle}"/>
                                <Button Grid.Column="7" DataContext="{Binding KeyboardSet[VK_7]}" Style="{DynamicResource KeyButtonStyle}"/>
                                <Button Grid.Column="8" DataContext="{Binding KeyboardSet[VK_8]}" Style="{DynamicResource KeyButtonStyle}"/>
                                <Button Grid.Column="9" DataContext="{Binding KeyboardSet[VK_9]}" Style="{DynamicResource KeyButtonStyle}"/>
                                <Button Grid.Column="10" DataContext="{Binding KeyboardSet[VK_0]}" Style="{DynamicResource KeyButtonStyle}"/>
                                <Button Grid.Column="11" DataContext="{Binding KeyboardSet[VK_OEM_MINUS]}" Style="{DynamicResource KeyButtonStyle}"/>
                                <Button Grid.Column="12" DataContext="{Binding KeyboardSet[VK_OEM_PLUS]}" Style="{DynamicResource KeyButtonStyle}"/>
                                <Button Grid.Column="13" DataContext="{Binding KeyboardSet[VK_BACK]}" Style="{DynamicResource CommandButtonStyle}"/>
                            </Grid>

                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="4*"/>
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0" DataContext="{Binding KeyboardSet[VK_TAB]}" Style="{StaticResource CommandButtonStyle}"/>
                                <Button Grid.Column="1" DataContext="{Binding KeyboardSet[VK_Q]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="2" DataContext="{Binding KeyboardSet[VK_W]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="3" DataContext="{Binding KeyboardSet[VK_E]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="4" DataContext="{Binding KeyboardSet[VK_R]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="5" DataContext="{Binding KeyboardSet[VK_T]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="6" DataContext="{Binding KeyboardSet[VK_Y]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="7" DataContext="{Binding KeyboardSet[VK_U]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="8" DataContext="{Binding KeyboardSet[VK_I]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="9" DataContext="{Binding KeyboardSet[VK_O]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="10" DataContext="{Binding KeyboardSet[VK_P]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="11" DataContext="{Binding KeyboardSet[VK_OEM_4]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="12" DataContext="{Binding KeyboardSet[VK_OEM_6]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="13" DataContext="{Binding KeyboardSet[VK_OEM_5]}" Style="{StaticResource KeyButtonStyle}"/>
                            </Grid>

                            <Grid Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="5.5*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="5.5*"/>
                                </Grid.ColumnDefinitions>

                                <ToggleButton Grid.Column="0" DataContext="{Binding KeyboardSet[VK_CAPITAL]}" Style="{StaticResource CommandToggleButtonStyle}"/>
                                <Button Grid.Column="1" DataContext="{Binding KeyboardSet[VK_A]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="2" DataContext="{Binding KeyboardSet[VK_S]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="3" DataContext="{Binding KeyboardSet[VK_D]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="4" DataContext="{Binding KeyboardSet[VK_F]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="5" DataContext="{Binding KeyboardSet[VK_G]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="6" DataContext="{Binding KeyboardSet[VK_H]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="7" DataContext="{Binding KeyboardSet[VK_J]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="8" DataContext="{Binding KeyboardSet[VK_K]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="9" DataContext="{Binding KeyboardSet[VK_L]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="10" DataContext="{Binding KeyboardSet[VK_OEM_1]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="11" DataContext="{Binding KeyboardSet[VK_OEM_7]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="12" DataContext="{Binding KeyboardSet[VK_RETURN]}" Style="{StaticResource CommandButtonStyle}"/>
                            </Grid>

                            <Grid Grid.Row="3">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="7*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="3*"/>
                                </Grid.ColumnDefinitions>

                                <ToggleButton Grid.Column="0" DataContext="{Binding KeyboardSet[VK_LSHIFT]}" Style="{StaticResource CommandToggleButtonStyle}"/>
                                <Button Grid.Column="1" DataContext="{Binding KeyboardSet[VK_Z]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="2" DataContext="{Binding KeyboardSet[VK_X]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="3" DataContext="{Binding KeyboardSet[VK_C]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="4" DataContext="{Binding KeyboardSet[VK_V]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="5" DataContext="{Binding KeyboardSet[VK_B]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="6" DataContext="{Binding KeyboardSet[VK_N]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="7" DataContext="{Binding KeyboardSet[VK_M]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="8" DataContext="{Binding KeyboardSet[VK_OEM_COMMA]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="9" DataContext="{Binding KeyboardSet[VK_OEM_PERIOD]}" Style="{StaticResource KeyButtonStyle}"/>
                                <Button Grid.Column="10" DataContext="{Binding KeyboardSet[VK_OEM_2]}" Style="{StaticResource KeyButtonStyle}"/>
                                <ToggleButton Grid.Column="11" DataContext="{Binding KeyboardSet[VK_RSHIFT]}" Style="{StaticResource CommandToggleButtonStyle}"/>
                                <Button Grid.Column="12" DataContext="{Binding KeyboardSet[VK_DELETE]}" Style="{StaticResource CommandButtonStyle}"/>
                            </Grid>

                            <Grid Grid.Row="4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="8.5*"/>
                                    <ColumnDefinition Width="18.5*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="3*"/>
                                    <ColumnDefinition Width="11*"/>
                                </Grid.ColumnDefinitions>

                                <ToggleButton Grid.Column="0" DataContext="{Binding KeyboardSet[VK_EXTRA]}" Style="{StaticResource CommandToggleButtonStyle}"/>
                                <Button Grid.Column="1" DataContext="{Binding KeyboardSet[VK_SPACE]}" Style="{StaticResource KeyButtonStyle}"/>
                                <RepeatButton Grid.Column="2" DataContext="{Binding KeyboardSet[VK_LEFT]}" Style="{StaticResource ArrowButtonStyle}"/>
                                <RepeatButton Grid.Column="3" DataContext="{Binding KeyboardSet[VK_RIGHT]}" Style="{StaticResource ArrowButtonStyle}"/>
                                <ToggleButton x:Name="PART_LanguageSelector" Grid.Column="4" IsThreeState="False" Padding="4 0 2 0"
                                              HorizontalContentAlignment="Left" VerticalContentAlignment="Center"
                                              Focusable="False"
                                              Content="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=SelectedKeyboardLayout.Label}"
                                              Style="{StaticResource LanguageSelectorButtonStyle}">
                                    <ToggleButton.Resources>
                                        <ContextMenu x:Key="cm" StaysOpen="False" Focusable="False" Effect="{StaticResource ShadowEffect}" ItemsSource="{Binding AvailableKeyboardLayouts}"
                                                     Style="{StaticResource LanguageContextMenuStyle}" ItemContainerStyle="{StaticResource LanguageItemMenuStyle}"/>
                                    </ToggleButton.Resources>
                                </ToggleButton>
                            </Grid>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>