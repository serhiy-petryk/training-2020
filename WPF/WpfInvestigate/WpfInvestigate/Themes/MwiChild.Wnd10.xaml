<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:common="clr-namespace:WpfInvestigate.Common"
                    xmlns:viewModels="clr-namespace:WpfInvestigate.ViewModels"
                    xmlns:effects="clr-namespace:WpfInvestigate.Effects"
                    xmlns:controls="clr-namespace:WpfInvestigate.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/WpfInvestigate;component/Themes/MwiColors.Wnd7.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <system:Double x:Key="Mwi.Child.Edge">7</system:Double>
    <system:Double x:Key="Mwi.Child.CornerEdgeWidth">16</system:Double>
    <common:BindingProxy x:Key="Mwi.BaseColorProxy" Value="{Binding Source={x:Static viewModels:MwiAppViewModel.Instance}, Path=AppColor}"/>

    <!-- ============= Windows 10 layout ============ -->
    <system:Double x:Key="Mwi.Child.Header.Height">29</system:Double>
    <Visibility x:Key="Mwi.Child.ShadowBorder.Visibility">Visible</Visibility>
    <Visibility x:Key="Mwi.Child.SecondBorders.Visibility">Collapsed</Visibility>
    <Thickness x:Key="Mwi.Child.Border.Margin">7 0 7 7</Thickness>
    <CornerRadius x:Key="Mwi.Child.Border.CornerRadius">0</CornerRadius>
    <Thickness x:Key="Mwi.Child.Content.Margin">8 30 8 8</Thickness>
    <Thickness x:Key="Mwi.Child.Content.Maximized.Margin">0 29 0 0</Thickness>
    <Thickness x:Key="Mwi.Child.Header.Margin">8 1 8 0</Thickness>
    <Thickness x:Key="Mwi.Child.MovingThumb.Margin">0 6 0 0</Thickness>

    <!-- ============= Windows 10 specific ============ -->
    <SolidColorBrush x:Key="Mwi.Child.BaseBackgroundBrush" Color="{Binding Source={StaticResource Mwi.BaseColorProxy}, Path=Value}"/>
    <SolidColorBrush x:Key="Mwi.Child.Unfocused.BaseBackgroundBrush" Color="{Binding Source={StaticResource Mwi.BaseColorProxy}, Path=Value, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+10}"/>
    <SolidColorBrush x:Key="Mwi.Child.BaseBorderBrush" Color="{Binding Source={StaticResource Mwi.BaseColorProxy}, Path=Value, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+50%}" />
    <SolidColorBrush x:Key="Mwi.Child.Unfocused.BaseBorderBrush" Color="{Binding Source={StaticResource Mwi.BaseColorProxy}, Path=Value, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+50%}" />

    <!-- =======  Not used for Windows 10  ========== -->
    <SolidColorBrush x:Key="Mwi.Child.DarkenBackgroundBrush" Color="Transparent" />
    <SolidColorBrush x:Key="Mwi.Child.HighlightBackgroundBrush" Color="Transparent" />
    <SolidColorBrush x:Key="Mwi.Child.NearBorderBrush" Color="Transparent" />
    <SolidColorBrush x:Key="Mwi.Child.FarBorderBrush" Color="Transparent" />

    <!-- =============  MwiChild header  =============== -->
    <SolidColorBrush x:Key="Mwi.Child.IconBrush" Color="{Binding Source={StaticResource Mwi.BaseColorProxy}, Path=Value, Converter={x:Static common:ColorHslBrush.NoSplit}, ConverterParameter=+180:100%:50%}" />
    <SolidColorBrush x:Key="Mwi.Child.Header.ForegroundBrush" Color="{Binding Source={StaticResource Mwi.BaseColorProxy}, Path=Value, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+100%}"/>
    <SolidColorBrush x:Key="Mwi.Child.Header.Inactive.ForegroundBrush" Color="{Binding Source={StaticResource Mwi.BaseColorProxy}, Path=Value, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter='+10/+70%'}"/>

    <!-- =============  MwiChild system menu  =============== -->

    <!-- =============  MwiContainer  =============== -->
    <SolidColorBrush x:Key="Mwi.Container.BackgroundBrush" Color="{Binding Source={StaticResource Mwi.BaseColorProxy}, Path=Value, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=10:+33%}"/>

    <!--  =====  Buttons  ===== -->
    <Viewbox x:Key="Mwi.DetachedButtonContent" Width="12" Height="12" x:Shared="False">
        <Path Width="24" Height="24" Data="M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12M8.8,14L10,12.8V4H14V12.8L15.2,14H8.8Z"/>
        <Viewbox.Style>
            <Style TargetType="Viewbox">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding DataContext.IsWindowed}" Value="True">
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <RotateTransform CenterX="6" CenterY="6" Angle="90" />
                            </Setter.Value>
                        </Setter>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Viewbox.Style>
    </Viewbox>
    <Path x:Key="Mwi.MinimizeButtonContent" Width="10" Height="10" Data="M0,5 10,5 10,6 0,6 0,5z" x:Shared="False"/>
    <Path x:Key="Mwi.MaximizeButtonContent" Width="10" Height="10" Data="M1,1 1,9 9,9 9,1 1,1Z M0,10 0,0 10,0 10,10 0,10Z" x:Shared="False"/>
    <Path x:Key="Mwi.RestoreButtonContent" Width="10" Height="10" Data="M9,7 8,7 8,2 3,2 3,1 9,1 9,7Z M7,9 1,9 1,3 7,3 7,9Z M2,0 2,2 0,2 0,10 8,10 8,8 10,8 10,0 2,0Z" x:Shared="False"/>
    <Viewbox x:Key="Mwi.CloseButtonContent" x:Shared="False" Width="10" Height="10">
        <Path Width="13" Height="13" Data="F1 M0 0 H1 L13 12 V13 H12 L0 1Z M13 0 V1 L1 13 H0 V12 L12 0Z"/>
    </Viewbox>

    <Style x:Key="Mwi.WindowCommonButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Margin" Value="1 0 0 0"/>
        <Setter Property="Width" Value="44"/>
        <Setter Property="Height" Value="29"/>
        <Setter Property="BorderThickness" Value="0"/>
        <!--<Setter Property="Foreground" Value="Red"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Opacity="{TemplateBinding Opacity}" BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" Name="Bd" SnapsToDevicePixels="True">
                        <ContentPresenter Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="effects:ChromeEffect.Monochrome" Value="{Binding Source={StaticResource Mwi.BaseColorProxy}, Path=Value, Converter={x:Static common:ColorHslBrush.Instance}}"/>
        <Setter Property="effects:ChromeEffect.ChromeMatrix" Value="+0%,+70%,+0%,60, +0%,+70%,+0%,100, +15,+15/+75%,+0%,100, +20,+20/+75%,+0%,100"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:MwiChild}, Path=IsActive}" Value="False">
                <!--<Setter Property="effects:ChromeEffect.Monochrome" Value="{Binding Source={StaticResource BaseColorProxy}, Path=Value, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+10}"/>-->
                <Setter Property="effects:ChromeEffect.ChromeMatrix" Value="+10,+10/+70%,+10,60, +10,+10/+70%,+10,100, +25,+25/+75%,+10,100, +30,+30/+75%,+10,100"/>
            </DataTrigger>
        </Style.Triggers>
        <Style.Resources>
            <Style TargetType="Path">
                <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"/>
            </Style>
        </Style.Resources>
    </Style>

    <!-- =======  Detached Button ===== -->
    <Style x:Key="Mwi.DetachedButtonStyle" TargetType="Button" BasedOn="{StaticResource Mwi.WindowCommonButtonStyle}">
        <Setter Property="Content" Value="{StaticResource Mwi.DetachedButtonContent}"/>
    </Style>

    <!-- =======  MinimizeButton ===== -->
    <Style x:Key="Mwi.MinimizeButtonStyle" TargetType="Button" BasedOn="{StaticResource Mwi.WindowCommonButtonStyle}">
        <Setter Property="Content" Value="{StaticResource Mwi.MinimizeButtonContent}"/>
    </Style>

    <!-- =======  MaximizeButton ===== -->
    <Style x:Key="Mwi.MaximizeButtonStyle" TargetType="Button" BasedOn="{StaticResource Mwi.WindowCommonButtonStyle}">
        <Setter Property="Content" Value="{StaticResource Mwi.MaximizeButtonContent}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding DataContext.WindowState}" Value="{x:Static WindowState.Maximized}">
                <Setter Property="Content" Value="{StaticResource Mwi.RestoreButtonContent}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- =======  CloseButton ===== -->
    <Style x:Key="Mwi.CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource Mwi.WindowCommonButtonStyle}">
        <Setter Property="effects:ChromeEffect.ChromeMatrix" Value="+0%,+70%,+0%,60, +0%,+70%,+0%,100, 0:100:+50%,0:100:+50%/+75%,+0%,100, 0:100:+35%,0:100:+35%/+75%,+0%,100"/>
        <Setter Property="Content" Value="{StaticResource Mwi.CloseButtonContent}"/>
    </Style>

</ResourceDictionary>