<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfInvestigate.Controls"
                    xmlns:common="clr-namespace:WpfInvestigate.Common">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/WpfInvestigate;component/Themes/Flags.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type local:VirtualKeyboard}">
        <Style.Resources>
            <SolidColorBrush x:Key="MouseOverBorderBrush" Color="DodgerBlue"/>
            <SolidColorBrush x:Key="BackgroundBrush" Color="#FF303030"/>
            <SolidColorBrush x:Key="HighlightBrush" Color="Magenta"/>
            <LinearGradientBrush x:Key="KeyBackBrush" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FF606060" Offset="0"/>
                <GradientStop Color="#FF303030" Offset="0.2" />
                <GradientStop Color="#FF202020" Offset="0.9" />
                <GradientStop Color="#FF606060" Offset="1" />
            </LinearGradientBrush>

            <Style TargetType="{x:Type ContextMenu}" x:Key="LanguageContextMenuStyle">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="OverridesDefaultStyle" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContextMenu}">
                            <Border x:Name="Border" Background="{StaticResource BackgroundBrush}" BorderThickness="1" BorderBrush="{StaticResource MouseOverBorderBrush}" CornerRadius="3">
                                <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="MenuItem" x:Key="LanguageItemMenuStyle">
                <!--<EventSetter Event="Click" Handler="OnMenuItemClick"/>-->
                <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
                <Setter Property="IsChecked" Value="{Binding IsSelected}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="MenuItem">
                            <Border BorderThickness="0" Background="{TemplateBinding Background}" Padding="4 0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="30" Width="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=3%}"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentControl Grid.Column="0" Content="{Binding Icon}" Margin="3"/>
                                    <TextBlock Grid.Column="1" Text="{Binding Label}" Margin="4 0 0 0" VerticalAlignment="Center"
                                               FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=2.5%}"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Background" Value="#FF94B4D1"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Gray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="KeyButton" TargetType="{x:Type Button}">
                <Setter Property="OverridesDefaultStyle" Value="True"/>
                <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=0.15%}"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="FontFamily" Value="Verdana"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Border" UseLayoutRounding="True" BorderThickness="1" Padding="0" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3" Background="{StaticResource KeyBackBrush}">
                                <Grid x:Name="ContentElement">
                                    <!-- Command -->
                                    <StackPanel Visibility="{Binding VisibilityCommand}" Orientation="Horizontal" HorizontalAlignment="Center">
                                        <TextBlock Margin="0 0 2 0" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding BeforeText}"
                                                   Visibility="{Binding BeforeText, Converter={x:Static common:VisibilityConverter.Instance}}"
                                                   FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=2.6%}">
                                            <TextBlock.RenderTransform>
                                                <TranslateTransform Y="-1.5" />
                                            </TextBlock.RenderTransform>
                                        </TextBlock>
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding Label}"
                                                   FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=1.6%}"/>
                                        <TextBlock Margin="5 0 0 0" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding AfterText}"
                                                   Visibility="{Binding AfterText, Converter={x:Static common:VisibilityConverter.Instance}}"
                                                   FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=2.6%}">
                                            <TextBlock.RenderTransform>
                                                <TranslateTransform Y="-1.5" />
                                            </TextBlock.RenderTransform>
                                        </TextBlock>
                                    </StackPanel>

                                    <!-- Extra mode -->
                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding ExtraText}"
                                               Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsExtra, Converter={x:Static common:VisibilityConverter.Instance}}"
                                               FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=2.5%}"/>

                                    <!-- Common mode -->
                                    <Grid Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsExtra, Converter={x:Static common:VisibilityConverter.InverseInstance}}">
                                        <!-- Left-top: Extra key -->
                                        <TextBlock HorizontalAlignment="Left" VerticalAlignment="Top" Text="{Binding ExtraText}" Foreground="DarkGray"
                                                   FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=1.8%}"
                                                   Padding="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=0.5%}"/>

                                        <!-- Caps lock == off -->
                                        <Grid Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsCapsLock, Converter={x:Static common:VisibilityConverter.InverseInstance}}">
                                            <!-- Caps lock = off, Shift == off, Right-top -->
                                            <TextBlock HorizontalAlignment="Right" VerticalAlignment="Top" Text="{Binding ShiftedText}" Foreground="DarkGray"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted, Converter={x:Static common:VisibilityConverter.InverseInstance}}"
                                                       FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=1.8%}"
                                                       Padding="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=0.5%}"/>

                                            <!-- Caps lock = off, Shift == on, Right-top -->
                                            <TextBlock HorizontalAlignment="Right" VerticalAlignment="Top" Text="{Binding Text}" Foreground="DarkGray"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted, Converter={x:Static common:VisibilityConverter.Instance}}"
                                                       FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=1.8%}"
                                                       Padding="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=0.5%}"/>

                                            <!-- Caps lock = off, Shift == off, center-bottom -->
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding Text}" Foreground="White"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted, Converter={x:Static common:VisibilityConverter.InverseInstance}}"
                                                       FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=2.5%}"
                                                       Padding="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=0.5%}"/>

                                            <!-- Caps lock = off, Shift == on, center-bottom -->
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding ShiftedText}" Foreground="White"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted, Converter={x:Static common:VisibilityConverter.Instance}}"
                                                       FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=2.5%}"
                                                       Padding="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=0.5%}"/>
                                        </Grid>

                                        <!-- Caps lock == on -->
                                        <Grid Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsCapsLock, Converter={x:Static common:VisibilityConverter.Instance}}">
                                            <!-- Caps lock = on, Shift == off, Right-top -->
                                            <TextBlock HorizontalAlignment="Right" VerticalAlignment="Top" Text="{Binding ShiftedCapsText}" Foreground="DarkGray"
                                                       Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted, Converter={x:Static common:VisibilityConverter.InverseInstance}}"
                                                       FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=1.8%}"
                                                       Padding="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=0.5%}"/>
                                            <!-- Caps lock = on, Shift == on, Right-top -->
                                            <TextBlock HorizontalAlignment="Right" VerticalAlignment="Top" Text="{Binding CapsText}" Foreground="DarkGray"
                                                   Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted, Converter={x:Static common:VisibilityConverter.Instance}}"
                                                   FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=1.8%}"
                                                   Padding="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=0.5%}"/>
                                            <!-- Caps lock = on, Shift == off, center-bottom -->
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding CapsText}" Foreground="White"
                                                   Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted, Converter={x:Static common:VisibilityConverter.InverseInstance}}"
                                                   FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=2.5%}"
                                                   Padding="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=0.5%}"/>
                                            <!-- Caps lock = on, Shift = on, center-bottom -->
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom" Text="{Binding ShiftedCapsText}" Foreground="White"
                                                   Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted, Converter={x:Static common:VisibilityConverter.Instance}}"
                                                   FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=2.5%}"
                                                   Padding="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=0.5%}"/>
                                        </Grid>
                                    </Grid>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MouseOverBorderBrush}"/>
                                    <Setter Property="Foreground" Value="{StaticResource MouseOverBorderBrush}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="ContentElement" Property="RenderTransform">
                                        <Setter.Value>
                                            <TranslateTransform Y="1.5" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <!--<EventSetter Event="Click" Handler="OnKeyClick"/>-->
            </Style>
        </Style.Resources>

        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Height" Value="{Binding ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=34.5%}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:VirtualKeyboard}">
                    <Grid>
                        <Border BorderThickness="0" CornerRadius="5" Padding="5" Background="Black">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>

                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="5*"/>
                                    </Grid.ColumnDefinitions>

                                    <Button Grid.Column="0" DataContext="{Binding KeyboardSet[VK_OEM_3]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="1" DataContext="{Binding KeyboardSet[VK_1]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="2" DataContext="{Binding KeyboardSet[VK_2]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="3" DataContext="{Binding KeyboardSet[VK_3]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="4" DataContext="{Binding KeyboardSet[VK_4]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="5" DataContext="{Binding KeyboardSet[VK_5]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="6" DataContext="{Binding KeyboardSet[VK_6]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="7" DataContext="{Binding KeyboardSet[VK_7]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="8" DataContext="{Binding KeyboardSet[VK_8]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="9" DataContext="{Binding KeyboardSet[VK_9]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="10" DataContext="{Binding KeyboardSet[VK_0]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="11" DataContext="{Binding KeyboardSet[VK_OEM_MINUS]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="12" DataContext="{Binding KeyboardSet[VK_OEM_PLUS]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="13" DataContext="{Binding KeyboardSet[VK_BACK]}" Style="{StaticResource KeyButton}"/>
                                </Grid>

                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="4*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="4*"/>
                                    </Grid.ColumnDefinitions>

                                    <Button Grid.Column="0" DataContext="{Binding KeyboardSet[VK_TAB]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="1" DataContext="{Binding KeyboardSet[VK_Q]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="2" DataContext="{Binding KeyboardSet[VK_W]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="3" DataContext="{Binding KeyboardSet[VK_E]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="4" DataContext="{Binding KeyboardSet[VK_R]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="5" DataContext="{Binding KeyboardSet[VK_T]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="6" DataContext="{Binding KeyboardSet[VK_Y]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="7" DataContext="{Binding KeyboardSet[VK_U]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="8" DataContext="{Binding KeyboardSet[VK_I]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="9" DataContext="{Binding KeyboardSet[VK_O]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="10" DataContext="{Binding KeyboardSet[VK_P]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="11" DataContext="{Binding KeyboardSet[VK_OEM_4]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="12" DataContext="{Binding KeyboardSet[VK_OEM_6]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="13" DataContext="{Binding KeyboardSet[VK_OEM_5]}" Style="{StaticResource KeyButton}"/>
                                </Grid>

                                <Grid Grid.Row="2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="5.5*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="5.5*"/>
                                    </Grid.ColumnDefinitions>

                                    <Button Grid.Column="0" DataContext="{Binding KeyboardSet[VK_CAPITAL]}">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource KeyButton}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsCapsLock}" Value="True">
                                                        <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button Grid.Column="1" DataContext="{Binding KeyboardSet[VK_A]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="2" DataContext="{Binding KeyboardSet[VK_S]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="3" DataContext="{Binding KeyboardSet[VK_D]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="4" DataContext="{Binding KeyboardSet[VK_F]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="5" DataContext="{Binding KeyboardSet[VK_G]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="6" DataContext="{Binding KeyboardSet[VK_H]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="7" DataContext="{Binding KeyboardSet[VK_J]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="8" DataContext="{Binding KeyboardSet[VK_K]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="9" DataContext="{Binding KeyboardSet[VK_L]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="10" DataContext="{Binding KeyboardSet[VK_OEM_1]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="11" DataContext="{Binding KeyboardSet[VK_OEM_7]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="12" DataContext="{Binding KeyboardSet[VK_RETURN]}" Style="{StaticResource KeyButton}"/>
                                </Grid>

                                <Grid Grid.Row="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="7*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="3*"/>
                                        <ColumnDefinition Width="4*"/>
                                        <ColumnDefinition Width="3*"/>
                                    </Grid.ColumnDefinitions>

                                    <Button Grid.Column="0" DataContext="{Binding KeyboardSet[VK_LSHIFT]}">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource KeyButton}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted}" Value="True">
                                                        <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button Grid.Column="1" DataContext="{Binding KeyboardSet[VK_Z]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="2" DataContext="{Binding KeyboardSet[VK_X]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="3" DataContext="{Binding KeyboardSet[VK_C]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="4" DataContext="{Binding KeyboardSet[VK_V]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="5" DataContext="{Binding KeyboardSet[VK_B]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="6" DataContext="{Binding KeyboardSet[VK_N]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="7" DataContext="{Binding KeyboardSet[VK_M]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="8" DataContext="{Binding KeyboardSet[VK_OEM_COMMA]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="9" DataContext="{Binding KeyboardSet[VK_OEM_PERIOD]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="10" DataContext="{Binding KeyboardSet[VK_OEM_2]}" Style="{StaticResource KeyButton}"/>
                                    <Button Grid.Column="11" DataContext="{Binding KeyboardSet[VK_RSHIFT]}">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource KeyButton}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsShifted}" Value="True">
                                                        <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button Grid.Column="12" DataContext="{Binding KeyboardSet[VK_DELETE]}" Style="{StaticResource KeyButton}"/>
                                </Grid>

                                <Grid Grid.Row="4">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="9*"/>
                                        <ColumnDefinition Width="23*"/>
                                        <ColumnDefinition Width="12*"/>
                                    </Grid.ColumnDefinitions>
                                    <Button Grid.Column="0" DataContext="{Binding KeyboardSet[VK_EXTRA]}">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource KeyButton}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=IsExtra}" Value="True">
                                                        <Setter Property="Foreground" Value="{StaticResource HighlightBrush}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button Grid.Column="1" DataContext="{Binding KeyboardSet[VK_SPACE]}" Style="{StaticResource KeyButton}"/>
                                    <Border Grid.Column="2" BorderThickness="1" Background="{StaticResource KeyBackBrush}"
                                            Margin="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=0.25%}"
                                            CornerRadius="3">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="BorderBrush" Value="{StaticResource MouseOverBorderBrush}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <!-- ToDo:  Checked="OpenDropDownMenu" -->
                                        <ToggleButton IsThreeState="False" IsChecked="False" Focusable="False" BorderThickness="0"
                                                      Background="Transparent" Foreground="White"
                                                      Margin="4 0 2 0"
                                                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                      HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                                      Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                                                      FontSize="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=1.8%0.1+}">
                                            <ToggleButton.Content>
                                                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=ActualWidth, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=2%}"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding RelativeSource={RelativeSource AncestorType=local:VirtualKeyboard}, Path=SelectedKeyboardLayout.Label}"/>
                                                    <Viewbox Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0 0 4 0">
                                                        <Path Fill="White" Data="M0,2L6,2L3,5z"/>
                                                    </Viewbox>
                                                </Grid>
                                            </ToggleButton.Content>
                                            <ToggleButton.Resources>
                                                <ContextMenu x:Key="cm" StaysOpen="False" ItemsSource="{Binding AvailableKeyboardLayouts}" Style="{StaticResource LanguageContextMenuStyle}" ItemContainerStyle="{StaticResource LanguageItemMenuStyle}"/>
                                            </ToggleButton.Resources>
                                        </ToggleButton>
                                    </Border>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>