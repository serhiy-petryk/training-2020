<Window x:Class="WpfInvestigate.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:globalization="clr-namespace:System.Globalization;assembly=mscorlib"
        xmlns:controls="clr-namespace:WpfInvestigate.Controls"
        xmlns:effects="clr-namespace:WpfInvestigate.Effects"
        xmlns:common="clr-namespace:WpfInvestigate.Common"
        mc:Ignorable="d"
        Title="LIVE MainWindow" Height="600" Width="1200">

    <Window.Resources>

        <SolidColorBrush x:Key="MouseOverBorderBrush" Color="DodgerBlue"/>
        <SolidColorBrush x:Key="BackgroundBrush" Color="#FF303030"/>
        <SolidColorBrush x:Key="HighlightBrush" Color="Magenta"/>
        <LinearGradientBrush x:Key="KeyBackBrush" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FF606060" Offset="0"/>
            <GradientStop Color="#FF303030" Offset="0.2" />
            <GradientStop Color="#FF202020" Offset="0.9" />
            <GradientStop Color="#FF606060" Offset="1" />
        </LinearGradientBrush>

        <Style x:Key="KeyButton" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="UseLayoutRounding" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="Border" UseLayoutRounding="True" BorderThickness="1" Padding="0" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3" Background="{StaticResource KeyBackBrush}">
                            <Grid x:Name="ContentElement">
                                <!-- Command -->
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource MouseOverBorderBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource MouseOverBorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="ContentElement" Property="RenderTransform">
                                    <Setter.Value>
                                        <TranslateTransform Y="1.5" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ================== -->
        <Style x:Key="MyFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Control}">
                        <Grid Margin="4 2">
                            <Rectangle x:Name="r1" StrokeThickness="1" Stroke="Black" StrokeDashArray="2 2"/>
                            <Border x:Name="border" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}"  CornerRadius="2" BorderThickness="1" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ShadowStyle">
            <Setter Property="Control.Foreground" Value="LightGray" />
        </Style>

        <Style x:Key="InformButtonOriginal" TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="FontSize" Value="14px"/>
            <!--<Setter Property="FontWeight" Value="Bold"/>-->
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisual}" />
            <Setter Property="Background" >
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                        <GradientStop Color="#FF0EFF1D" Offset="0.059"/>
                        <GradientStop Color="#FF101010" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderThickness="1" Padding="6,3"   BorderBrush="Black"
                                CornerRadius="3" Height="Auto" Width="Auto" SnapsToDevicePixels="False" >
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="0" Direction="270" ShadowDepth="2" Opacity="0.425" RenderingBias="Quality"/>
                            </Border.Effect>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                    <GradientStop Color="#FF606060" Offset="0.005"/>
                                    <GradientStop Color="#FF303030" Offset="0.2" />
                                    <GradientStop Color="#FF202020" Offset="0.9" />
                                    <GradientStop Color="#FF606060" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" x:Name="contentShadow" Style="{StaticResource ShadowStyle}"/>
                                <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" x:Name="content"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF4788c8" />
                                <Setter Property="Foreground" Value="#FF4788c8" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" >
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" >
                                            <GradientStop Color="#FFFFD190" Offset="0.35"/>
                                            <GradientStop Color="Orange" Offset="0.95"/>
                                            <GradientStop Color="#FFFFD190" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>

                                <Setter TargetName="content" Property="RenderTransform" >
                                    <Setter.Value>
                                        <TranslateTransform Y="1.0" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsDefaulted" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF282828" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.7" />
                                <Setter Property="Foreground" Value="Gray" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <ScrollViewer>
    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Slider Grid.Column="0"
                x:Name="uiScaleSlider"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                ToolTip="Determines the UI scale factor. Double-click to revert scaling back to 100%."
                Height="100"
                Value="1" Minimum="0.5" Maximum="8"
                Orientation="Vertical"
                Ticks="1"
                IsSnapToTickEnabled="False"
                TickPlacement="BottomRight"
                AutoToolTipPlacement="BottomRight"
                AutoToolTipPrecision="2"/>

        <Grid Grid.Column="1">
            <Grid.LayoutTransform>
                <ScaleTransform CenterX="0" CenterY="0" ScaleX="{Binding ElementName=uiScaleSlider,Path=Value}" ScaleY="{Binding ElementName=uiScaleSlider,Path=Value}"/>
            </Grid.LayoutTransform>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" Orientation="Vertical" Margin="5">
                <Label Content="Current culture:"/>
                <ComboBox x:Name="cbCulture" SelectionChanged="CbCulture_OnSelectionChanged">
                    <ComboBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type globalization:CultureInfo}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="1" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding DisplayName, Mode=OneWay}" />
                                <TextBlock Margin="1" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding IetfLanguageTag, StringFormat=(\{0\})}" />
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Label Content="WiP controls:" Margin="0 10 0 0"/>
                <Button x:Name="TestButton" Margin="5" Content="TestButton" Click="OnTestButtonClick"/>
                <Button x:Name="ControlEffectTest" Width="200" Margin="0 5" Content="WiP: ControlEffect" Click="ControlEffectTests_OnClick"/>
                <Button x:Name="ControlDemo" Width="200" Margin="0 5" Content="WiP: ControlDemo" Click="ControlDemo_OnClick"/>
                <Button x:Name="TempControl" Width="200" Margin="0 5" Content="WiP: Temp Control" Click="TempControl_OnClick"/>

                <WrapPanel Orientation="Horizontal" Background="Black" HorizontalAlignment="Stretch" Margin="10">
                    <Button Name="Cmdw" Style="{StaticResource InformButtonOriginal}" Focusable="False" VerticalContentAlignment="Top" HorizontalContentAlignment="Left"
                            Width="60" Height="60" Content="X">
                        <!--<StackPanel Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Top" >
                                    <TextBlock    HorizontalAlignment="Left" VerticalAlignment="Top"   ><Run Text="W"/></TextBlock>
                                    <TextBlock HorizontalAlignment="Left" VerticalAlignment="Bottom" Background="Yellow" Text="A"   />
                                </StackPanel>-->
                    </Button>
                    <Button Style="{StaticResource KeyButton}" Content="X" Width="60" Height="60"/>
                </WrapPanel>
                <WrapPanel Margin="5">
                </WrapPanel>

                <WrapPanel Margin="5" Background="Aqua" HorizontalAlignment="Stretch">
                    <ComboBox x:Name="cbDataType" Margin="5" Height="20" />
                    <controls:ObjectEditor x:Name="Editor" MinWidth="100" Height="24"
                                           effects:WatermarkEffect.Watermark="TestWatermark"
                                           effects:WatermarkEffect.Foreground="Red"
                                           VerticalContentAlignment="Center" VerticalAlignment="Center"
                                           ValueDataType="{Binding ElementName=cbDataType, Path=SelectedItem, TargetNullValue={x:Static common:DataTypeMetadata+DataType.String} }"
                                           IsNullable="False"/>
                    <!--<controls:ObjectEditor MinWidth="100" Height="24"
                                           effects:WatermarkEffect.Watermark="TestWatermark"
                                           effects:WatermarkEffect.Foreground="Red"
                                           VerticalContentAlignment="Center" VerticalAlignment="Center"
                                           ValueDataType="Bool"
                                           IsNullable="False"/>-->
                </WrapPanel>
                <WrapPanel Margin="5">
                    <TextBox x:Name="TestTextBox2" Width="70" Background="Yellow" Foreground="Blue" TextWrapping="Wrap" MaxHeight="30"
                             ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                             ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                </WrapPanel>

                <WrapPanel Margin="5">
                    <TextBox x:Name="TestTextBox" Margin="2" Width="100" Background="Yellow" Foreground="Blue" Text="AAAAAA" BorderThickness="2" Padding="4"
                             effects:TextBoxEffects.Buttons="Keyboard,Clear,Separator1px" BorderBrush="Blue"
                             ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=(effects:TextBoxEffects.Buttons)}"
                             effects:CornerRadiusEffect.CornerRadius="2"/>
                    <Button Margin="2" Content="Change Background" Click="ChangeBackground_OnClick"/>
                    <Button Margin="2" Content="Change Foreground" Click="ChangeForeground_OnClick"/>
                    <Button Margin="2" Content="Change Button" Click="ChangeButton_OnClick"/>
                        <TextBox Margin="2" Width="70" Background="Yellow" Foreground="Blue" IsEnabled="False" Text="AAAAAA"/>
                        <TextBox Margin="2" Width="70" Background="Yellow" Foreground="Blue" IsReadOnly="True" Text="AAAAAA"/>
                </WrapPanel>

            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Vertical" Margin="5">
                <Label>Ready:</Label>
                <Button x:Name="ObjectEditorTest" Margin="5" Content="Ready: ObjectEditor" Click="ObjectEditorTest_OnClick"/>
                <Button x:Name="DropDownButtonTest" Width="200" Margin="0 5" Content="Ready: DropDownButton" Click="DropDownButtonTest_OnClick"/>
                <Button x:Name="NumericBoxTest" Width="200" Margin="0 5" Content="Ready: NumericBox" Click="NumericBoxTest_OnClick"/>
                <Button x:Name="TimePickerTest" Width="200" Margin="0 5" Content="Ready: TimePicker" Click="TimepickerTest_OnClick"/>
                <Button x:Name="DatePickerEffectTest" Width="200" Margin="0 5" Content="Ready: DatePickerEffect" Click="DatePickerEffectTest_OnClick"/>
                <Button x:Name="CalculatorTest" Width="200" Margin="0 5" Content="Ready: Calculator" Click="CalculatorTest_OnClick"/>
                <Button x:Name="WatermarkTest" Width="200" Margin="0 5" Content="Watermark Tests" Click="WatermarkTest_OnClick"/>
                <Button x:Name="RippleEffectTest" Width="200" Margin="0 5" Content="Ready: RippleEffect" Click="RippleEffectTest_OnClick"/>
                <Button x:Name="ChromeTest" Width="200" Margin="0 5" Content="Ready: Chrome tests" Click="ChromeTest_OnClick"/>
                <Button x:Name="ColorControlTest" Width="200" Margin="0 5" Content="Ready: ColorControlTest" Click="ColorControlTest_OnClick"/>
                <Button x:Name="ButtonStyleTest" Width="200" Margin="0 5" Content="Ready: ButtonStyleTests" Click="ButtonStyleTests_OnClick"/>
                <Button x:Name="DialogItemsTest" Width="200" Margin="0 5" Content="Ready: DialogItemsTests" Click="DialogItemsTests_OnClick"/>
            </StackPanel>

            <StackPanel Grid.Column="2" Orientation="Vertical" Margin="5">
                <Label>Others:</Label>
                <Button x:Name="KeyboardTest" Margin="5" Content="Others: Keyboard" Click="KeyboardTest_OnClick"/>
                <Button x:Name="BootstrapButtonTest" Width="200" Margin="0 5" Content="Others: BootstrapButtonTests" Click="BootstrapButtonTests_OnClick"/>
            </StackPanel>

            <StackPanel Grid.Column="3" Orientation="Vertical" Margin="5">
                <Label>Tests:</Label>
                <Button x:Name="WiPTest" Margin="5" Content="WiP Tests" Click="WiPTest_OnClick"/>
            </StackPanel>

            <StackPanel Grid.Column="4" Orientation="Vertical" Margin="5">
                <Label>Obsolete:</Label>
                <Button x:Name="ObsoleteNumericUpDownTest" Width="200" Margin="0 5" Content="Obsolete: NumericUpDown" Click="ObsoleteNumericUpDownTest_OnClick"/>
                <Button x:Name="ObsoleteRippleButtonTest" Width="250" Margin="0 5" Content="Obsolete (use RippleEffect): RippleButton" Click="ObsoleteRippleButtonTest_OnClick"/>
                <Button x:Name="ObsoleteTests" Width="200" Margin="0 5" Content="Obsolete: ControlLibrary" Click="ObsoleteControlLibrary_OnClick"/>
                <Button x:Name="ObsoleteMonochromeButtonTest" Width="200" Margin="0 5" Content="Obsolete: MonochromeButton" Click="ObsoleteMonochromeButtonTest_OnClick"/>
                <Button x:Name="ObsoleteDualPathToggleButtonEffectTest" Width="200" Margin="0 5" Content="Obsolete: DualPathToggleButtonEffect" Click="ObsoleteDualPathToggleButtonEffectTest_OnClick"/>
                <Button x:Name="ObsoleteFlatButtonTest" Width="200" Margin="0 5" Content="Obsolete: FlatButton" Click="ObsoleteFlatButtonTest_OnClick"/>
            </StackPanel>
        </Grid>
    </Grid>
    </ScrollViewer>
</Window>
