<Window x:Class="WpfInvestigate.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:globalization="clr-namespace:System.Globalization;assembly=mscorlib"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:controls="clr-namespace:WpfInvestigate.Controls"
        xmlns:effects="clr-namespace:WpfInvestigate.Controls.Effects"
        xmlns:common="clr-namespace:WpfInvestigate.Common"
        mc:Ignorable="d"
        Title="LIVE MainWindow" Height="600" Width="1000">

    <Window.Resources>
        <ControlTemplate x:Key="LeftUpDoubleButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Grid SnapsToDevicePixels="True" UseLayoutRounding="True">
                <Polygon Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"
                         StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}"
                         Points="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth, Converter={x:Static common:DoubleButtonConverter.LeftUpPolygonPoints}}" >
                </Polygon>
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="RightDownDoubleButtonTemplate" TargetType="{x:Type ButtonBase}">
            <Grid SnapsToDevicePixels="True" UseLayoutRounding="True">
                <Polygon Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"
                         StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}"
                         Points="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth, Converter={x:Static common:DoubleButtonConverter.RightDownPolygonPoints}}" >
                </Polygon>
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
        </ControlTemplate>

        <SolidColorBrush x:Key="Mwi.WindowBar.ForegroundBrush" Color="Black"/>
        <SolidColorBrush x:Key="DoubleButton.BorderBrush" Color="Red"/>
        <SolidColorBrush x:Key="DoubleButton.BackgroundBrush" Color="Red"/>
        <SolidColorBrush x:Key="DoubleButton.MouseOver.BorderBrush" Color="#FF3399FF"/>
        <SolidColorBrush x:Key="DoubleButton.MouseOver.BackgroundBrush" Color="#FFC2E0FF"/>
        <SolidColorBrush x:Key="DoubleButton.Pressed.BorderBrush" Color="#FF3399FF"/>
        <SolidColorBrush x:Key="DoubleButton.Pressed.BackgroundBrush" Color="#FF99CCFF"/>
        <Style x:Key="DoubleButtonStyle" TargetType="ButtonBase">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="BorderBrush" Value="{DynamicResource DoubleButton.BorderBrush}" />
                    <Setter Property="Background" Value="{DynamicResource DoubleButton.BackgroundBrush}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource DoubleButton.MouseOver.BorderBrush}" />
                    <Setter Property="Background" Value="{DynamicResource DoubleButton.MouseOver.BackgroundBrush}" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource DoubleButton.Pressed.BorderBrush}" />
                    <Setter Property="Background" Value="{DynamicResource DoubleButton.Pressed.BackgroundBrush}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.3" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>


    <Grid Margin="10">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Slider Grid.Column="0"
                x:Name="uiScaleSlider"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                ToolTip="Determines the UI scale factor. Double-click to revert scaling back to 100%."
                Height="100"
                Value="1" Minimum="0.5" Maximum="4"
                Orientation="Vertical"
                Ticks="1"
                IsSnapToTickEnabled="False"
                TickPlacement="BottomRight"
                AutoToolTipPlacement="BottomRight"
                AutoToolTipPrecision="2"/>

        <Grid Grid.Column="1">
            <Grid.LayoutTransform>
                <ScaleTransform CenterX="0" CenterY="0" ScaleX="{Binding ElementName=uiScaleSlider,Path=Value}" ScaleY="{Binding ElementName=uiScaleSlider,Path=Value}"/>
            </Grid.LayoutTransform>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0" Orientation="Vertical" Margin="5">
                <Label Content="Current culture:"/>
                <ComboBox x:Name="cbCulture" SelectionChanged="CbCulture_OnSelectionChanged">
                    <ComboBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type globalization:CultureInfo}">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Margin="1" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding DisplayName, Mode=OneWay}" />
                                <TextBlock Margin="1" HorizontalAlignment="Left" VerticalAlignment="Center" Text="{Binding IetfLanguageTag, StringFormat=(\{0\})}" />
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Label Content="WiP controls:" Margin="0 10 0 0"/>
                <Button x:Name="TestButton" Margin="5" Content="TestButton" Click="OnTestButtonClick"/>
                <Button x:Name="ControlEffectTest" Width="200" Margin="0 5" Content="WiP: ControlEffect" Click="ControlEffectTests_OnClick"/>
                <Button x:Name="BootstrapButtonTest" Width="200" Margin="0 5" Content="WiP: BootstrapButtonTests" Click="BootstrapButtonTests_OnClick"/>
                <Button x:Name="ButtonStyleTest" Width="200" Margin="0 5" Content="WiP: ButtonStyleTests" Click="ButtonStyleTests_OnClick"/>

                <StackPanel Orientation="Horizontal" Background="#FFEEEEEE">
                <!--    <StackPanel Margin="2 0 0 0" Orientation="Horizontal">
                        <RepeatButton Template="{DynamicResource LeftUpDoubleButtonTemplate}" Style="{DynamicResource DoubleButtonStyle}"
                                      Width="26" Height="26" BorderThickness="1" Focusable="False"
                                      Background="GreenYellow"
                                      Interval="15"
                                      ToolTip="Scroll window tabs to left">
                            <Path Width="5" Height="10" Margin="-13 -10 0 0" Fill="{DynamicResource Mwi.WindowBar.ForegroundBrush}" Data="M 5 0 L 0 5 L 5 10 Z" />
                        </RepeatButton>

                        <RepeatButton Template="{DynamicResource RightDownDoubleButtonTemplate}" Style="{DynamicResource DoubleButtonStyle}"
                                      Background="GreenYellow"
                                      Margin="-26 0 0 0" Width="26" Height="26" BorderThickness="1" Focusable="False"
                                      Interval="15"
                                      ToolTip="Scroll window tabs to right">
                            <Path Width="5" Height="10" Margin="13 10 0 0" Fill="{DynamicResource Mwi.WindowBar.ForegroundBrush}" Data="M 0 0 L 5 5 L 0 10 Z" />
                        </RepeatButton>
                    </StackPanel>

                    <StackPanel Margin="2 0 0 0" Orientation="Horizontal" Background="{Binding Source={StaticResource YellowColor}, Converter={x:Static common:ColorHslBrush.Instance}}">
                        <RepeatButton Template="{DynamicResource LeftUpDoubleButtonTemplate}"
                                      Width="26" Height="26" BorderThickness="0" Focusable="False"
                                      Interval="15"
                                      effects:ChromeEffect.MonochromeAnimated="{StaticResource YellowColor}"
                                      ToolTip="Scroll window tabs to left">
                            <Path Width="5" Height="10" Margin="-13 -10 0 0" Data="M 5 0 L 0 5 L 5 10 Z" />
                        </RepeatButton>

                        <RepeatButton Template="{DynamicResource RightDownDoubleButtonTemplate}"
                                      UseLayoutRounding="True" SnapsToDevicePixels="True"
                                      Margin="-26 0 0 0" Width="26" Height="26" BorderThickness="0" Focusable="False"
                                      Interval="15"
                                      effects:ChromeEffect.MonochromeAnimated="{StaticResource YellowColor}"
                                      ToolTip="Scroll window tabs to right">
                            <Path Width="5" Height="10" Margin="13 10 0 0" Data="M 0 0 L 5 5 L 0 10 Z" />
                        </RepeatButton>
                    </StackPanel>-->

                    <StackPanel Margin="2 0 0 0" Height="26" Orientation="Horizontal" Background="{Binding Source={StaticResource YellowColor}, Converter={x:Static common:ColorHslBrush.Instance}}">
                        <StackPanel.Resources>
                            <ControlTemplate x:Key="LeftUpDoubleButtonTemplate" TargetType="{x:Type ButtonBase}">
                                <Grid SnapsToDevicePixels="True" UseLayoutRounding="True">
                                    <Polygon Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"
                                             StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}"
                                             Points="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth, Converter={x:Static common:DoubleButtonConverter.LeftUpPolygonPoints}}" >
                                    </Polygon>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ControlTemplate>
                            <ControlTemplate x:Key="RightDownDoubleButtonTemplate" TargetType="{x:Type ButtonBase}">
                                <Grid SnapsToDevicePixels="True" UseLayoutRounding="True">
                                    <Polygon Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"
                                             StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}"
                                             Points="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth, Converter={x:Static common:DoubleButtonConverter.RightDownPolygonPoints}}" >
                                    </Polygon>
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ControlTemplate>

                            <Style x:Key="DoubleBaseButtonStyle" TargetType="RepeatButton">
                                <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Panel}}, Path=ActualHeight}"/>
                                <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Panel}}, Path=ActualHeight}"/>
                                <Setter Property="effects:ChromeEffect.MonochromeAnimated" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Panel}}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Interval" Value="15"/>
                                <Setter Property="UseLayoutRounding" Value="False"/>
                                <Setter Property="SnapsToDevicePixels" Value="False"/>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Panel.ZIndex" Value="2"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <Style x:Key="LeftUpDoubleButtonStyle" TargetType="RepeatButton" BasedOn="{StaticResource DoubleBaseButtonStyle}">
                                <Setter Property="Template" Value="{StaticResource LeftUpDoubleButtonTemplate}"/>
                                <Setter Property="effects:IconEffect.Geometry" Value="M 1 0 L 0 1 L 1 2 Z"/>
                                <Setter Property="Margin" Value="0"/>
                            </Style>
                            <Style x:Key="RightDownDoubleButtonStyle" TargetType="RepeatButton" BasedOn="{StaticResource DoubleBaseButtonStyle}">
                                <Setter Property="Template" Value="{StaticResource RightDownDoubleButtonTemplate}"/>
                                <Setter Property="effects:IconEffect.Geometry" Value="M 0 0 L 1 1 L 0 2 Z"/>
                                <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth, Converter={x:Static common:DoubleButtonConverter.RightDownMargin}}"/>
                            </Style>
                        </StackPanel.Resources>
                        <RepeatButton Style="{StaticResource LeftUpDoubleButtonStyle}" BorderThickness="2" Focusable="False"
                                      Padding="3 3 16 13"
                                      ToolTip="Scroll window tabs to left"/>

                        <RepeatButton Style="{StaticResource RightDownDoubleButtonStyle}" BorderThickness="2" Focusable="False"
                                      Padding="16 13 3 3"
                                      ToolTip="Scroll window tabs to right"/>
                    </StackPanel>
                </StackPanel>

            </StackPanel>

            <StackPanel Grid.Column="1" Orientation="Vertical" Margin="5">
                <Label>Ready:</Label>
                <Button x:Name="ObjectEditorTest" Margin="5" Content="Ready: ObjectEditor" Click="ObjectEditorTest_OnClick"/>
                <Button x:Name="DualPathToggleButtonEffectTest" Width="200" Margin="0 5" Content="Ready: DualPathToggleButtonEffect" Click="DualPathToggleButtonEffectTest_OnClick"/>
                <Button x:Name="DropDownButtonTest" Width="200" Margin="0 5" Content="Ready: DropDownButton" Click="DropDownButtonTest_OnClick"/>
                <Button x:Name="NumericBoxTest" Width="200" Margin="0 5" Content="Ready: NumericBox" Click="NumericBoxTest_OnClick"/>
                <Button x:Name="TimePickerTest" Width="200" Margin="0 5" Content="Ready: TimePicker" Click="TimepickerTest_OnClick"/>
                <Button x:Name="DatePickerExtensionTest" Width="200" Margin="0 5" Content="Ready: DatePickerExtension" Click="DatePickerExtensionTest_OnClick"/>
                <Button x:Name="CalculatorTest" Width="200" Margin="0 5" Content="Ready: Calculator" Click="CalculatorTest_OnClick"/>
                <Button x:Name="WatermarkTest" Width="200" Margin="0 5" Content="Watermark Tests" Click="WatermarkTest_OnClick"/>
                <Button x:Name="RippleEffectTest" Width="200" Margin="0 5" Content="Ready: RippleEffect" Click="RippleEffectTest_OnClick"/>
                <Button x:Name="FlatButtonTest" Width="200" Margin="0 5" Content="Ready: FlatButton" Click="FlatButtonTest_OnClick"/>
                <Button x:Name="ChromeTest" Width="200" Margin="0 5" Content="Ready: Chrome tests" Click="ChromeTest_OnClick"/>
                <Button x:Name="ColorPickerTest" Width="200" Margin="0 5" Content="Ready: ColorPickerTest" Click="ColorPickerTest_OnClick"/>
            </StackPanel>

            <StackPanel Grid.Column="2" Orientation="Vertical" Margin="5">
                <Label>Others:</Label>
                <Button x:Name="KeyboardTest" Margin="5" Content="Others: Keyboard" Click="KeyboardTest_OnClick"/>
            </StackPanel>

            <StackPanel Grid.Column="3" Orientation="Vertical" Margin="5">
                <Label>Tests:</Label>
                <Button x:Name="WiPTest" Margin="5" Content="WiP Tests" Click="WiPTest_OnClick"/>
            </StackPanel>

            <StackPanel Grid.Column="4" Orientation="Vertical" Margin="5">
                <Label>Obsolete:</Label>
                <Button x:Name="ObsoleteNumericUpDownTest" Width="200" Margin="0 5" Content="Obsolete: NumericUpDown" Click="ObsoleteNumericUpDownTest_OnClick"/>
                <Button x:Name="ObsoleteRippleButtonTest" Width="250" Margin="0 5" Content="Obsolete (use RippleEffect): RippleButton" Click="ObsoleteRippleButtonTest_OnClick"/>
                <Button x:Name="ObsoleteTests" Width="200" Margin="0 5" Content="Obsolete: ControlLibrary" Click="ObsoleteControlLibrary_OnClick"/>
                <Button x:Name="ObsoleteMonochromeButtonTest" Width="200" Margin="0 5" Content="Obsolete: MonochromeButton" Click="ObsoleteMonochromeButtonTest_OnClick"/>
            </StackPanel>

        </Grid>
    </Grid>
</Window>
