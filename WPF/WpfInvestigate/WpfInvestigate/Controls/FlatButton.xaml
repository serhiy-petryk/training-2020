<ResourceDictionary x:Class="WpfInvestigate.Controls.FlatButton"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:common="clr-namespace:WpfInvestigate.Common"
                    xmlns:converters="clr-namespace:WpfInvestigate.Controls.FlatButtonConverters">

    <Style x:Key="SimpleButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlatButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="BorderThickness" Value="0"/>
        <!-- Can't use binding for background because there is VS Designer error -->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Converter={x:Static converters:GetForegroundBrushConverter.Instance}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="True">
                        <Border.BorderBrush>
                            <SolidColorBrush x:Name="PART_BorderBrush"/>
                        </Border.BorderBrush>
                        <Border.Resources>
                            <Storyboard x:Key="NormalState">
                                <DoubleAnimation To="0.7" Storyboard.TargetProperty="Opacity" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:GetBackgroundColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                <ColorAnimation Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:GetForegroundColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                <ColorAnimation Storyboard.TargetName="PART_BorderBrush" Storyboard.TargetProperty="Color" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:GetBackgroundColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                            </Storyboard>
                            <Storyboard x:Key="MouseOverState">
                                <DoubleAnimation To="1" Storyboard.TargetProperty="Opacity" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:GetMouseOverBackgroundColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                <ColorAnimation Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:GetForegroundColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                <ColorAnimation Storyboard.TargetName="PART_BorderBrush" Storyboard.TargetProperty="Color" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:GetBorderColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                            </Storyboard>
                            <Storyboard x:Key="PressedState">
                                <DoubleAnimation To="0.7" Storyboard.TargetProperty="Opacity" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:GetForegroundColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                <ColorAnimation Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:GetBackgroundColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                <ColorAnimation Storyboard.TargetName="PART_BorderBrush" Storyboard.TargetProperty="Color" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static converters:GetForegroundColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                            </Storyboard>
                        </Border.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <!-- Bindings for VisualState have to define in Resources because there is C# error -->
                                <VisualState x:Name="Normal" Storyboard="{StaticResource NormalState}"/>
                                <VisualState x:Name="MouseOver" Storyboard="{StaticResource MouseOverState}"/>
                                <VisualState x:Name="Pressed" Storyboard="{StaticResource PressedState}"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation To="0.35" Storyboard.TargetProperty="Opacity" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ContentControl x:Name="PART_Content" Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Focusable="False" IsTabStop="False"
                                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                            Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ClearButtonStyle" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource FlatButtonStyle}" x:Shared="False">
        <Setter Property="Content">
            <Setter.Value>
                <Viewbox UseLayoutRounding="False">
                    <Grid Width="10" Height="10">
                        <Line StrokeThickness="2" X1="0" X2="10" Y1="0" Y2="10" Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Control}}, Path=Foreground}" />
                        <Line StrokeThickness="2" X1="0" X2="10" Y1="10" Y2="0" Stroke="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Control}}, Path=Foreground}" />
                    </Grid>
                </Viewbox>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
