<UserControl x:Class="WpfInvestigate.Controls.TimePickerBase"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:common="clr-namespace:WpfInvestigate.Common" 
             xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:controls="clr-namespace:WpfInvestigate.Controls"
             mc:Ignorable="d">

    <UserControl.Resources>
        <common:SuppressXamlErrorConverter x:Key="SuppressXamlErrorConverter" />
        <SolidColorBrush x:Key="CalendarForegroundBrush" Color="#FF333333" x:Shared="False"/>
        <SolidColorBrush x:Key="CalendarBackgroundBrush" Color="#FFA8DAF2" x:Shared="False"/>
        <SolidColorBrush x:Key="CalendarBorderBrush" Color="#FF3399FF" x:Shared="False"/>

        <Style TargetType="{x:Type DataGridCell}">
            <Setter Property="TextBlock.FontSize" Value="10" />
            <Setter Property="TextBlock.Foreground" Value="{StaticResource CalendarForegroundBrush}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".75" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackground"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Rectangle x:Name="TodayBackground" Fill="#FFAAAAAA" Opacity="0" RadiusY="1" RadiusX="1"/>
                            <Rectangle x:Name="SelectedBackground" Fill="{StaticResource CalendarBackgroundBrush}" Opacity="0" RadiusY="1" RadiusX="1"/>
                            <Border x:Name="HighlightBackground"  Opacity="0" BorderBrush="{StaticResource CalendarBorderBrush}" BorderThickness="1" Background="{StaticResource CalendarBackgroundBrush}" CornerRadius="1"/>
                            <ContentPresenter x:Name="NormalText" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CalendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.1" To="0.5" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="HighlightBackground"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected"/>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".75" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBackground"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ActiveStates">
                                    <VisualState x:Name="Active"/>
                                    <VisualState x:Name="Inactive">
                                        <Storyboard>
                                            <ColorAnimation Duration="0" To="#FF777777" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="NormalText"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DayStates">
                                    <VisualState x:Name="RegularDay"/>
                                    <VisualState x:Name="Today">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TodayBackground"/>
                                            <ColorAnimation Duration="0" To="#FFFFFFFF" Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="NormalText"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="TodayBackground" Fill="#FFAAAAAA" Opacity="0" RadiusY="1" RadiusX="1"/>
                            <Rectangle x:Name="SelectedBackground" Fill="{StaticResource CalendarBackgroundBrush}" Opacity="0" RadiusY="1" RadiusX="1"/>
                            <Border x:Name="HighlightBackground"  Opacity="0" BorderBrush="{StaticResource CalendarBorderBrush}" BorderThickness="1" Background="{StaticResource CalendarBackgroundBrush}" CornerRadius="1"/>
                            <ContentPresenter x:Name="NormalText" TextElement.Foreground="{StaticResource CalendarForegroundBrush}" Margin="5,1,5,1" HorizontalAlignment="Center" VerticalAlignment="Center" SnapsToDevicePixels="True"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ================================= -->
        <Style TargetType="DataGridRow">
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Self}, Converter={x:Static controls:TimePickerBase+DataGridRowBackgroundConverter.Instance}}"/>
        </Style>

        <Style x:Key="TimeSelectorStyle" TargetType="DataGrid">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="AutoGenerateColumns" Value="True"/>
            <Setter Property="HeadersVisibility" Value="None"/>
            <Setter Property="ColumnWidth" Value="*"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="SelectionUnit" Value="Cell"/>
            <Setter Property="GridLinesVisibility" Value="None"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="CanUserResizeColumns" Value="False"/>
            <!-- not working <Setter Property="CellStyle" Value="{StaticResource TimeSelectorCellStyle}"/>-->
        </Style>

        <!-- ============= -->
        <Color x:Key="WhiteColor">#FFFFFFFF</Color>
        <Color x:Key="BlackColor">#FF000000</Color>
        <Color x:Key="Gray6">#FFCCCCCC</Color>
        <Color x:Key="HighlightColor">#FF086F9E</Color>

        <SolidColorBrush x:Key="ControlBackgroundBrush" Color="{StaticResource WhiteColor}" options:Freeze="True" />
        <SolidColorBrush x:Key="ControlBorderBrush" Color="{StaticResource Gray6}" options:Freeze="True" />
        <SolidColorBrush x:Key="ControlsDisabledBrush" Color="#A5FFFFFF" options:Freeze="True" />
        <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource Gray6}" options:Freeze="True" />
        <SolidColorBrush x:Key="TextBrush" Color="{StaticResource BlackColor}" options:Freeze="True" />
        <SolidColorBrush x:Key="TextBoxFocusBorderBrush" Color="{StaticResource BlackColor}" options:Freeze="True" />
        <SolidColorBrush x:Key="BlackBrush" Color="{StaticResource BlackColor}" options:Freeze="True" />
        <SolidColorBrush x:Key="HighlightBrush" Color="{StaticResource HighlightColor}" options:Freeze="True" />

        <FontFamily x:Key="ContentFontFamily">Segoe UI, Lucida Sans Unicode, Verdana</FontFamily>
        <system:Double x:Key="ContentFontSize">12</system:Double>

        <!-- ================================ -->
        <Style x:Key="ClockDigit" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Normal"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="0"/>
        </Style>

        <Style x:Key="TimePartPickerBase" TargetType="{x:Type controls:TimePickerBase}">
            <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Focusable" Value="True" />
            <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
            <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
            <Setter Property="MinHeight" Value="26" />
            <Setter Property="MinWidth" Value="126" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type controls:TimePickerBase}">
                        <Grid>
                            <Border x:Name="Base"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition x:Name="ButtonColumn" Width="Auto" />
                                        <ColumnDefinition x:Name="ClearButtonColumn" Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0"
                                                       Margin="{TemplateBinding Padding}"
                                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                       VerticalContentAlignment="Center"
                                                       CaretBrush="{DynamicResource BlackBrush}"
                                                       Focusable="{TemplateBinding Focusable}"
                                                       FontFamily="{TemplateBinding FontFamily}"
                                                       FontSize="{TemplateBinding FontSize}"
                                                       Foreground="{TemplateBinding Foreground}"
                                                       IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                                                       SelectionBrush="{DynamicResource HighlightBrush}">
                                    </DatePickerTextBox>

                                    <ToggleButton x:Name="PART_ToggleButton" Grid.Column="1" Focusable="True" IsTabStop="False" Width="20" Padding="2"
                                                  Style="{StaticResource FlatButtonStyle}" VerticalAlignment="Stretch"
                                                  Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPopupButtonVisible, Converter={x:Static common:VisibilityConverter.Instance}}"
                                                  IsHitTestVisible="{Binding ElementName=PART_Popup, Path=IsOpen, Converter={x:Static common:InverseBoolConverter.Instance}}"
                                                  Content="M34,52H31V38.5C29.66,39.9 28.16,40.78 26.34,41.45V37.76C27.3,37.45 28.34,36.86 29.46,36C30.59,35.15 31.36,34.15 31.78,33H34V52M45,52V48H37V45L45,33H48V45H50V48H48V52H45M45,45V38.26L40.26,45H45M18,57V23H23V20A2,2 0 0,1 25,18H29C30.11,18 31,18.9 31,20V23H45V20A2,2 0 0,1 47,18H51C52.11,18 53,18.9 53,20V23H58V57H18M21,54H55V31H21V54M48.5,20A1.5,1.5 0 0,0 47,21.5V24.5A1.5,1.5 0 0,0 48.5,26H49.5C50.34,26 51,25.33 51,24.5V21.5A1.5,1.5 0 0,0 49.5,20H48.5M26.5,20A1.5,1.5 0 0,0 25,21.5V24.5A1.5,1.5 0 0,0 26.5,26H27.5A1.5,1.5 0 0,0 29,24.5V21.5A1.5,1.5 0 0,0 27.5,20H26.5Z" />

                                    <Button x:Name="PART_ClearButton" Grid.Column="2" Focusable="True" IsTabStop="False" Width="16" Padding="3 3 2 2"
                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsClearButtonVisible, Converter={x:Static common:VisibilityConverter.Instance}}"
                                            Style="{StaticResource ClearButtonStyle}" VerticalAlignment="Stretch"/>

                                    <Border x:Name="DisabledVisualElement" Grid.Column="0" Grid.ColumnSpan="3"
                                            Background="{DynamicResource ControlsDisabledBrush}"
                                            BorderBrush="{DynamicResource ControlsDisabledBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            IsHitTestVisible="False"
                                            Opacity="0"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                    <Popup x:Name="PART_Popup" Grid.Column="0" Grid.ColumnSpan="2"
                                           AllowsTransparency="True"
                                           Focusable="False"
                                           Placement="Bottom"
                                           PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                           PopupAnimation="Fade"
                                           IsOpen="{Binding ElementName=PART_ToggleButton, Path=IsChecked}"
                                           StaysOpen="False">
                                        <Border BorderBrush="{DynamicResource ControlBorderBrush}" BorderThickness="2">
                                            <StackPanel Orientation="Vertical" Background="{DynamicResource ControlBackgroundBrush}">
                                                <StackPanel x:Name="StackPanel" Orientation="Horizontal"
                                                            Background="{DynamicResource ControlBackgroundBrush}"
                                                            HorizontalAlignment="Center">
                                                    <Calendar x:Name="PART_Calendar" Margin="2 0 -5 -14"
                                                              BorderBrush="Transparent"
                                                              FontFamily="{TemplateBinding FontFamily}"
                                                              FontSize="{TemplateBinding FontSize}"
                                                              SelectionMode="SingleDate"
                                                              CalendarDayButtonStyle="{StaticResource CalendarDayButtonStyle}"
                                                              Visibility="Collapsed" />

                                                    <!-- ============= -->
                                                    <!--     Clock     -->
                                                    <!-- ============= -->
                                                    <Viewbox x:Name="PART_Clock" Width="90" Height="90" VerticalAlignment="Center" Margin="4">
                                                        <Viewbox.Resources>
                                                            <SolidColorBrush x:Key="RedBrush" Color="#FFE10000" />
                                                        </Viewbox.Resources>
                                                        <Canvas Width="120" Height="120" Margin="0" SnapsToDevicePixels="False">
                                                            <!-- ============= -->
                                                            <Ellipse Width="120" Height="120" Margin="0" Stroke="{DynamicResource BlackBrush}" Opacity="0.7" StrokeThickness="4" Effect="{StaticResource ShadowEffect}"/>

                                                            <TextBlock Text="12" Canvas.Left="53" Canvas.Top="8" Style="{StaticResource ClockDigit}" />
                                                            <TextBlock Text="1" Canvas.Left="77" Canvas.Top="13" Style="{StaticResource ClockDigit}" />
                                                            <TextBlock Text="2" Canvas.Left="93" Canvas.Top="28" Style="{StaticResource ClockDigit}" />
                                                            <TextBlock Text="3" Canvas.Left="100" Canvas.Top="50" Style="{StaticResource ClockDigit}" />
                                                            <TextBlock Text="4" Canvas.Left="93" Canvas.Top="72" Style="{StaticResource ClockDigit}" />
                                                            <TextBlock Text="5" Canvas.Left="77" Canvas.Top="87" Style="{StaticResource ClockDigit}" />
                                                            <TextBlock Text="6" Canvas.Left="56" Canvas.Top="92" Style="{StaticResource ClockDigit}" />
                                                            <TextBlock Text="7" Canvas.Left="35" Canvas.Top="87" Style="{StaticResource ClockDigit}" />
                                                            <TextBlock Text="8" Canvas.Left="19" Canvas.Top="72" Style="{StaticResource ClockDigit}" />
                                                            <TextBlock Text="9" Canvas.Left="12" Canvas.Top="50" Style="{StaticResource ClockDigit}" />
                                                            <TextBlock Text="10" Canvas.Left="19" Canvas.Top="28" Style="{StaticResource ClockDigit}" />
                                                            <TextBlock Text="11" Canvas.Left="35" Canvas.Top="13" Style="{StaticResource ClockDigit}" />

                                                            <ItemsControl Margin="59 3 0 0" ItemsSource="{x:Static controls:TimePickerBase.DialIntervalOf5}">
                                                                <ItemsControl.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <StackPanel Height="57" Orientation="Horizontal" RenderTransformOrigin="0.5,1">
                                                                            <StackPanel.RenderTransform>
                                                                                <RotateTransform Angle="{Binding Converter={StaticResource SuppressXamlErrorConverter}, Mode=OneTime}" />
                                                                            </StackPanel.RenderTransform>
                                                                            <Rectangle Width="2" Height="6" Margin="0 -49 0 0" Fill="{DynamicResource BlackBrush}" />
                                                                        </StackPanel>
                                                                    </DataTemplate>
                                                                </ItemsControl.ItemTemplate>
                                                                <ItemsControl.ItemsPanel>
                                                                    <ItemsPanelTemplate>
                                                                        <Canvas IsItemsHost="True" />
                                                                    </ItemsPanelTemplate>
                                                                </ItemsControl.ItemsPanel>
                                                            </ItemsControl>
                                                            <ItemsControl Margin="59 3 0 0" ItemsSource="{x:Static controls:TimePickerBase.DialIntervalOf1}">
                                                                <ItemsControl.ItemTemplate>
                                                                    <DataTemplate>
                                                                        <StackPanel Height="57" Orientation="Horizontal" RenderTransformOrigin="0.5,1">
                                                                            <StackPanel.RenderTransform>
                                                                                <RotateTransform Angle="{Binding Converter={StaticResource SuppressXamlErrorConverter}, Mode=OneTime}" />
                                                                            </StackPanel.RenderTransform>
                                                                            <Ellipse Width="2" Height="2" Margin="0 -49.75 0 0" Fill="{DynamicResource BlackBrush}" />
                                                                        </StackPanel>
                                                                    </DataTemplate>
                                                                </ItemsControl.ItemTemplate>
                                                                <ItemsControl.ItemsPanel>
                                                                    <ItemsPanelTemplate>
                                                                        <Canvas IsItemsHost="True" />
                                                                    </ItemsPanelTemplate>
                                                                </ItemsControl.ItemsPanel>
                                                            </ItemsControl>
 
                                                            <Polygon x:Name="PART_HourHand" Canvas.Left="58" Canvas.Top="22" Margin="0 3 0 0" Points="1.5,0, 2.5,0, 4,35, 0,35" Fill="{DynamicResource BlackBrush}" RenderTransformOrigin="0.5,1" />
                                                            <Polygon x:Name="PART_MinuteHand" Canvas.Top="8" Canvas.Left="58" Margin="0 3 0 0" Points="1.5,0, 2.5,0, 4,49, 0,49" Fill="{DynamicResource BlackBrush}" RenderTransformOrigin="0.5,1" />
                                                            <Ellipse Canvas.Left="57" Canvas.Top="57" Width="6" Height="6" Fill="{DynamicResource BlackBrush}" />
                                                            <Canvas x:Name="PART_SecondArea" Visibility="{Binding ElementName=PART_SecondSelector, Path=Visibility}">
                                                                <Ellipse Canvas.Left="57" Canvas.Top="57" Width="6" Height="6" Fill="{StaticResource RedBrush}" />
                                                                <Polygon x:Name="PART_SecondHand" Canvas.Top="0" Canvas.Left="59.5" Margin="0 9 0 0" Points="0,0,1.5,0,1.5,52,3,65,-1.5,65,0,52" Fill="{StaticResource RedBrush}" RenderTransformOrigin="0.5,0.8" />
                                                            </Canvas>
                                                        </Canvas>
                                                    </Viewbox>
                                                </StackPanel>

                                                <!-- ============= -->
                                                <!-- Time selector -->
                                                <!-- ============= -->
                                                <Border x:Name="PART_Selectors" Margin="4 0 4 4"
                                                        BorderBrush="{StaticResource CalendarBorderBrush}"
                                                        BorderThickness="0 0 1 0" HorizontalAlignment="Left"
                                                        Visibility="{Binding ElementName=PART_Clock, Path=Visibility}">
                                                    <Grid>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition Width="Auto" />
                                                        </Grid.ColumnDefinitions>

                                                        <Grid Grid.Column="0">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition Height="Auto" />
                                                            </Grid.RowDefinitions>
                                                            <Border Grid.Row="0" BorderThickness="1 1 0 0"
                                                                    BorderBrush="{StaticResource CalendarBorderBrush}"
                                                                    Background="#FFECF0F4"
                                                                    Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:TimePickerBase}, Path=IsAmPmMode, Converter={x:Static common:VisibilityConverter.Instance}}">
                                                                <TextBlock
                                                                    Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:TimePickerBase}, Path=AMText}"
                                                                    HorizontalAlignment="Stretch"
                                                                    TextAlignment="Center" FontSize="10"
                                                                    FontWeight="SemiBold" />
                                                            </Border>
                                                            <Border Grid.Row="2" BorderThickness="1 0 0 1"
                                                                    BorderBrush="{StaticResource CalendarBorderBrush}"
                                                                    Background="#FFECF0F4"
                                                                    Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:TimePickerBase}, Path=IsAmPmMode, Converter={x:Static common:VisibilityConverter.Instance}}">
                                                                <TextBlock
                                                                    Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:TimePickerBase}, Path=PMText}"
                                                                    HorizontalAlignment="Stretch"
                                                                    TextAlignment="Center" FontSize="10"
                                                                    FontWeight="SemiBold" />
                                                            </Border>

                                                            <DataGrid x:Name="PART_NightHourSelector" Grid.Row="1"
                                                                      BorderBrush="{StaticResource CalendarBorderBrush}"
                                                                      BorderThickness="1 1 0 1"
                                                                      ItemsSource="{Binding Source={x:Static controls:TimePickerBase+SelectorRow.NightHourRows}}"
                                                                      FontFamily="{TemplateBinding FontFamily}"
                                                                      Style="{StaticResource TimeSelectorStyle}" />

                                                            <DataGrid x:Name="PART_DayHourSelector" Grid.Row="3"
                                                                      BorderBrush="{StaticResource CalendarBorderBrush}"
                                                                      BorderThickness="1 0 0 1"
                                                                      ItemsSource="{Binding Source={x:Static controls:TimePickerBase+SelectorRow.DayHourRows}}"
                                                                      FontFamily="{TemplateBinding FontFamily}"
                                                                      Style="{StaticResource TimeSelectorStyle}"
                                                                      Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=controls:TimePickerBase}, Path=IsAmPmMode, Converter={x:Static common:VisibilityConverter.Instance}}" />
                                                        </Grid>

                                                        <DataGrid x:Name="PART_MinuteSelector" Grid.Column="1"
                                                                  BorderBrush="{StaticResource CalendarBorderBrush}"
                                                                  BorderThickness="1 1 0 1"
                                                                  ItemsSource="{Binding Source={x:Static controls:TimePickerBase+SelectorRow.MinuteRows}}"
                                                                  FontFamily="{TemplateBinding FontFamily}"
                                                                  Style="{StaticResource TimeSelectorStyle}" />

                                                        <DataGrid x:Name="PART_SecondSelector" Grid.Column="2"
                                                                  BorderBrush="{StaticResource CalendarBorderBrush}"
                                                                  BorderThickness="1 1 0 1"
                                                                  ItemsSource="{Binding Source={x:Static controls:TimePickerBase+SelectorRow.MinuteRows}}"
                                                                  FontFamily="{TemplateBinding FontFamily}"
                                                                  Style="{StaticResource TimeSelectorStyle}" />
                                                    </Grid>
                                                </Border>
                                            </StackPanel>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Base" Property="BorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush)}" />
                            </Trigger>
                            <Trigger SourceName="PART_TextBox" Property="IsFocused" Value="True">
                                <Setter TargetName="Base" Property="BorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter TargetName="Base" Property="BorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="1" />
                            </Trigger>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter TargetName="PART_Calendar" Property="IsHitTestVisible" Value="False" />
                                <Setter TargetName="PART_Selectors" Property="IsHitTestVisible" Value="False" />
                            </Trigger>
                            <Trigger Property="IsDatePickerVisible" Value="True">
                                <Setter TargetName="PART_Calendar" Property="Visibility" Value="Visible" />
                                <!--<Setter TargetName="PART_TextBox" Property="Text" Value="{Binding Path=SelectedDate, RelativeSource={RelativeSource TemplatedParent}}" />-->
                            </Trigger>
                            <Trigger Property="IsDatePickerVisible" Value="False">
                                <!--  PackIconMaterial - Clock  -->
                                <!--<Setter TargetName="PART_ButtonIcon" Property="Content" Value="M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z" />
                                -->
                                <Setter TargetName="PART_ToggleButton" Property="Content" Value="M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z" />
                            </Trigger>
                            <DataTrigger Binding="{Binding ElementName=PART_Clock, Path=Visibility}" Value="Collapsed">
                                <Setter TargetName="PART_Calendar" Property="Margin" Value="0 0 0 -4" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}" />
        </Style>

        <Style BasedOn="{StaticResource TimePartPickerBase}" TargetType="{x:Type controls:DateTimePicker}">
            <Setter Property="controls:WatermarkEffect.Watermark" Value="Select a date" />
            <Setter Property="IsTodayHighlighted" Value="True" />
        </Style>

        <Style BasedOn="{StaticResource TimePartPickerBase}" TargetType="{x:Type controls:TimePicker}">
            <Setter Property="controls:WatermarkEffect.Watermark" Value="Select a time" />
        </Style>
    </UserControl.Resources>
</UserControl>
