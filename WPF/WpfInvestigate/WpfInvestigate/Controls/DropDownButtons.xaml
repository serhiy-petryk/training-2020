<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:WpfInvestigate.Controls"
             xmlns:effects="clr-namespace:WpfInvestigate.Controls.Effects"
             xmlns:common="clr-namespace:WpfInvestigate.Common">

    <Geometry x:Key="CloseGeometry">M22 4 L18 0 L11 7 L4 0 L0 4 L7 11 L0 18 L4 22 L11 15 L18 22 L22 18 L15 11 L22 4Z</Geometry>
    <Geometry x:Key="DownArrowGeometry">M0 0 L1 1 L2 0 Z</Geometry>
    <SolidColorBrush x:Key="BorderBrush" Color="#FF3399FF"/>
    <SolidColorBrush x:Key="ForegroundBrush" Color="#FF0069D6"/>

    <Style x:Key="SplitButtonStyle" TargetType="ToggleButton">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsThreeState" Value="False"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <Border x:Name="PART_BackBorder" Margin="0" Padding="0" BorderThickness="0" Background="{TemplateBinding Background}"/>

                        <Border x:Name="PART_FrontBorder" Margin="0" Padding="0"
                                BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                                CornerRadius="{Binding ElementName=PART_BackBorder, Path=CornerRadius}">

                            <Grid Margin="0">
                                <Grid.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=PART_BackBorder}" />
                                </Grid.OpacityMask>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Button x:Name="PART_Content" Grid.Column="0" Content="{TemplateBinding Content}" 
                                        Margin="0" Padding="{TemplateBinding Padding}" BorderThickness="0"
                                        Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}"
                                        Style="{StaticResource DefaultButtonBaseStyle}"
                                        HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="Stretch" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                <Rectangle Grid.Column="1" Margin="0" Fill="{TemplateBinding BorderBrush}" VerticalAlignment="Stretch"
                                           Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}"/>

                                <ToggleButton x:Name="PART_DropDown" Grid.Column="2" BorderThickness="0" Padding="0" Margin="0"
                                              IsThreeState="False" Width="15" VerticalAlignment="Stretch"
                                              IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}"
                                              Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}"
                                              Style="{StaticResource DefaultButtonBaseStyle}"
                                              effects:DualPathToggleButtonEffect.GeometryOff="{StaticResource DownArrowGeometry}"
                                              effects:DualPathToggleButtonEffect.GeometryOn="{StaticResource CloseGeometry}"
                                              effects:DualPathToggleButtonEffect.Width="9"/>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MonochromeSplitButtonStyle" TargetType="ToggleButton">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsThreeState" Value="False"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="PART_Content" Content="{TemplateBinding Content}" Margin="0" Padding="{TemplateBinding Padding}"
                                            BorderThickness="1"
                                            effects:ChromeEffect.MonochromeAnimated="{Binding Background, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:ColorHslBrush.Instance}}"
                                            effects:ChromeEffect.ChromeMatrix="+0%,+70%,+0%,40, +0%,+70%,+50%,100, +25%,+25%/+75%,+50%,100, +60%,+60%/+75%,+50%,100"
                                            effects:ClickEffect.RippleColor="{Binding Background, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+50%}"
                                            HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="Stretch" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                        </Button>
                        <ToggleButton Grid.Column="1" x:Name="PART_DropDown" BorderThickness="0 1 1 1" Padding="0" Margin="0"
                                      IsThreeState="False" Width="14"
                                      IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}"
                                      VerticalAlignment="Stretch"
                                      UseLayoutRounding="False"
                                      effects:ChromeEffect.MonochromeAnimated="{Binding Path=Background, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:ColorHslBrush.Instance}}"
                                      effects:ChromeEffect.ChromeMatrix="+0%,+70%,+0%,40, +0%,+70%,+50%,100, +25%,+25%/+75%,+50%,100, +60%,+60%/+75%,+50%,100"
                                      effects:DualPathToggleButtonEffect.GeometryOff="{StaticResource DownArrowGeometry}"
                                      effects:DualPathToggleButtonEffect.GeometryOn="{StaticResource CloseGeometry}"
                                      effects:DualPathToggleButtonEffect.Width="9">
                        </ToggleButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarSplitButtonStyle" TargetType="ToggleButton">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsThreeState" Value="False"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="Root">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="ContentPart" Content="{TemplateBinding Content}" Margin="0" Padding="{TemplateBinding Padding}"
                                            Foreground="{TemplateBinding Foreground}" BorderThickness="1"
                                            HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="Stretch" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=Root, Path=IsMouseOver}" Value="True">
                                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=DropDownPart, Path=IsChecked}" Value="True">
                                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                        <ToggleButton Grid.Column="1" x:Name="DropDownPart" Foreground="{TemplateBinding Foreground}" BorderThickness="0 1 1 1" Padding="0" Margin="0"
                                      IsThreeState="False" Width="13"
                                      IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Mode=TwoWay}"
                                      VerticalAlignment="Stretch"
                                      UseLayoutRounding="False"
                                      effects:DualPathToggleButtonEffect.GeometryOff="{StaticResource DownArrowGeometry}"
                                      effects:DualPathToggleButtonEffect.GeometryOn="{StaticResource CloseGeometry}"
                                      effects:DualPathToggleButtonEffect.Width="9">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=Root, Path=IsMouseOver}" Value="True">
                                            <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DropDownButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource DefaultButtonBaseStyle}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="BorderBrush" Value="#FF333333"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsThreeState" Value="False"/>
        <Setter Property="effects:ChromeEffect.ChromeMatrix" Value="+0%,+70%,+0%,40, +0%,+70%,+50%,100, +25%,+25%/+75%,+50%,100"/>
        <Setter Property="effects:DualPathToggleButtonEffect.GeometryOff" Value="{StaticResource DownArrowGeometry}"/>
        <Setter Property="effects:DualPathToggleButtonEffect.GeometryOn" Value="{StaticResource CloseGeometry}"/>
        <Setter Property="effects:DualPathToggleButtonEffect.Width" Value="9"/>
        <Setter Property="effects:DualPathToggleButtonEffect.MarginOff" Value="3 0"/>
        <Setter Property="effects:DualPathToggleButtonEffect.MarginOn" Value="3 0"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>

    <Style x:Key="ToolBarDropDownButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsThreeState" Value="False"/>
        <Setter Property="effects:DualPathToggleButtonEffect.GeometryOff" Value="{StaticResource DownArrowGeometry}"/>
        <Setter Property="effects:DualPathToggleButtonEffect.GeometryOn" Value="{StaticResource CloseGeometry}"/>
        <Setter Property="effects:DualPathToggleButtonEffect.Width" Value="9"/>
        <Setter Property="effects:DualPathToggleButtonEffect.MarginOff" Value="2 0"/>
        <Setter Property="effects:DualPathToggleButtonEffect.MarginOn" Value="2 0"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>

    <Style x:Key="DropDownMonochromeButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource MonochromeButtonStyle}">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsThreeState" Value="False"/>
        <Setter Property="effects:DualPathToggleButtonEffect.GeometryOff" Value="{StaticResource DownArrowGeometry}"/>
        <Setter Property="effects:DualPathToggleButtonEffect.GeometryOn" Value="{StaticResource CloseGeometry}"/>
        <Setter Property="effects:DualPathToggleButtonEffect.Width" Value="9"/>
        <Setter Property="effects:DualPathToggleButtonEffect.MarginOff" Value="2 0"/>
        <Setter Property="effects:DualPathToggleButtonEffect.MarginOn" Value="2 0"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
    </Style>

</ResourceDictionary>