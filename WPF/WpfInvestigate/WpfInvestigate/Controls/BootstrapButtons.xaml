<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:WpfInvestigate.Controls"
                    xmlns:common="clr-namespace:WpfInvestigate.Common"
                    xmlns:effects="clr-namespace:WpfInvestigate.Controls.Effects">


    <Style x:Key="DefaultButtonBaseStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <!-- Double border (here is my variant (Serhiy Petryk)): to remove gap between border and content (see https://stackoverflow.com/questions/18581204/how-to-fix-empty-space-between-a-border-and-a-background-in-button-with-rounded) -->
                    <Grid SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <Border x:Name="PART_BackBorder" Margin="0" Padding="0"
                                BorderThickness="1" BorderBrush="Transparent" Background="{TemplateBinding BorderBrush}"/>
                        <Border x:Name="PART_FrontBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                                Margin="0" Padding="{TemplateBinding Padding}"
                                CornerRadius="{Binding ElementName=PART_BackBorder, Path=CornerRadius}">
                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type Path}">
                <Setter Property="Fill" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=Foreground}"/>
            </Style>
            <Style TargetType="{x:Type Line}">
                <Setter Property="Stroke" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ContentControl}}, Path=Foreground}"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="ClearAnimatedButtonStyle" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource DefaultButtonBaseStyle}" x:Shared="False">
        <Setter Property="effects:ChromeEffect.BichromeAnimatedBackground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Control}}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}"/>
        <Setter Property="effects:ChromeEffect.BichromeAnimatedForeground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Control}}, Path=Foreground, Converter={x:Static common:ColorHslBrush.Instance}}"/>
        <Setter Property="Content">
            <Setter.Value>
                <Viewbox UseLayoutRounding="False">
                    <Grid Width="10" Height="10">
                        <Line StrokeThickness="2" X1="0" X2="10" Y1="0" Y2="10" />
                        <Line StrokeThickness="2" X1="0" X2="10" Y1="10" Y2="0" />
                    </Grid>
                </Viewbox>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MonochromeRippleButtonBaseStyle" BasedOn="{StaticResource DefaultButtonBaseStyle}" TargetType="{x:Type ButtonBase}">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="effects:ChromeEffect.MonochromeAnimated" Value="White"/>
        <Setter Property="effects:ClickEffect.RippleColor" Value="{Binding RelativeSource={RelativeSource Self}, Path=(effects:ChromeEffect.MonochromeAnimated), Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+50%}"/>
    </Style>

    <!-- ======================================================================== -->
    <!-- Colors & Bootstrap Brushes (taken from https://getbootstrap.com/ v4.5.2) -->
    <!-- ======================================================================== -->
    <Color x:Key="PrimaryColor">#FF007bff</Color>
    <Color x:Key="SecondaryColor">#FF6c757d</Color>
    <Color x:Key="SuccessColor">#28a745</Color>
    <Color x:Key="DangerColor">#dc3545</Color>
    <Color x:Key="WarningColor">#ffc107</Color>
    <Color x:Key="InfoColor">#17a2b8</Color>
    <Color x:Key="LightColor">#f8f9fa</Color>
    <Color x:Key="DarkColor">#343a40</Color>
    <Color x:Key="BlueColor">#007bff</Color>
    <Color x:Key="IndigoColor">#6610f2</Color>
    <Color x:Key="PurpleColor">#6f42c1</Color>
    <Color x:Key="PinkColor">#e83e8c</Color>
    <Color x:Key="RedColor">#dc3545</Color>
    <Color x:Key="OrangeColor">#fd7e14</Color>
    <Color x:Key="YellowColor">#ffc107</Color>
    <Color x:Key="GreenColor">#28a745</Color>
    <Color x:Key="TealColor">#20c997</Color>
    <Color x:Key="CyanColor">#17a2b8</Color>
    <Color x:Key="WhiteColor">#ffffff</Color>
    <Color x:Key="GrayColor">#6c757d</Color>
    <Color x:Key="GrayDarkColor">#343a40</Color>

    <!--<SolidColorBrush x:Key="PrimaryBrush" Color="#FF007bff"/>
    <SolidColorBrush x:Key="SecondaryBrush" Color="#FF6c757d"/>
    <SolidColorBrush x:Key="SuccessBrush" Color="#28a745"/>
    <SolidColorBrush x:Key="DangerBrush" Color="#dc3545"/>
    <SolidColorBrush x:Key="WarningBrush" Color="#ffc107"/>
    <SolidColorBrush x:Key="InfoBrush" Color="#17a2b8"/>
    <SolidColorBrush x:Key="LightBrush" Color="#f8f9fa"/>
    <SolidColorBrush x:Key="DarkBrush" Color="#343a40"/>
    <SolidColorBrush x:Key="BlueBrush" Color="#007bff"/>
    <SolidColorBrush x:Key="IndigoBrush" Color="#6610f2"/>
    <SolidColorBrush x:Key="PurpleBrush" Color="#6f42c1"/>
    <SolidColorBrush x:Key="PinkBrush" Color="#e83e8c"/>
    <SolidColorBrush x:Key="RedBrush" Color="#dc3545"/>
    <SolidColorBrush x:Key="OrangeBrush" Color="#fd7e14"/>
    <SolidColorBrush x:Key="YellowBrush" Color="#ffc107"/>
    <SolidColorBrush x:Key="GreenBrush" Color="#28a745"/>
    <SolidColorBrush x:Key="TealBrush" Color="#20c997"/>
    <SolidColorBrush x:Key="CyanBrush" Color="#17a2b8"/>
    <SolidColorBrush x:Key="WhiteBrush" Color="#ffffff"/>
    <SolidColorBrush x:Key="GrayBrush" Color="#6c757d"/>
    <SolidColorBrush x:Key="GrayDarkBrush" Color="#343a40"/>-->

    <Style x:Key="BootstrapButton" BasedOn="{StaticResource DefaultButtonBaseStyle}" TargetType="{x:Type ButtonBase}">
        <Setter Property="effects:CornerRadiusEffect.CornerRadius" Value="4"/>
        <Setter Property="effects:ChromeEffect.MonochromeAnimated" Value="Gray"/>
        <Setter Property="effects:ChromeEffect.ChromeMatrix" Value="+0,100,+0,65, +0,100,+0,100, -7.5,100,-10,100, -10,100,-12.5,100"/>
        <Setter Property="effects:FocusEffect.Thickness" Value="3"/>
        <Setter Property="effects:FocusEffect.Brush" Value="{Binding RelativeSource={RelativeSource Self}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=72}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12 6"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <Style x:Key="BootstrapLightButton" BasedOn="{StaticResource BootstrapButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="effects:ChromeEffect.ChromeMatrix" Value="+0,15,+0,65, +0,15,+0,100, +7.5,15,+10,100, +10,15,+12.5,100"/>
    </Style>

    <Style x:Key="PrimaryButton" BasedOn="{StaticResource BootstrapButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="effects:ChromeEffect.MonochromeAnimated" Value="{StaticResource PrimaryColor}"/>
    </Style>
    <Style x:Key="SecondaryButton" BasedOn="{StaticResource BootstrapButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="effects:ChromeEffect.MonochromeAnimated" Value="{StaticResource SecondaryColor}"/>
    </Style>
    <Style x:Key="SuccessButton" BasedOn="{StaticResource BootstrapButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="effects:ChromeEffect.MonochromeAnimated" Value="{StaticResource SuccessColor}"/>
    </Style>
    <Style x:Key="DangerButton" BasedOn="{StaticResource BootstrapButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="effects:ChromeEffect.MonochromeAnimated" Value="{StaticResource DangerColor}"/>
    </Style>
    <Style x:Key="WarningButton" BasedOn="{StaticResource BootstrapLightButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="effects:ChromeEffect.MonochromeAnimated" Value="{StaticResource WarningColor}"/>
    </Style>
    <Style x:Key="InfoButton" BasedOn="{StaticResource BootstrapButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="effects:ChromeEffect.MonochromeAnimated" Value="{StaticResource InfoColor}"/>
    </Style>
    <Style x:Key="LightButton" BasedOn="{StaticResource BootstrapLightButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="effects:ChromeEffect.MonochromeAnimated" Value="{StaticResource LightColor}"/>
    </Style>
    <Style x:Key="DarkButton" BasedOn="{StaticResource BootstrapButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="effects:ChromeEffect.MonochromeAnimated" Value="{StaticResource DarkColor}"/>
    </Style>

</ResourceDictionary>