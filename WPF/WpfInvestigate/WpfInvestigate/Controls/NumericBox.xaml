<UserControl x:Class="WpfInvestigate.Controls.NumericBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:WpfInvestigate.Controls"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:common="clr-namespace:WpfInvestigate.Common"
             xmlns:effects="clr-namespace:WpfInvestigate.Effects"
             mc:Ignorable="d" 
             GotFocus="OnNumericBoxGotFocus">

    <UserControl.Resources>
        <Geometry x:Key="CalculatorGeometry">M7,2H17A2,2 0 0,1 19,4V20A2,2 0 0,1 17,22H7A2,2 0 0,1 5,20V4A2,2 0 0,1 7,2M7,4V8H17V4H7M7,10V12H9V10H7M11,10V12H13V10H11M15,10V12H17V10H15M7,14V16H9V14H7M11,14V16H13V14H11M15,14V16H17V14H15M7,18V20H9V18H7M11,18V20H13V18H11M15,18V20H17V18H15Z</Geometry>
        <Geometry x:Key="PlusGeometry">F1 M 35,19L 41,19L 41,35L 57,35L 57,41L 41,41L 41,57L 35,57L 35,41L 19,41L 19,35L 35,35L 35,19 Z</Geometry>
        <Geometry x:Key="MinusGeometry">F1 M 19,38L 57,38L 57,44L 19,44L 19,38 Z</Geometry>

        <system:Double x:Key="ButtonsWidth">14</system:Double>

        <Style TargetType="local:NumericBox">
            <Setter Property="BorderBrush" Value="Black"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="MinHeight" Value="16" />
            <Setter Property="MinWidth" Value="60" />
            <Setter Property="Width" Value="100" />
            <Setter Property="Padding" Value="1" />
            <Setter Property="Focusable" Value="True" />
            <Setter Property="IsTabStop" Value="True" />
            <Setter Property="effects:ChromeEffect.ChromeMatrix" Value="{StaticResource UserInputControlChromeMatrix}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type local:NumericBox}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <Rectangle Grid.Column="1" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}" Fill="{TemplateBinding BorderBrush}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsTextBoxLeftBorderVisible, Converter={x:Static common:VisibilityConverter.Instance}}"/>

                                <TextBox Grid.Column="2" x:Name="PART_TextBox" BorderThickness="0" Margin="{TemplateBinding Padding}" Padding="0"
                                         VerticalAlignment="Center"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         Background="Transparent" Foreground="{TemplateBinding Foreground}"
                                         IsTabStop="{TemplateBinding IsTabStop}"
                                         SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                         TabIndex="{TemplateBinding TabIndex}"/>

                                <Rectangle Grid.Column="3" Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Right}" Fill="{TemplateBinding BorderBrush}"
                                           Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsTextBoxRightBorderVisible, Converter={x:Static common:VisibilityConverter.Instance}}"/>

                                <ToggleButton Grid.Column="4" x:Name="PART_ToggleButton" IsTabStop="False" Focusable="False"
                                              effects:ChromeEffect.BichromeAnimatedBackground="{Binding Background, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:ColorHslBrush.Instance}}"
                                              effects:ChromeEffect.BichromeAnimatedForeground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:ColorHslBrush.Instance}}"
                                              Padding="1" IsThreeState="False" Width="{StaticResource ButtonsWidth}"
                                              IsHitTestVisible="{Binding ElementName=PART_Popup, Path=IsOpen, Converter={x:Static common:MathConverter.Instance}, ConverterParameter=!}"
                                              BorderThickness="0"
                                              Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsCalculatorButtonVisible, Converter={x:Static common:VisibilityConverter.Instance}}"
                                              effects:IconEffect.Geometry="{StaticResource CalculatorGeometry}"/>

                                <RepeatButton Grid.Column="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=DownButtonColumn}" x:Name="PART_DownButton" IsTabStop="False" Focusable="False"
                                              effects:ChromeEffect.BichromeAnimatedBackground="{Binding Background, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:ColorHslBrush.Instance}}"
                                              effects:ChromeEffect.BichromeAnimatedForeground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:ColorHslBrush.Instance}}"
                                              Width="{StaticResource ButtonsWidth}" Delay="500" Interval="30" Padding="1"
                                              BorderThickness="0"
                                              Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsDownButtonsVisible, Converter={x:Static common:VisibilityConverter.Instance}}"
                                              effects:IconEffect.Geometry="{StaticResource MinusGeometry}"/>
                                <RepeatButton Grid.Column="6" x:Name="PART_UpButton" IsTabStop="False" Focusable="False"
                                              effects:ChromeEffect.BichromeAnimatedBackground="{Binding Background, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:ColorHslBrush.Instance}}"
                                              effects:ChromeEffect.BichromeAnimatedForeground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:ColorHslBrush.Instance}}"
                                              Width="{StaticResource ButtonsWidth}" Delay="500" Interval="30" Padding="1"
                                              BorderThickness="0"
                                              Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsUpButtonsVisible, Converter={x:Static common:VisibilityConverter.Instance}}"
                                              effects:IconEffect.Geometry="{StaticResource PlusGeometry}"/>

                                <Button Grid.Column="7" x:Name="PART_ClearButton" IsTabStop="False" Focusable="False"
                                        Width="{StaticResource ButtonsWidth}" Padding="1"
                                        BorderThickness="0"
                                        Style="{StaticResource ClearBichromeAnimatedButtonStyle}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsCloseButtonVisible, Converter={x:Static common:VisibilityConverter.Instance}}"/>

                                <Popup x:Name="PART_Popup"
                                       IsOpen="{Binding ElementName=PART_ToggleButton, Path=IsChecked}"
                                       AllowsTransparency="True"
                                       Focusable="False"
                                       Placement="Bottom"
                                       PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                       PopupAnimation="Fade"
                                       StaysOpen="False">
                                    <Grid>
                                        <Border Margin="0 0 10 10" Effect="{StaticResource ShadowEffect}" BorderThickness="0" Background="White"/>
                                        <local:Calculator effects:CornerRadiusEffect.CornerRadius="3" Focusable="True" Margin="0,0,10,10" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}"/>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsReadOnly" Value="True">
                                <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                                <Setter TargetName="PART_DownButton" Property="IsEnabled" Value="False" />
                                <Setter TargetName="PART_UpButton" Property="IsEnabled" Value="False" />
                                <Setter TargetName="PART_ClearButton" Property="IsEnabled" Value="False" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

</UserControl>
