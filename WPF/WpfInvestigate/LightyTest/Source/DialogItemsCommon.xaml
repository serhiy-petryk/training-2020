<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:LightyTest.Source">
    
    <!-- Basic -->
    <ControlTemplate x:Key="DarkBackgroundTemplate">
        <Grid Background="#88000000">
            <ItemsPresenter />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="LightBackgroundTemplate">
        <Grid Background="#88FFFFFF">
            <ItemsPresenter />
        </Grid>
    </ControlTemplate>

    <ItemsPanelTemplate x:Key="HorizontalPanel">
        <StackPanel Orientation="Horizontal"/>
    </ItemsPanelTemplate>
    <ItemsPanelTemplate x:Key="VerticalPanel">
        <StackPanel Orientation="Vertical" />
    </ItemsPanelTemplate>

    <!-- Style for text buttons -->
    <Style x:Key="textButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="TextBlock.FontSize" Value="16" />
        <Setter Property="TextBlock.TextAlignment" Value="Center" />
        <Setter Property="TextBlock.Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <ContentPresenter x:Name="content"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Opacity="0.7" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsDefaulted" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="content" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="content" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="3" Opacity="0.6" RenderingBias="Performance" ShadowDepth="0" Color="White" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Styles for various containers -->
    <Style x:Key="ClosableContainerStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Button DockPanel.Dock="Bottom"
                                Style="{StaticResource textButtonStyle}"
                                HorizontalAlignment="Right"
                                Command="ApplicationCommands.Close" CommandParameter="{Binding}"
                                FontFamily="Marlett" Content="r" />
                        <ContentPresenter Content="{Binding}" />
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PhotoCardStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid Background="White" Margin="10" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.Effect>
                            <DropShadowEffect Opacity="0.8" ShadowDepth="2" BlurRadius="8" />
                        </Grid.Effect>
                        <ContentPresenter Content="{Binding}" Margin="10"/>
                        <StackPanel Grid.Row="1" Margin="0,0,10,5" Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Text="Close" />
                            <Button DockPanel.Dock="Bottom"
                                    Style="{StaticResource textButtonStyle}"
                                    HorizontalAlignment="Right"
                                    Command="ApplicationCommands.Close" CommandParameter="{Binding}"
                                    Foreground="Black"
                                    FontFamily="Marlett" Content="r" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="LightGlassTemplate">
        <Grid Background="White">
            <Grid>
                <Grid.CacheMode>
                    <BitmapCache RenderAtScale="0.2" />
                </Grid.CacheMode>
                <Grid>
                    <Grid.Background>
                        <VisualBrush Visual="{Binding AdornedElement, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AdornerControl}}}"
                                     Stretch="None"
                                     AlignmentX="Left"
                                     AlignmentY="Top"
                                     ViewboxUnits="Absolute" />
                    </Grid.Background>
                    <Grid.Effect>
                        <BlurEffect Radius="20"/>
                    </Grid.Effect>
                </Grid>
            </Grid>
            <Grid Background="#44FFFFFF" />
            <ItemsPresenter />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="DarkGlassTemplate">
        <Grid Background="White">
            <Grid>
                <Grid.CacheMode>
                    <BitmapCache RenderAtScale="0.2" />
                </Grid.CacheMode>
                <Grid>
                    <Grid.Background>
                        <VisualBrush Visual="{Binding AdornedElement, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AdornerControl}}}"
                                     Stretch="None"
                                     AlignmentX="Left"
                                     AlignmentY="Top"
                                     ViewboxUnits="Absolute" />
                    </Grid.Background>
                    <Grid.Effect>
                        <BlurEffect Radius="20"/>
                    </Grid.Effect>
                </Grid>
            </Grid>
            <Grid Background="#44000000" />
            <ItemsPresenter />
        </Grid>
    </ControlTemplate>

    <!-- Animation -->
    <Duration x:Key="StoryboardDuration">00:00:00.5</Duration>
    <Storyboard x:Key="FadeInAnimation">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1.0" Duration="{StaticResource StoryboardDuration}">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseInOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>
    <Storyboard x:Key="FadeOutAnimation">
        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1.0" To="0" Duration="{StaticResource StoryboardDuration}">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseInOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>
    <Storyboard x:Key="ZoomInAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" From="0" To="1.0" Duration="{StaticResource StoryboardDuration}">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseInOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" From="0" To="1.0" Duration="{StaticResource StoryboardDuration}">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseInOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <!-- ↓When changing the center point -->
        <!--<PointAnimation Storyboard.TargetProperty="RenderTransformOrigin" To="0,0" Duration="00:00:00" />-->
    </Storyboard>
    <Storyboard x:Key="ZoomOutAnimation">
        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" From="1.0" To="0" Duration="{StaticResource StoryboardDuration}">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseInOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetProperty="(RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" From="1.0" To="0" Duration="{StaticResource StoryboardDuration}">
            <DoubleAnimation.EasingFunction>
                <CubicEase EasingMode="EaseInOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
        <!-- ↓When changing the center point -->
        <!--<PointAnimation Storyboard.TargetProperty="RenderTransformOrigin" To="0,0" Duration="00:00:00" />-->
    </Storyboard>

</ResourceDictionary>