<UserControl x:Class="ColorInvestigation.Controls.ColorPickerDT"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:common="clr-namespace:ColorInvestigation.Common"
             xmlns:controls="clr-namespace:ColorInvestigation.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="600"
             MinHeight="420" MinWidth="400"
             SnapsToDevicePixels="True"
             UseLayoutRounding="True"
             Background="#FF282828">

    <UserControl.DataContext>
        <controls:ColorPickerVM/>
    </UserControl.DataContext>

    <UserControl.Resources>
        <DataTemplate DataType="{x:Type controls:ColorPickerVM+XYSlider}">
            <Canvas Background="Transparent" MouseDown="Slider_MouseDown" MouseMove="Slider_MouseMove" MouseUp="Slider_MouseUp">
                <Grid Height="12" Canvas.Top="{Binding ySliderValue}" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=Canvas}}">
                    <Path Data="M0,0 L6,6 L0,12 Z" Fill="White" HorizontalAlignment="Left"/>
                    <Path Data="M5,1 L0,6 L5,11 Z" Fill="White" HorizontalAlignment="Right"/>
                </Grid>
            </Canvas>
        </DataTemplate>

        <DataTemplate DataType="{x:Type controls:ColorPickerVM+ColorComponent}">
            <Grid UseLayoutRounding="False" SnapsToDevicePixels="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="16"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>

                <Label Grid.Column="0" Content="{Binding Label, Mode=OneTime}" Margin="0 0 -2 0" Padding="0" Foreground="#FFE0E0E0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <Border Grid.Column="1" BorderThickness="1" BorderBrush="Gray" Margin="5 0" Background="{Binding BackgroundBrush}" Focusable="False">
                    <Canvas Background="Transparent" VerticalAlignment="Stretch"
                            MouseDown="Slider_MouseDown" MouseUp="Slider_MouseUp" MouseMove="Slider_MouseMove">
                        <Border Canvas.Left="{Binding xSliderValue}" BorderThickness="1" Background="Transparent" BorderBrush="#FF555555" Width="8"
                                Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType=Canvas}}">
                            <Border BorderThickness="1" Background="Transparent" BorderBrush="#FFEEEEEE" Width="6"/>
                        </Border>
                    </Canvas>
                </Border>
                <TextBox Grid.Column="2" BorderThickness="1" BorderBrush="Gray" Background="#FF181818" Foreground="White" Margin="0" Padding="0"
                         HorizontalAlignment="Stretch" HorizontalContentAlignment="Right"
                         VerticalAlignment="Stretch" VerticalContentAlignment="Center"
                         Text="{Binding Value, StringFormat={}{0:F1}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         GotFocus="ValueEditor_OnGotFocus" PreviewMouseLeftButtonDown="ValueEditor_OnPreviewMouseLeftButtonDown"
                         PreviewTextInput="ValueEditor_OnPreviewTextInput"/>
                <Label Grid.Column="3" Content="{Binding ValueLabel, Mode=OneTime}" Margin="2 0" Padding="0" Foreground="#FFE0E0E0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            </Grid>
        </DataTemplate>

        <DrawingBrush x:Key="SaturationAndValueSliderBaseBrush">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <GeometryDrawing>
                        <GeometryDrawing.Brush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Offset="0" Color="White"/>
                                <GradientStop Offset="1" Color="#0FFF"/>
                            </LinearGradientBrush>
                        </GeometryDrawing.Brush>
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="0,0,1,1"/>
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                    <GeometryDrawing>
                        <GeometryDrawing.Brush>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Offset="0" Color="#0000"/>
                                <GradientStop Offset="1" Color="Black"/>
                            </LinearGradientBrush>
                        </GeometryDrawing.Brush>
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="0,0,1,1"/>
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <LinearGradientBrush x:Key="HueBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#FFFF0000"/>
            <GradientStop Offset="0.167" Color="#FFFFFF00"/>
            <GradientStop Offset="0.333" Color="#FF00FF00"/>
            <GradientStop Offset="0.5" Color="#FF00FFFF"/>
            <GradientStop Offset="0.667" Color="#FF0000FF"/>
            <GradientStop Offset="0.833" Color="#FFFF00FF"/>
            <GradientStop Offset="1" Color="#FFFF0000"/>
        </LinearGradientBrush>

        <DrawingBrush x:Key="AlphaBackgroundBrush" Viewport="0,0,16,16" TileMode="Tile" ViewportUnits="Absolute">
            <DrawingBrush.Drawing>
                <DrawingGroup>
                    <GeometryDrawing Brush="#FCCC">
                        <GeometryDrawing.Geometry>
                            <RectangleGeometry Rect="0,0,2,2"/>
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                    <GeometryDrawing Brush="#FFFF">
                        <GeometryDrawing.Geometry>
                            <GeometryGroup>
                                <RectangleGeometry Rect="0,0,1,1" />
                                <RectangleGeometry Rect="1,1,1,1" />
                            </GeometryGroup>
                        </GeometryDrawing.Geometry>
                    </GeometryDrawing>
                </DrawingGroup>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <LinearGradientBrush x:Key="AlphaBarOpacityMask" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0" Color="#0000"/>
            <GradientStop Offset="1" Color="#FFFF"/>
        </LinearGradientBrush>

        <Style x:Key="Label" TargetType="TextBox">
            <Setter Property="Focusable" Value="True"/>
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Background" Value="#FF555555"/>
            <Setter Property="Foreground" Value="#FFE0E0E0"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
    </UserControl.Resources>

    <Border Padding="10,10,0,10">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*" MinWidth="170"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="5*" MinWidth="220"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0" x:Name="LeftPanel" SizeChanged="Control_OnSizeChanged">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="5*"/>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="1*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1.65*"/>
                </Grid.RowDefinitions>

                <!-- SaturationAndValueSlider -->
                <Grid Grid.Column="0" Grid.Row="0" Margin="0,0,5,0">
                    <Rectangle Fill="{Binding HueBrush}"/>
                    <Rectangle Fill="{StaticResource SaturationAndValueSliderBaseBrush}"/>
                    <Canvas Background="Transparent" ClipToBounds="False" DataContext="{Binding SaturationAndValueSlider}"
                            MouseDown="Slider_MouseDown" MouseMove="Slider_MouseMove" MouseUp="Slider_MouseUp">
                        <Grid Width="12" Height="12" Canvas.Top="{Binding ySliderValue}" Canvas.Left="{Binding xSliderValue}">
                            <Ellipse Stroke="Black" Width="12" Height="12" StrokeThickness="1"/>
                            <Ellipse Stroke="White" Width="10" Height="10" StrokeThickness="1"/>
                        </Grid>
                    </Canvas>
                </Grid>

                <!-- HueSlider -->
                <Grid Grid.Column="1" Grid.Row="0" Margin="3,0">
                    <Rectangle Fill="{StaticResource HueBackgroundBrush}" Margin="5,0"/>
                    <ContentControl Content="{Binding HueSlider}"/>
                </Grid>

                <!-- AlphaSlider -->
                <Grid Grid.Column="2" Grid.Row="0" Margin="3,0">
                    <Rectangle Fill="{Binding HueBrush}" Margin="5,0"/>
                    <Rectangle Fill="{StaticResource AlphaBackgroundBrush}" OpacityMask="{StaticResource AlphaBarOpacityMask}" Margin="5,0"/>
                    <ContentControl Content="{Binding AlphaSlider}"/>
                </Grid>

                <!-- Color boxes -->
                <Grid Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" Margin="0 8 0 0" VerticalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="1*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10*"/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" Grid.Column="0" Margin="0" VerticalAlignment="Stretch" ToolTip="Original color">
                        <Rectangle Fill="{StaticResource AlphaBackgroundBrush}"/>
                        <Rectangle>
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{Binding Color}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <TextBox Margin="0" Padding="4" BorderThickness="0"
                                 IsReadOnly="True" IsTabStop="False" Focusable="True"
                                 HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center"
                                 Background="{Binding ColorWithoutAlphaBrush}" Foreground="{Binding Color_ForegroundBrush}"
                                 Text="{Binding Color, Mode=OneWay}">
                        </TextBox>
                    </Grid>

                    <Grid Grid.Row="0" Grid.Column="1" ToolTip="Current color">
                        <Rectangle Fill="{StaticResource AlphaBackgroundBrush}"/>
                        <Rectangle>
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{Binding CurrentColor}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <TextBox Margin="0" Padding="0" BorderThickness="1" FontWeight="Bold"
                                 HorizontalAlignment="Center" VerticalAlignment="Center" HorizontalContentAlignment="Center" 
                                 BorderBrush="{Binding CurrentColor_ForegroundBrush}"
                                 Background="{Binding CurrentColorWithoutAlphaBrush}" Foreground="{Binding CurrentColor_ForegroundBrush}"
                                 Text="{Binding CurrentColor}" >
                        </TextBox>
                    </Grid>

                    <!--<Button Grid.Row="0" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Center" Width="80" IsTabStop="True" Focusable="True"
                            Click="ButtonBase_OnClick">
                        <TextBlock Text="Known color table" TextWrapping="Wrap" TextAlignment="Center"/>
                    </Button>-->

                    <TextBox Grid.Row="0" Grid.Column="2" Style="{StaticResource Label}" Text="{Binding Path=CurrentColorGrayLevel, Mode=OneWay, StringFormat=Gray level: {0:F1}%}" TextAlignment="Center"/>

                    <TextBox Grid.Row="1" Grid.Column="0" Style="{StaticResource Label}" Text="Shades" TextAlignment="Center"/>
                    <TextBox Grid.Row="1" Grid.Column="1" Style="{StaticResource Label}" Text="Tints" TextAlignment="Center"/>
                    <TextBox Grid.Row="1" Grid.Column="2" Style="{StaticResource Label}" Text="Tones" TextAlignment="Center"/>

                    <ItemsControl Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="2" ItemsSource="{Binding Path=Tones, Mode=OneTime}" IsTabStop="False">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid UseLayoutRounding="False" SnapsToDevicePixels="False">
                                    <TextBox x:Name="ColorBox" Margin="0" Padding="0" BorderThickness="0"
                                             IsReadOnly="True" Focusable="True" IsTabStop="False"
                                             VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                                             Background="{Binding Background, Delay=50}" Foreground="{Binding Foreground, Delay=50}"
                                             Text="{Binding Background, Mode=OneWay, Delay=50}">
                                    </TextBox>
                                    <ToggleButton x:Name="ColorBoxToggleButton" IsThreeState="False" Margin="0" Padding="0" IsTabStop="False"
                                                  IsHitTestVisible="{Binding ElementName=ColorBoxPopup, Path=IsOpen, Converter={x:Static common:InverseBoolConverter.Instance}}">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="BorderBrush" Value="{Binding Background, Delay=50}"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border Background="Transparent" BorderThickness="0 0.5" BorderBrush="{TemplateBinding BorderBrush}"/>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="BorderBrush" Value="{Binding Foreground}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <Popup x:Name="ColorBoxPopup" AllowsTransparency="True" StaysOpen="False" Focusable="False"
                                           Placement="Bottom" PlacementTarget="{Binding ElementName=ColorBox}" PopupAnimation="Slide"
                                           IsOpen="{Binding ElementName=ColorBoxToggleButton, Path=IsChecked}">
                                        <Border x:Name="ColorBoxBorder" Margin="0 0 8 8"  BorderThickness="2" CornerRadius="2"
                                                BorderBrush="{Binding Background, Converter={x:Static common:ColorHslBrush.InstanceWithSplit}, ConverterParameter=+70%}"
                                                Background="{Binding Background, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+0%}">
                                            <!--                                            <Border Margin="0 0 8 8" Background="#FFDAEDF4" BorderBrush="#FF399CBD" BorderThickness="2" CornerRadius="2">-->
                                            <Border.Effect>
                                                <DropShadowEffect BlurRadius="5" Opacity="0.4"/>
                                            </Border.Effect>
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <Label x:Name="InfoHeader" Grid.Row="0" FontSize="12" FontWeight="SemiBold" Content="Color information"
                                                       Background="{Binding Background, Converter={x:Static common:ColorHslBrush.InstanceWithSplit}, ConverterParameter=+20%}"/>
                                                <TextBox Grid.Row="1" IsReadOnly="True" Background="Transparent" FontFamily="Courier New" Text="{Binding Info, Mode=OneWay}"
                                                         Foreground="{Binding ElementName=ColorBoxBorder, Path=Background, Converter={x:Static common:ColorGrayScaleBrush.InstanceWithSplit}, ConverterParameter=+100%}"/>
                                                <Button Grid.Row="2" BorderThickness="2" Margin="10" IsDefault="True"
                                                        Background="{Binding ElementName=InfoHeader, Path=Background}"
                                                        Foreground="{Binding ElementName=InfoHeader, Path=Background, Converter={x:Static common:ColorGrayScaleBrush.InstanceWithSplit}, ConverterParameter=+100%}"
                                                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                                        Click="ColorBox_OnSetColor">
                                                    <TextBlock Padding="4" TextAlignment="Center" FontWeight="SemiBold" TextWrapping="Wrap"
                                                               Text="Click here to set the current color to this color" Width="120" />
                                                </Button>
                                            </Grid>
                                        </Border>
                                    </Popup>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemContainerStyle>
                            <Style>
                                <Setter Property="Grid.Row" Value="{Binding GridRow, Mode=OneTime}" />
                                <Setter Property="Grid.Column" Value="{Binding GridColumn, Mode=OneTime}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                        <ColumnDefinition Width="1*" />
                                    </Grid.ColumnDefinitions>
                                </Grid>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </Grid>
            </Grid>

            <GridSplitter Grid.Column="1" Width="6" HorizontalAlignment="Stretch" BorderThickness="0" BorderBrush="Transparent" Background="#FF555555" IsTabStop="False"/>

            <!--  Color component sliders  -->
            <Grid Grid.Column="2" x:Name="RightPanel" SizeChanged="Control_OnSizeChanged">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                    <RowDefinition Height="1*"/>
                </Grid.RowDefinitions>
                <!-- RGB -->
                <TextBox Grid.Row="0" Margin="0 0 20 4" Text="RGB (Red[0-255], Green[0-255], Blue[0-255])" Style="{StaticResource Label}"/>
                <ContentControl Grid.Row="1" Content="{Binding RGB_R, Mode=OneTime}" Focusable="False" IsTabStop="False"/>
                <ContentControl Grid.Row="2" Content="{Binding RGB_G, Mode=OneTime}" Focusable="False" IsTabStop="False" Margin="0 -1" />
                <ContentControl Grid.Row="3" Content="{Binding RGB_B, Mode=OneTime}" Focusable="False" IsTabStop="False" />
                <!-- HSL -->
                <TextBox Grid.Row="4" Margin="0 5 20 4" Text="HSL (Hue[0-360], Saturation[0-100], Lightness[0-100])" Style="{StaticResource Label}"/>
                <ContentControl Grid.Row="5" Content="{Binding HSL_H, Mode=OneTime}" Focusable="False" IsTabStop="False" />
                <ContentControl Grid.Row="6" Content="{Binding HSL_S, Mode=OneTime}" Focusable="False" IsTabStop="False" Margin="0 -1" />
                <ContentControl Grid.Row="7" Content="{Binding HSL_L, Mode=OneTime}" Focusable="False" IsTabStop="False" />
                <!-- HSV -->
                <TextBox Grid.Row="8" Margin="0 5 20 4" Text="HSV/HSB (Hue[0-360], Saturation[0-100], Value/Brightness[0-100])" Style="{StaticResource Label}"/>
                <ContentControl Grid.Row="9" Content="{Binding HSV_H, Mode=OneTime}" Focusable="False" IsTabStop="False" />
                <ContentControl Grid.Row="10" Content="{Binding HSV_S, Mode=OneTime}" Focusable="False" IsTabStop="False" Margin="0 -1" />
                <ContentControl Grid.Row="11" Content="{Binding HSV_V, Mode=OneTime}" Focusable="False" IsTabStop="False" />
                <!-- LAB -->
                <TextBox Grid.Row="12" Margin="0 5 20 4" Text="CIELAB (Lightness[0-100], A(Green↔Red)[-127.5, 127.5], B(Blue↔Yellow)[-127.5, 127.5])" Style="{StaticResource Label}"/>
                <ContentControl Grid.Row="13" Content="{Binding LAB_L, Mode=OneTime}" Focusable="False" IsTabStop="False" />
                <ContentControl Grid.Row="14" Content="{Binding LAB_A, Mode=OneTime}" Focusable="False" IsTabStop="False" Margin="0 -1" />
                <ContentControl Grid.Row="15" Content="{Binding LAB_B, Mode=OneTime}" Focusable="False" IsTabStop="False" />
                <!-- YCbCr -->
                <TextBox Grid.Row="16" Margin="0 5 20 4" Text="YCbCr (Y[0-255], Cb[-127.5, 127.5], Cr[-127.5, 127.5])" Style="{StaticResource Label}"/>
                <ContentControl Grid.Row="17" Content="{Binding YCbCr_Y, Mode=OneTime}" Focusable="False" IsTabStop="False" />
                <ContentControl Grid.Row="18" Content="{Binding YCbCr_Cb, Mode=OneTime}" Focusable="False" IsTabStop="False" Margin="0 -1" />
                <ContentControl Grid.Row="19" Content="{Binding YCbCr_Cr, Mode=OneTime}" Focusable="False" IsTabStop="False" />
            </Grid>
        </Grid>
    </Border>
</UserControl>
