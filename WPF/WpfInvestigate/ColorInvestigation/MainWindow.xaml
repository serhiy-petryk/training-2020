<Window x:Class="ColorInvestigation.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:common="clr-namespace:ColorInvestigation.Common"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="1200">

    <Window.Resources>
        <Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Margin="0 10 0 0">
        <StackPanel Orientation="Vertical" Margin="5">
            <StackPanel Margin="5" Height="30" Orientation="Horizontal" Background="{Binding Source={StaticResource TestProxy}, Converter={x:Static common:TestConverter.Instance}}">

            </StackPanel>
            <StackPanel Orientation="Horizontal" Background="{Binding Source={StaticResource HueAndSaturationProxy}, Converter={x:Static common:HueAndSaturationBrush.Instance}, ConverterParameter=70}">
                <Button Content="Refresh" Click="OnRefreshClick"/>
                <Button Width="200" Height="30" VerticalAlignment="Stretch" BorderBrush="Gray"
                        VerticalContentAlignment="Center" FontSize="14" Margin="4" Content="Test absolute hsl color">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="{Binding Source={StaticResource HueAndSaturationProxy}, Converter={x:Static common:HueAndSaturationBrush.Instance}, ConverterParameter=35}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{Binding Source={StaticResource HueAndSaturationProxy}, Converter={x:Static common:HueAndSaturationBrush.Instance}, ConverterParameter=10}"/>
                                    <Setter Property="Background" Value="{Binding Source={StaticResource HueAndSaturationProxy}, Converter={x:Static common:HueAndSaturationBrush.Instance}, ConverterParameter=80}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="{Binding Source={StaticResource HueAndSaturationProxy}, Converter={x:Static common:HueAndSaturationBrush.Instance}, ConverterParameter=85}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Width="200" Height="30" VerticalAlignment="Stretch" BorderBrush="Gray"
                        VerticalContentAlignment="Center" FontSize="14" Margin="4" Content="Hls test relative to back color">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <!--<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={x:Static converters:HueAndSaturationBrush.Instance }, ConverterParameter=35}"/>-->
                            <Setter Property="Foreground" Value="{Binding Source={StaticResource ForeColorProxy}, Path=Value}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={x:Static common:HueAndSaturationBrush.Instance}, ConverterParameter=10}"/>
                                    <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={x:Static common:HueAndSaturationBrush.Instance}, ConverterParameter=80}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Converter={x:Static common:HueAndSaturationBrush.Instance}, ConverterParameter=85}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5">
                <Button Click="OnTestButtonClick">Test</Button>
                <Button Click="OnGrayScaleButtonClick" Margin="5">GrayScale</Button>
                <Button Click="OnGrayScaleDiffButtonClick" Margin="5">GrayScale diff</Button>
                <Button Click="OnCalcButtonClick" Margin="5">Calc</Button>
                <Button Click="OnColorSpacesButtonClick" Margin="5">Color Spaces</Button>
                <Button Click="OnForegroundButtonClick" Margin="5">Foreground</Button>
                <Button Click="OnForegroundDiffButtonClick" Margin="5">Foreground difference</Button>
                <Button Click="OnMonoChromaticButtonClick" Margin="5">MonoChromatic</Button>
                <Button Click="OnHslMonoStyleButtonClick" Margin="5">Hsl Mono Style</Button>

            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5">
                <Button Width="70" Height="30" Background="#FF00FFFF" Style="{StaticResource OldHslMonoStyle}">Test style</Button>
                <Button Width="100" Height="30" Background="White" Style="{StaticResource OldHslMonoStyle}">White button</Button>
                <Button Width="100" Height="30" Background="Black" Style="{StaticResource OldHslMonoStyle}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">Black button</Button>
                <!--                <Button Width="100" Height="30" Background="White" Foreground="#FF808080" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">White button</Button>
                <Button Width="100" Height="30" Background="White" Foreground="#FF5A5A5A" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">White button</Button>
                <Button Width="100" Height="30" Background="White" Foreground="Black" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">White button</Button>-->
                <Button Width="100" Height="30" Background="Black" Foreground="#FF808080" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">Black button</Button>
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <Button  Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">AAAAA</Button>
            </StackPanel>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="140"/>
                    <ColumnDefinition Width="140"/>
                    <ColumnDefinition Width="140"/>
                    <ColumnDefinition Width="140"/>
                    <ColumnDefinition Width="140"/>
                    <ColumnDefinition Width="140"/>
                    <ColumnDefinition Width="140"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="40"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Rectangle Grid.Row="0" Grid.Column="0" x:Name="R0"/>
                <Rectangle Grid.Row="0" Grid.Column="1" x:Name="R1"/>
                <Rectangle Grid.Row="0" Grid.Column="2" x:Name="R2"/>
                <Rectangle Grid.Row="0" Grid.Column="3" x:Name="R3"/>
                <Rectangle Grid.Row="0" Grid.Column="4" x:Name="R4"/>
                <Rectangle Grid.Row="0" Grid.Column="5" x:Name="R5"/>
                <Rectangle Grid.Row="0" Grid.Column="6" x:Name="R6"/>

                <TextBox Grid.Row="1" Grid.Column="0" x:Name="C0" TextWrapping="Wrap"/>
                <TextBox Grid.Row="1" Grid.Column="1" x:Name="C1" TextWrapping="Wrap"/>
                <TextBox Grid.Row="1" Grid.Column="2" x:Name="C2" TextWrapping="Wrap"/>
                <TextBox Grid.Row="1" Grid.Column="3" x:Name="C3" TextWrapping="Wrap"/>
                <TextBox Grid.Row="1" Grid.Column="4" x:Name="C4" TextWrapping="Wrap"/>
                <TextBox Grid.Row="1" Grid.Column="5" x:Name="C5" TextWrapping="Wrap"/>
                <TextBox Grid.Row="1" Grid.Column="6" x:Name="C6" TextWrapping="Wrap"/>

                <Rectangle Grid.Row="2" Grid.Column="0" x:Name="RV0"/>
                <Rectangle Grid.Row="2" Grid.Column="1" x:Name="RV1"/>
                <Rectangle Grid.Row="2" Grid.Column="2" x:Name="RV2"/>
                <Rectangle Grid.Row="2" Grid.Column="3" x:Name="RV3"/>
                <Rectangle Grid.Row="2" Grid.Column="4" x:Name="RV4"/>
                <Rectangle Grid.Row="2" Grid.Column="5" x:Name="RV5"/>
                <Rectangle Grid.Row="2" Grid.Column="6" x:Name="RV6"/>

                <TextBox Grid.Row="3" Grid.Column="0" x:Name="CV0" TextWrapping="Wrap"/>
                <TextBox Grid.Row="3" Grid.Column="1" x:Name="CV1" TextWrapping="Wrap"/>
                <TextBox Grid.Row="3" Grid.Column="2" x:Name="CV2" TextWrapping="Wrap"/>
                <TextBox Grid.Row="3" Grid.Column="3" x:Name="CV3" TextWrapping="Wrap"/>
                <TextBox Grid.Row="3" Grid.Column="4" x:Name="CV4" TextWrapping="Wrap"/>
                <TextBox Grid.Row="3" Grid.Column="5" x:Name="CV5" TextWrapping="Wrap"/>
                <TextBox Grid.Row="3" Grid.Column="6" x:Name="CV6" TextWrapping="Wrap"/>

            </Grid>
        </StackPanel>
    </Grid>
</Window>
