<Window x:Class="ColorInvestigation.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:common="clr-namespace:ColorInvestigation.Common"
        xmlns:controls="clr-namespace:ColorInvestigation.Controls"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="1100">

    <Window.Resources>
        <Style x:Key="TransparentStyle" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid Margin="0 10 0 0">
        <StackPanel Orientation="Vertical" Margin="5">
            <StackPanel Orientation="Horizontal"
                        Background="{Binding Source={StaticResource HueAndSaturation}, Converter={x:Static common:HueAndSaturationBrush.Instance}, ConverterParameter=70}">
                <TextBlock Margin="0 0 2 0" VerticalAlignment="Center" Text="Hue and saturation:"/>
                <TextBlock Margin="0 0 2 0" VerticalAlignment="Center" Text="{Binding Source={StaticResource HueAndSaturation}, Path=Value}"/>
                <TextBlock Margin="5 0 2 0" VerticalAlignment="Center" Text="Proxy:"/>
                <TextBlock Margin="0 0 2 0" VerticalAlignment="Center" Text="{Binding Source={StaticResource HueAndSaturation}, Path=Value, Converter={x:Static common:TestConverter.Instance}}"/>
                <Button Content="Change hue" Click="OnChangeHueClick" Margin="5 0"/>
                <Button Width="200" Height="30" VerticalAlignment="Stretch" BorderBrush="Gray"
                        VerticalContentAlignment="Center" FontSize="14" Margin="4" Content="Test absolute hsl color">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}">
                                            <ContentPresenter/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="{Binding Source={StaticResource HueAndSaturation}, Converter={x:Static common:HueAndSaturationBrush.Instance}, ConverterParameter=35}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{Binding Source={StaticResource HueAndSaturation}, Converter={x:Static common:HueAndSaturationBrush.Instance}, ConverterParameter=10}"/>
                                    <Setter Property="Background" Value="{Binding Source={StaticResource HueAndSaturation}, Converter={x:Static common:HueAndSaturationBrush.Instance}, ConverterParameter=80}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="{Binding Source={StaticResource HueAndSaturation}, Converter={x:Static common:HueAndSaturationBrush.Instance}, ConverterParameter=85}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Width="200" Height="30" VerticalAlignment="Stretch" BorderThickness="0"
                        VerticalContentAlignment="Center" FontSize="14" Margin="4" Content="Copy of previous button"
                        Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}, Path=Background}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Background}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="Border" Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}">
                                            <ContentPresenter/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+85%}"/>
                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=-33%}"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=85}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+50%}"/>
                        </Style>
                    </Button.Style>
                </Button>

                <Button BorderThickness="3" Width="300" 
                        HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
                        VerticalAlignment="Stretch" VerticalContentAlignment="Center"
                        FontSize="14" Margin="4 0" Padding="4 0"
                        Focusable="False" Content="Example of monochromatic button"
                        Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type StackPanel}}, Path=Background}">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}">
                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Background}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border x:Name="Border" Background="{TemplateBinding Background}"
                                                Padding="{TemplateBinding Padding}"
                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                BorderThickness="{TemplateBinding BorderThickness}">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+50%}"/>
                                                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+35%}"/>
                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=-33%}"/>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=85}"/>
                                                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+35%}"/>
                                                <Setter TargetName="Border" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+35%}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}, ConverterParameter=+55%}"/>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <TextBlock Margin="10 0 5 0">Flat buttons</TextBlock>
                <Button Style="{StaticResource MonochromeAnimatedButtonStyle}" Background="Blue" Width="140" Height="30" Margin="5 0" BorderThickness="3" Content="MonochromeAnimatedButtonStyle"/>
                <Button Style="{StaticResource MonochromeAnimatedButtonStyle}" Background="Yellow" Width="140" Height="30" Margin="5 0" BorderThickness="3" Content="MonochromeAnimatedButtonStyle"/>
                <Button Style="{StaticResource MonochromeAnimatedButtonStyle}" Width="140" Height="30" Margin="5 0" BorderThickness="3" Content="MonochromeAnimatedButtonStyle"
                        Background="{Binding Source={StaticResource HueAndSaturation}, Converter={x:Static common:HueAndSaturationBrush.Instance}, ConverterParameter=70}"/>
                <Button Style="{StaticResource MonochromeAnimatedButtonStyle}" Width="200" Height="30" Margin="5 0" BorderThickness="3" Content="MonochromeAnimatedButtonStyle (disabled)"
                        Background="{Binding Source={StaticResource HueAndSaturation}, Converter={x:Static common:HueAndSaturationBrush.Instance}, ConverterParameter=70}"
                        IsEnabled="False"/>
                <Button Style="{StaticResource MonochromeAnimatedButtonStyle}" Width="30" Height="30"
                        controls:BootstrapEffect.PathData="M0,2L6,2L3,5z"
                        Background="{Binding Source={StaticResource HueAndSaturation}, Converter={x:Static common:HueAndSaturationBrush.Instance}, ConverterParameter=70}"/>
                <Button Style="{StaticResource MonochromeAnimatedButtonStyle}" Width="30" Height="30" controls:BootstrapEffect.PathData="M0,2L6,2L3,5z"
                        Background="#FFD98C8C"/>
                <Button Style="{StaticResource MonochromeAnimatedClearButtonStyle}" Background="Blue" Width="30" Height="30"/>
                <Button Style="{StaticResource MonochromeAnimatedButtonStyle}" Background="Blue" Width="30" Height="30" Content="Blue" BorderThickness="2"/>
                <Button Style="{StaticResource MonochromeAnimatedClearButtonStyle}" Background="#FF5300FF" Width="30" Height="30"/>
                <Button Style="{StaticResource MonochromeAnimatedButtonStyle}" Background="#FF5300FF" Height="30" Content="70 100 50" BorderThickness="2"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5">
                <Button Click="OnTestButtonClick">Test</Button>
                <Button Click="OnGrayScaleButtonClick" Margin="5">GrayScale</Button>
                <Button Click="OnGrayScaleDiffButtonClick" Margin="5">GrayScale diff</Button>
                <Button Click="OnCalcButtonClick" Margin="5">Calc</Button>
                <Button Click="OnColorSpacesButtonClick" Margin="5">Color Spaces</Button>
                <Button Click="OnForegroundButtonClick" Margin="5">Foreground</Button>
                <Button Click="OnForegroundDiffButtonClick" Margin="5">Foreground difference</Button>
                <Button Click="OnMonoChromaticButtonClick" Margin="5">MonoChromatic</Button>
                <Button Click="OnColorPickerButtonClick" Margin="5">Color Picker</Button>
                <Button Click="OnMonoChromeButtonsButtonClick" Margin="5">MonoChrome buttons</Button>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Margin="5">
                <TextBlock Margin="10 0 5 0">HslMonoStyle</TextBlock>
                <Button Width="70" Height="30" Background="#FF00FFFF" Style="{StaticResource HslMonoStyle}">Test style</Button>
                <Button Width="100" Height="30" Background="White" Style="{StaticResource HslMonoStyle}">White button</Button>
                <Button Width="100" Height="30" Background="Black" Style="{StaticResource HslMonoStyle}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">Black button</Button>
                <Button Width="100" Height="30" Background="Black" Foreground="#FF808080" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">Black button</Button>

                <TextBlock Margin="10 0 5 0">TestColorStyle</TextBlock>
                <Button Width="70" Height="30" Background="#FF00FFFF" Style="{StaticResource TestColorStyle}">Test style</Button>
                <Button Width="100" Height="30" Background="White" Style="{StaticResource TestColorStyle}">White button</Button>
                <Button Width="100" Height="30" Background="Gray" Style="{StaticResource TestColorStyle}">Gray button</Button>
                <Button Width="100" Height="30" Background="Black" Style="{StaticResource TestColorStyle}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">Black button</Button>
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <Button x:Name="AA" Background="Aqua" BorderThickness="3" Padding="8">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <Path Data="M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"/>
                            <TextBlock VerticalAlignment="Center" Margin="5 0" Text="Test"/>
                        </StackPanel>
                    </Button.Content>

                   <Button.Template>
                        <ControlTemplate TargetType="ButtonBase">
                            <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" UseLayoutRounding="True">
                                <ContentControl>
                                    <ContentControl x:Name="CC" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"
                                                    UseLayoutRounding="{TemplateBinding UseLayoutRounding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                    Foreground="{Binding ConverterParameter=+70%, ElementName=Border, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}">
                                        <ContentControl.Resources>
                                            <Style TargetType="Path">
                                                <Setter Property="Fill" Value="{Binding ElementName=CC, Path=Foreground}"/>
                                            </Style>
                                        </ContentControl.Resources>
                                    </ContentControl>
                                </ContentControl>
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"/>
                                        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{Binding ConverterParameter=+10, RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                                                <Setter Property="BorderBrush" Value="{Binding ConverterParameter=+30%, RelativeSource={RelativeSource Self}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPressed}" Value="True">
                                                <Setter Property="Background" Value="{Binding ConverterParameter=+60%, RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                                                <Setter Property="BorderBrush" Value="{Binding ConverterParameter=+20%, RelativeSource={RelativeSource Self}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <Button x:Name="AA1" BorderThickness="3" Padding="8" Content="Test"
                        Loaded="MonochromeTestButton_OnLoaded">
                    <!--<Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Path Data="M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z"/>
                            <TextBlock VerticalAlignment="Center" Margin="5 0" Text="Test"/>
                        </StackPanel>
                    </Button.Content>-->
                    <Button.Template>
                        <ControlTemplate TargetType="ButtonBase">
                            <Border x:Name="PART_Border" Background="Transparent" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="True" SnapsToDevicePixels="True">
                                <Border.Resources>
                                    <Storyboard x:Key="NormalState">
                                        <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="{Binding ConverterParameter=+0%, RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                        <ColorAnimation Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)"
                                                To="{Binding ConverterParameter=+70%, RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                        <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                To="{Binding ConverterParameter=+0%, RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                    </Storyboard>
                                    <Storyboard x:Key="MouseOverState">
                                        <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="{Binding ConverterParameter=+10, RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                        <ColorAnimation Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)"
                                                To="{Binding ConverterParameter=+10/+70%, RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                        <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                To="{Binding ConverterParameter=+10/+30%, RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                    </Storyboard>
                                    <Storyboard x:Key="PressedState">
                                        <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="{Binding ConverterParameter=+60%, RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                        <ColorAnimation Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)"
                                                To="{Binding ConverterParameter=+60%/+70%, RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                        <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                To="{Binding ConverterParameter=+60%/+20%, RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                    </Storyboard>
                                    <Storyboard x:Key="Disabled">
                                        <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                To="{Binding ConverterParameter=+0%, RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                        <ColorAnimation Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)"
                                                To="{Binding ConverterParameter=+70%, RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                        <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                                To="{Binding ConverterParameter=+0%, RelativeSource={RelativeSource TemplatedParent}, Path=Background, Converter={x:Static common:ColorHslBrush.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                        <DoubleAnimation To="0.35" Storyboard.TargetProperty="Opacity" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                    </Storyboard>
                                </Border.Resources>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <!-- Bindings for VisualState have to define in Resources because there is C# error -->
                                        <VisualState x:Name="Normal" Storyboard="{StaticResource NormalState}"/>
                                        <VisualState x:Name="MouseOver" Storyboard="{StaticResource MouseOverState}"/>
                                        <VisualState x:Name="Pressed" Storyboard="{StaticResource PressedState}"/>
                                        <VisualState x:Name="Disabled" Storyboard="{StaticResource Disabled}"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <ContentControl>
                                    <ContentControl x:Name="PART_Content" Margin="{TemplateBinding Padding}"
                                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    Focusable="False" IsTabStop="False"
                                                    UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                                    Content="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ContentControl.Resources>
                                            <Style TargetType="Path">
                                                <Setter Property="Fill" Value="{Binding ElementName=PART_Content, Path=Foreground}"/>
                                            </Style>
                                        </ContentControl.Resources>
                                    </ContentControl>
                                </ContentControl>

                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <Button Content="Change Color" Click="ChangeColor_OnClick" Margin="5 0"/>

                <Button Style="{StaticResource MonochromeAnimatedButtonStyle}" Background="Blue" Width="40" Height="40" Content="X" FontSize="20" FontWeight="Bold" BorderBrush="Red"/>

                <Button Style="{StaticResource MonochromeAnimatedClearButtonStyle}" Width="40" Height="40" Content="X" FontSize="20" FontWeight="Bold" BorderBrush="Red"/>

                <Button Focusable="True" IsTabStop="False" Width="58" Height="58" Padding="2" Style="{StaticResource MonochromeAnimatedClearButtonStyle}"/>

                <Button Style="{StaticResource MonochromeAnimatedButtonStyle}"
                        Margin="5 0" Height="30" Width="30"
                        Background="{Binding ElementName=AA, Path=Background}"
                        controls:BootstrapEffect.PathData="M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal">
                <Button Content="Test">
                    <Button.Style>
                        <Style TargetType="{x:Type ButtonBase}">
                            <Setter Property="BorderThickness" Value="0"/>
                            <!-- Can't use binding for background because there is VS Designer error -->
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Self}, Converter={x:Static common:GetForegroundBrushConverter.Instance}}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                                        <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" UseLayoutRounding="True">
                                            <Border.BorderBrush>
                                                <SolidColorBrush x:Name="PART_BorderBrush"/>
                                            </Border.BorderBrush>
                                            <Border.Resources>
                                                <Storyboard x:Key="NormalState">
                                                    <DoubleAnimation To="0.7" Storyboard.TargetProperty="Opacity" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                                    <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                                    To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:GetBackgroundColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                                    <ColorAnimation Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)"
                                                                    To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:GetForegroundColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                                    <ColorAnimation Storyboard.TargetName="PART_BorderBrush" Storyboard.TargetProperty="Color"
                                                                    To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:GetBackgroundColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                                </Storyboard>
                                                <Storyboard x:Key="MouseOverState">
                                                    <DoubleAnimation To="1" Storyboard.TargetProperty="Opacity" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                                    <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:GetMouseOverBackgroundColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                                    <ColorAnimation Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:GetForegroundColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                                    <ColorAnimation Storyboard.TargetName="PART_BorderBrush" Storyboard.TargetProperty="Color" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:GetBorderColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                                </Storyboard>
                                                <Storyboard x:Key="PressedState">
                                                    <DoubleAnimation To="0.7" Storyboard.TargetProperty="Opacity" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                                    <ColorAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:GetForegroundColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                                    <ColorAnimation Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:GetBackgroundColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                                    <ColorAnimation Storyboard.TargetName="PART_BorderBrush" Storyboard.TargetProperty="Color" To="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={x:Static common:GetForegroundColorConverter.Instance}}" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                                </Storyboard>
                                            </Border.Resources>

                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <!-- Bindings for VisualState have to define in Resources because there is C# error -->
                                                    <VisualState x:Name="Normal" Storyboard="{StaticResource NormalState}"/>
                                                    <VisualState x:Name="MouseOver" Storyboard="{StaticResource MouseOverState}"/>
                                                    <VisualState x:Name="Pressed" Storyboard="{StaticResource PressedState}"/>
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <DoubleAnimation To="0.35" Storyboard.TargetProperty="Opacity" Duration="{x:Static common:AnimationHelper.SlowAnimationDuration}" />
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>

                                            <ContentControl x:Name="PART_Content" Margin="{TemplateBinding Padding}"
                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                            Focusable="False" IsTabStop="False"
                                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}"
                                            Content="{TemplateBinding Content}"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                    </Button.Style>
                </Button>
            </StackPanel>

        </StackPanel>
    </Grid>
</Window>
