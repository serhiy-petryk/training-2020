Conclusion:
==========
Для тонів потрібно брати HSL, так як він має крайні кольори - чорний(L=0) і білий(L=100), а остальні стандарти (HSV, LAB, XYZ, YCbCr) не мають такої властивості.
Тони із сайтів https://www.colorhexa.com/0c0e12 (26 тонів) і https://coolors.co/152614-1e441e-2a7221-119822-31cb00 (25 тонів, немає чорного)
основані на HSL (HS-постійне, а L змінюється від 0 до 100 з кроком 4.0)

Online investigators:
====================================
https://www.colorhexa.com/0014ab
https://www.w3schools.com/colors/colors_picker.asp
Тони: https://coolors.co/152614-1e441e-2a7221-119822-31cb00


https://www.colorhexa.com/0014ab utilities:
=========
Gradient generator
Color blender
Color subtraction
216 web safe colors
Colors by name (746 names)

w3.com standard and C# Colors definition: there are 147 named colors

For each color:
==============
1+1 Complementary Color
	based on HSL (H is changing on 180)
2+1 Analogous Color
	based on HSL (H is changing on +/-30)
2+1 Split Complementary Color
	based on HSL (H is changing on +/-150)
2+1 Triadic Color
	based on HSL (H is changing on +/-120)
3+1 Tetradic Color
	based on HSL (H is changing on 60, 120, 180)
+7 Monochromatic Color
	змінюється на 5% Lightness of color HSL
6+1 Alternatives/Similar Colors
	based on HSL (H is changing with step 5%)
+13 Shade Color Variation - mix black and current colors with lightness<=50
	based on HSL (L is changing with step 4%)
+13 Tint Color Variation - mix white and current colors with lightness>50
	based on HSL (L is changing with step 4%)
12+1 Tone Color Variation
	based on HSL (Saturation is changing with step 8%)

https://www.w3schools.com/colors/colors_picker.asp uilities:
===========================================================
Lighter / Darker (== step by Lightness)
step by Hue
step by Saturation
step by Lightness

Algorithms:
==========
+++ https://github.com/muak/ColorMinePortable (MIT license. Many standards)
++ https://github.com/waesteve/Color-RGB_HSL_HSV_XY/blob/master/RGBConverter.cs (HSL/HSV converters)

Foreground Color:
=================
Автоматично визначити foreground color for background color дуже складно із-за субєктивності.
MaterialDesign має таку функцію ContrastingForegroundColor, де визначення базується на luminance = 0.179.
Але візульно, кращий результат буде якщо вибір кольору буде базуватися на luminance = 0.35-0.4.
Майже такий результат дають прості функції типу kR * color.R + kG * color.G + kB * color.B.
За основу можна взяти функцію: grayLevel = (0.17 * color.R + 0.78 * color.G + 0.01 * color.B) / 255.0,
і якщо grayLevel < 0.608, то foreground= white, а якщо grayLevel >= 0.608, то foreground= black (split = 0.608).
Схожий результат дає: (0.16 * color.R + 0.73 * color.G + 0.01 * color.B) / 255.0, з split = 0.57.

Якщо використати grayLevel = (0.17 * color.R + 0.78 * color.G + 0.01 * color.B), або 
(0.16 * color.R + 0.73 * color.G + 0.01 * color.B), то вигляд малюнків у сірому кольорі мають набагато кращий вигляд ніж 
при використані функції ContrastingForegroundColor з MaterialDesign.
Проект для конвертації малюнків у сірий кольор:
https://github.com/ferenckovacsx/CS_Grayscale_Converter/tree/master/GreyscaleImageConverter


