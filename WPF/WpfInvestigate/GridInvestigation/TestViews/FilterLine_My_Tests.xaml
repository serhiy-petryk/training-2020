<Window x:Class="GridInvestigation.TestViews.FilterLine_My_Tests"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GridInvestigation.TestViews"
        xmlns:common="clr-namespace:GridInvestigation.Common"
        mc:Ignorable="d"
        Title="Grid Validation Tests" Height="450" Width="800">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Slider Grid.Column="0"
                x:Name="uiScaleSlider"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                ToolTip="Determines the UI scale factor. Double-click to revert scaling back to 100%."
                Height="100"
                Value="1" Minimum="0.5" Maximum="4"
                Orientation="Vertical"
                Ticks="1"
                IsSnapToTickEnabled="False"
                TickPlacement="BottomRight"
                AutoToolTipPlacement="BottomRight"
                AutoToolTipPrecision="2"/>

        <Grid Grid.Column="1">
            <Grid.Resources>
                <local:Lines3 x:Key="data"/>
            </Grid.Resources>

            <Grid.LayoutTransform>
                <ScaleTransform CenterX="0" CenterY="0" ScaleX="{Binding Value, ElementName=uiScaleSlider}" ScaleY="{Binding Value, ElementName=uiScaleSlider}"/>
            </Grid.LayoutTransform>

            <StackPanel Orientation="Vertical">
                <TextBlock Text="Font size:"/>
                <TextBox Margin="0 5" Width="30" HorizontalAlignment="Left" Text="{Binding FontSize, ElementName=dataGrid1, Mode=TwoWay}"/>

                <DataGrid x:Name="dataGrid1" RowHeaderWidth="40" AutoGenerateColumns="False">
                    <DataGrid.Resources>
                        <Style x:Key="EditingElementStyle" TargetType="{x:Type TextBox}">
                            <Setter Property="Padding" Value="0"/>
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="Foreground" Value="Red"/>
                                    <Setter Property="ToolTip" Value="{Binding (Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <Style x:Key="ElementStyle" TargetType="{x:Type TextBlock}">
                            <Setter Property="Padding" Value="0"/>
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="True">
                                    <Setter Property="Foreground" Value="DarkRed"/>
                                    <Setter Property="ToolTip" Value="{Binding (Validation.Errors)/ErrorContent, RelativeSource={RelativeSource Self}}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>

                    <DataGrid.ItemsSource>
                        <StaticResource ResourceKey="data"/>
                    </DataGrid.ItemsSource>

                    <DataGrid.RowValidationErrorTemplate>
                        <ControlTemplate/>
                    </DataGrid.RowValidationErrorTemplate>

                    <DataGrid.RowHeaderTemplate>
                        <DataTemplate>
                            <Grid Width="32"
                                  ToolTip="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=DataContext.Error, Mode=OneWay}"
                                  Opacity="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=DataContext, Converter={x:Static common:OpacityForDataGridRowHeader.Instance}, Mode=OneWay}"
                                  Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGridRow}}, Path=DataContext.Error, Converter={x:Static common:VisibilityConverter.Instance}, Mode=OneWay}">
                                <Ellipse StrokeThickness="0" Fill="Red"
                                         Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}, Path=FontSize}"
                                         Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}, Path=FontSize}" />
                                <TextBlock Text="!" FontWeight="Bold" Foreground="White" HorizontalAlignment="Center" />
                            </Grid>
                        </DataTemplate>
                    </DataGrid.RowHeaderTemplate>

                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Operand"
                                        Binding="{Binding Operand, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        ElementStyle="{StaticResource ElementStyle}" EditingElementStyle="{StaticResource EditingElementStyle}"/>
                        <DataGridTextColumn Header="Value1"
                                        Binding="{Binding Value1, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                        ElementStyle="{StaticResource ElementStyle}" EditingElementStyle="{StaticResource EditingElementStyle}"/>
                        <DataGridTextColumn Header="Value2"
                                            Binding="{Binding Value2, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                            ElementStyle="{StaticResource ElementStyle}" EditingElementStyle="{StaticResource EditingElementStyle}"/>
                        <DataGridTextColumn Header="Error" Binding="{Binding Error}" IsReadOnly="True"/>
                    </DataGrid.Columns>

                </DataGrid>
            </StackPanel>
        </Grid>
    </Grid>
</Window>