<Window x:Class="IconViewer.ToolbarTest"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:IconViewer"
        mc:Ignorable="d"
        Title="ToolbarTest" Height="400" Width="800">
  <Window.Resources>
    <ResourceDictionary>
      <!--<Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Background" Value="Aqua"></Setter>
        <Setter Property="Foreground" Value="Green"></Setter>
      </Style>-->
      <Style x:Key="ToolBarStyle1" TargetType="{x:Type WrapPanel}">
        <Setter Property="Background">
          <Setter.Value>
            <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
              <GradientStop Color="#FFFAF9F5" Offset="0"/>
              <GradientStop Color="#FFEBE7E0" Offset="0.5"/>
              <GradientStop Color="#FFC0C0A8" Offset="0.9"/>
              <GradientStop Color="#FFA3A37C" Offset="1"/>
            </LinearGradientBrush>
          </Setter.Value>
        </Setter>
        <Style.Triggers>
          <DataTrigger Binding="{Binding}" Value="true">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
          </DataTrigger>
        </Style.Triggers>
      </Style>



      <Geometry x:Key="UpArrowGeometry">M 0 4 L 4 0 L 8 4 Z</Geometry>
      <Geometry x:Key="DownArrowGeometry">M 0 0 L 4 4 L 8 0 Z</Geometry>
      <ContextMenu x:Key="AAA">
        <MenuItem Header="Add 1"/>
        <MenuItem Header="Add 2"/>
        <MenuItem Header="Add 3"/>
      </ContextMenu>
    </ResourceDictionary>
  </Window.Resources>

  <DockPanel LastChildFill="True">
    <!-- ===========================  -->
    <!-- ==== Toolbar =====  -->
    <!-- ===========================  -->
    <TextBlock DockPanel.Dock="Top" Height="32"></TextBlock>
    <TextBlock DockPanel.Dock="Top" Height="32">Toolbar</TextBlock>
    <ToolBar DockPanel.Dock="Top" Height="36" ToolBarTray.IsLocked="True" 
             ToolBar.OverflowMode="AsNeeded" Margin="0,0,-13,0" FontSize="9pt" FontFamily="Microsoft Sans Serif">

      <!--<Grid HorizontalAlignment="Left">
        <ItemsControl ItemsSource="{Binding EnumValues}" Height="0" Margin="15,0"/>
        <ComboBox ItemsSource="{Binding EnumValues}" />
      </Grid>-->
      <Grid HorizontalAlignment="Left">
        <!-- <ItemsControl> is Dummy control to set combobox width to width of widest element -->
        <!--<ItemsControl Grid.Row="0" Name="ThemeDummy" Height="0" Margin="15,0"/>-->
        <ComboBox Grid.Row="0" Name="Themes" VerticalAlignment="Center" SelectionChanged="Themes_OnSelectionChanged" BorderBrush="Red" BorderThickness="4">
          <ComboBox.ItemContainerStyle>
            <Style TargetType="ComboBoxItem">
              <Setter Property="Padding" Value="4"/>
              <Setter Property="Margin" Value="1"/>
              <Setter Property="Background" Value="{Binding Path=BackgroundColor}"/>
            </Style>
          </ComboBox.ItemContainerStyle>
        </ComboBox>
      </Grid>
      <Button Background="Transparent" BorderBrush="Transparent" Click="Button_Click">Dummy button</Button>
      <Separator/>
      <Button Background="gray" BorderBrush="Transparent">Dummy button</Button>
      <Button Background="Transparent" BorderBrush="Transparent">
        <ContentControl>
          <StackPanel Orientation="Horizontal">
            <Path Fill="Black" Width="24" Height="24" Data="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z"></Path>
            <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center" />
          </StackPanel>
        </ContentControl>
      </Button>
      <Button ToolTip="Save your project">
        <StackPanel Orientation="Horizontal">
          <Image Source="Resources/Save.png" />
          <TextBlock Margin="2" VerticalAlignment="Center">Save</TextBlock>
        </StackPanel>
      </Button>
      <ToggleButton Background="Transparent" BorderBrush="Transparent" IsThreeState="False">
        <ContentControl>
          <StackPanel Orientation="Horizontal">
            <Path Fill="Black" Width="24" Height="24" Data="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z"></Path>
            <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center" />
          </StackPanel>
        </ContentControl>
      </ToggleButton>
      <Separator/>
      <Button Background="gray" BorderBrush="Transparent">Dummy button</Button>
      <Button Background="gray" BorderBrush="Transparent">Dummy button</Button>
      <Button Background="gray" BorderBrush="Transparent">Dummy button</Button>
    </ToolBar>
    <!-- ===========================  -->
    <!-- ==== Wrap panel =====  -->
    <!-- ===========================  -->
    <TextBlock DockPanel.Dock="Top" Height="32"></TextBlock>
    <TextBlock DockPanel.Dock="Top" Height="32">Wrap panel</TextBlock>
    <WrapPanel DockPanel.Dock="Top"  Orientation="Horizontal" Height="32" Style="{StaticResource ToolBarStyle1}">
      <Button Background="Transparent" BorderBrush="Transparent">Dummy button</Button>
      <Separator/>
      <Button Background="gray" BorderBrush="Transparent">Dummy button</Button>
      <Button Background="Transparent" BorderBrush="Transparent">
        <ContentControl>
          <StackPanel Orientation="Horizontal">
            <Path Fill="Black" Width="24" Height="24" Data="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z"></Path>
            <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center" />
          </StackPanel>
        </ContentControl>
      </Button>
      <Button ToolTip="Save your project">
        <StackPanel Orientation="Horizontal">
          <Image Source="Resources/Save.png" />
          <TextBlock Margin="2" VerticalAlignment="Center">Save</TextBlock>
        </StackPanel>
      </Button>
      <ToggleButton Background="Transparent" BorderBrush="Transparent" IsThreeState="False">
        <ContentControl>
          <StackPanel Orientation="Horizontal">
            <Path Fill="Black" Width="24" Height="24" Data="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z"></Path>
            <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center" />
          </StackPanel>
        </ContentControl>
      </ToggleButton>
      <WrapPanel Background="Aqua">
        <Separator Width="5" Background="Gray" VerticalContentAlignment="Bottom" VerticalAlignment="Bottom"/>
      </WrapPanel>
      <ToggleButton Background="Transparent" BorderBrush="Transparent" IsThreeState="False">
        <ContentControl>
          <StackPanel Orientation="Horizontal">
            <Path Fill="Black" Width="24" Height="24" Data="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z"></Path>
            <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center" />
          </StackPanel>
        </ContentControl>
      </ToggleButton>
    </WrapPanel>



    <!-- ===========================  -->
    <!-- ==== Dropdown button =====  -->
    <!-- ===========================  -->
    <TextBlock DockPanel.Dock="Top" Height="32"></TextBlock>
    <TextBlock DockPanel.Dock="Top" Height="32">Dropdown button</TextBlock>
    <ToolBar DockPanel.Dock="Top" Height="32">

      <!-- Resources to manage the Popup Button -->
      <ToolBar.Resources>
        <Style TargetType="{x:Type Popup}">
          <EventSetter Event="Button.Click" Handler="popup_Click" />
        </Style>
        <!-- Popup outer border -->
        <Style TargetType="{x:Type Border}">
          <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.MenuBrushKey}}" />
          <Setter Property="BorderThickness" Value="1" />
          <!--<Setter Property="Padding" Value="2" />-->
        </Style>
        <!-- popup items -->
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
          <Setter Property="HorizontalAlignment"        Value="Stretch" />
          <Setter Property="HorizontalContentAlignment" Value="Left" />
        </Style>
      </ToolBar.Resources>

      <!-- Simplest -->
      <!--<ToggleButton Name="aa1" Background="Transparent" Click="aa1_OnClick" BorderBrush="Transparent" ContextMenuService.Placement="Bottom"-->
      <ToggleButton Name="aa1" Background="Transparent" BorderBrush="Transparent" ContextMenuService.Placement="Bottom" 
                    IsThreeState="False" Checked="Aa1_OnChecked">
        <ContentControl>
          <StackPanel Orientation="Horizontal">
            <Path Fill="Black" Width="24" Height="24" Data="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z"></Path>
            <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center" />
          </StackPanel>
        </ContentControl>
        <!--<ToggleButton.Style>
          <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="IsHitTestVisible" Value="True"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding ElementName=aa_cm, Path=IsOpen}" Value="True">
                <Setter Property="IsHitTestVisible" Value="False"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ToggleButton.Style>-->
        <!--<ToggleButton.ContextMenu>
          <ContextMenu Name="aa_cm">
            <MenuItem Header="Копировать"></MenuItem>
            <MenuItem Header="Вставить"></MenuItem>
            <MenuItem Header="Вырезать"></MenuItem>
            <MenuItem Header="Удалить"></MenuItem>
          </ContextMenu>
        </ToggleButton.ContextMenu>-->
        <ToggleButton.Resources>
          <ContextMenu x:Key="cm" StaysOpen="False" Placement="Bottom" PlacementTarget="{Binding ElementName=BtnSelectLayout}"
                       IsOpen="{Binding IsChecked, ElementName=BtnSelectLayout, Mode=TwoWay}">
            <!--IsOpen="{Binding IsChecked, ElementName=BtnSelectLayout, Mode=TwoWay}"-->
            <MenuItem Header="Копировать"></MenuItem>
            <MenuItem Header="Вставить"></MenuItem>
            <MenuItem Header="Вырезать"></MenuItem>
            <MenuItem Header="Удалить"></MenuItem>
          </ContextMenu>
        </ToggleButton.Resources>
      </ToggleButton>

      <!-- Simplest -->
      <Button Name="SvgBtnSelectLayout" Background="Transparent" BorderBrush="Transparent" Click="BtnSvgSelectLayout_OnClick" ContextMenuService.Placement="Bottom">
        <ContentControl>
          <StackPanel Orientation="Horizontal">
            <StackPanel Orientation="Horizontal">
              <Path Fill="Black" Width="24" Height="24" Data="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z"></Path>
              <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center" />
            </StackPanel>
          </StackPanel>
        </ContentControl>
        <Button.ContextMenu>
          <ContextMenu>
            <MenuItem Header="Копировать"></MenuItem>
            <MenuItem Header="Вставить"></MenuItem>
            <MenuItem Header="Вырезать"></MenuItem>
            <MenuItem Header="Удалить"></MenuItem>
          </ContextMenu>
        </Button.ContextMenu>
      </Button>


      <!-- Print Toggle Button -->
      <ToggleButton Name="ybtnPrint" ToolTip="Print your documents">
        <StackPanel Orientation="Horizontal">
          <Image Source="Resources\Print.png" />
          <TextBlock Margin="2" VerticalAlignment="Center">Print</TextBlock>
        </StackPanel>
        <ToggleButton.Style>
          <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="IsHitTestVisible" Value="True"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding ElementName=ypopupPrint, Path=IsOpen}" Value="True">
                <Setter Property="IsHitTestVisible" Value="False"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ToggleButton.Style>
      </ToggleButton>

      <!-- Print Toggle Button Popup -->
      <Popup x:Name="ypopupPrint" StaysOpen="False" PlacementTarget="{Binding ElementName=ybtnPrint}"
             IsOpen="{Binding IsChecked, ElementName=ybtnPrint, Mode=TwoWay}"  PopupAnimation="Slide">
        <Menu BorderThickness="1" BorderBrush="Gainsboro">
          <Menu.ItemsPanel>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel Orientation="Vertical"/>
            </ItemsPanelTemplate>
          </Menu.ItemsPanel>
          <MenuItem Header="Копировать"></MenuItem>
          <MenuItem Header="Вставить"></MenuItem>
          <MenuItem Header="Вырезать"></MenuItem>
          <MenuItem Header="Удалить"></MenuItem>
        </Menu>
      </Popup>

      <!-- Context Menu in control -->
      <ToggleButton Name="xBtnPrint" ToolTip="Print your documents">
        <StackPanel Orientation="Horizontal">
          <Path Fill="Black" Width="24" Height="24" Data="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z"></Path>
          <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center" />
        </StackPanel>
        <ToggleButton.Style>
          <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="IsHitTestVisible" Value="True"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding ElementName=xBtnPrint.ContextMenu, Path=IsOpen}" Value="True">
                <Setter Property="IsHitTestVisible" Value="False"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ToggleButton.Style>
        <ToggleButton.ContextMenu>
          <ContextMenu  x:Name="xxCmPrintAA" StaysOpen="False" PlacementTarget="{Binding ElementName=xBtnPrint}"
                        IsOpen="{Binding IsChecked, ElementName=xBtnPrint, Mode=TwoWay}">
            <MenuItem Header="Копировать"></MenuItem>
            <MenuItem Header="Вставить"></MenuItem>
            <MenuItem Header="Вырезать"></MenuItem>
            <MenuItem Header="Удалить"></MenuItem>
          </ContextMenu>
        </ToggleButton.ContextMenu>
      </ToggleButton>

      <!-- Context Menu in resources -->
      <ToggleButton Name="BtnSelectLayout" Background="Transparent" BorderBrush="Transparent" Click="BtnSelectLayout_OnClick" ContextMenuService.Placement="Bottom">
        <!--<ToggleButton Name="BtnSelectLayout" Background="Transparent" BorderBrush="Transparent" ContextMenuService.Placement="Bottom">-->
        <ContentControl>
          <StackPanel Orientation="Horizontal">
            <Path Fill="Black" Width="24" Height="24" Data="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z"></Path>
            <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center" />
          </StackPanel>
        </ContentControl>
        <ToggleButton.Style>
          <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="IsHitTestVisible" Value="True"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding ElementName=cm, Path=IsOpen}" Value="True">
                <Setter Property="IsHitTestVisible" Value="False"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ToggleButton.Style>
        <ToggleButton.Resources>
          <ContextMenu x:Key="cm" x:Name="cm" StaysOpen="False" Placement="Bottom" PlacementTarget="{Binding ElementName=BtnSelectLayout}"
                       IsOpen="{Binding IsChecked, ElementName=BtnSelectLayout, Mode=TwoWay}">
            <!--IsOpen="{Binding IsChecked, ElementName=BtnSelectLayout, Mode=TwoWay}"-->
            <MenuItem Header="Копировать"></MenuItem>
            <MenuItem Header="Вставить"></MenuItem>
            <MenuItem Header="Вырезать"></MenuItem>
            <MenuItem Header="Удалить"></MenuItem>
          </ContextMenu>
        </ToggleButton.Resources>
        <!--<Button.ContextMenu>
          <ContextMenu>
            <MenuItem Header="Копировать"></MenuItem>
            <MenuItem Header="Вставить"></MenuItem>
            <MenuItem Header="Вырезать"></MenuItem>
            <MenuItem Header="Удалить"></MenuItem>
          </ContextMenu>
        </Button.ContextMenu>-->
      </ToggleButton>

      <Menu>
        <MenuItem>
          <MenuItem.Icon>
            <Path Fill="Black" Width="24" Height="24" Data="M18,3H6V7H18M19,12A1,1 0 0,1 18,11A1,1 0 0,1 19,10A1,1 0 0,1 20,11A1,1 0 0,1 19,12M16,19H8V14H16M19,8H5A3,3 0 0,0 2,11V17H6V21H18V17H22V11A3,3 0 0,0 19,8Z"></Path>
          </MenuItem.Icon>
          <MenuItem Header="New Project" ></MenuItem>
          <MenuItem x:Name="XXX" Header="Open Project">
            <MenuItem Header="WinForms"></MenuItem>
            <MenuItem Header="WPF" ></MenuItem>
          </MenuItem>
          <Separator />
          <MenuItem Header="Exit" ></MenuItem>
        </MenuItem>
      </Menu>

      <MenuItem x:Name="AddPresetButton" Click="AddPresetButton_OnClick">
        <MenuItem.Icon>
          <Path Fill="Black" Width="24" Height="24" Data="M18,3H6V7H18M19,12A1,1 0 0,1 18,11A1,1 0 0,1 19,10A1,1 0 0,1 20,11A1,1 0 0,1 19,12M16,19H8V14H16M19,8H5A3,3 0 0,0 2,11V17H6V21H18V17H22V11A3,3 0 0,0 19,8Z"></Path>
        </MenuItem.Icon>
        <MenuItem.Header>
          <StackPanel Orientation="Horizontal">
            <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center" />
          </StackPanel>
        </MenuItem.Header>
        <!--<MenuItem Header="WinForms"></MenuItem>
        <MenuItem Header="WPF" ></MenuItem>
        <MenuItem.ContextMenu>
          <ContextMenu x:Name="aa" PlacementTarget="{Binding ElementName=AddPresetButton}" Placement="Relative">
            <MenuItem Header="Add 1"/>
            <MenuItem Header="Add 2"/>
            <MenuItem Header="Add 3"/>
          </ContextMenu>
        </MenuItem.ContextMenu>-->
      </MenuItem>

      <MenuItem Click="MenuItem_OnClick">
        <MenuItem.Header>
          <Image Source="Resources\Print.png" HorizontalAlignment="Right" VerticalAlignment="Center" />
        </MenuItem.Header>
      </MenuItem>

      <!-- -->
      <ToggleButton x:Name="TogglePopupButtonX">
        <StackPanel Orientation="Horizontal">
          <Image Source="Resources\Print.png" />
          <TextBlock Margin="2" VerticalAlignment="Center">Print</TextBlock>
        </StackPanel>
        <ToggleButton.Style>
          <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="IsHitTestVisible" Value="True"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding ElementName=Popup, Path=IsOpen}" Value="True">
                <Setter Property="IsHitTestVisible" Value="False"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ToggleButton.Style>
      </ToggleButton>

      <Popup StaysOpen="false" IsOpen="{Binding IsChecked, ElementName=TogglePopupButtonX, Mode=TwoWay}"
             PlacementTarget="{Binding ElementName=TogglePopupButtonX}" PopupAnimation="Slide" 
             x:Name="Popup">
        <Border Width="100" Height="200" Background="White" BorderThickness="1" BorderBrush="Black">
          <TextBlock>This is a test</TextBlock>
        </Border>
      </Popup>

      <!-- Print Toggle Button -->
      <ToggleButton Name="btnPrint" ToolTip="Print your documents">
        <StackPanel Orientation="Horizontal">
          <Image Source="Resources\Print.png" />
          <TextBlock Margin="2" VerticalAlignment="Center">Print</TextBlock>
        </StackPanel>
        <ToggleButton.Style>
          <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="IsHitTestVisible" Value="True"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding ElementName=popupPrint, Path=IsOpen}" Value="True">
                <Setter Property="IsHitTestVisible" Value="False"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ToggleButton.Style>
      </ToggleButton>

      <!-- Print Toggle Button Popup -->
      <Popup x:Name="popupPrint" StaysOpen="False" PlacementTarget="{Binding ElementName=btnPrint}"
             IsOpen="{Binding IsChecked, ElementName=btnPrint, Mode=TwoWay}"  PopupAnimation="Slide">
        <Border>
          <StackPanel>
            <!-- Print to local -->
            <Button ToolTip="Print your documents to a local printer">
              <StackPanel Orientation="Horizontal">
                <Image Source="Print.png" />
                <TextBlock Margin="0" VerticalAlignment="Center">Print to local</TextBlock>
              </StackPanel>
            </Button>
            <!-- Print to network -->
            <Button ToolTip="Print your documents to a network printer">
              <StackPanel Orientation="Horizontal">
                <Image Source="Print.png" />
                <TextBlock Margin="0" VerticalAlignment="Center">Print to network</TextBlock>
              </StackPanel>
            </Button>
            <Button ToolTip="Print your documents to a network printer">
              <StackPanel Orientation="Horizontal">
                <TextBlock Margin="2" VerticalAlignment="Center">XX Print to network</TextBlock>
              </StackPanel>
            </Button>
          </StackPanel>
        </Border>
      </Popup>

      <Separator />

      <!-- Text Search -->
      <TextBlock VerticalAlignment="Center">Search:</TextBlock>
      <TextBox ToolTip="Search a keyword in your documents" Width="150" />

    </ToolBar>

    <ToolBar DockPanel.Dock="Top" Height="32">

      <!-- Resources to manage the Popup Button -->
      <ToolBar.Resources>
        <Style TargetType="{x:Type Popup}">
          <Setter Property="StaysOpen" Value="False" />
          <EventSetter Event="Button.Click" Handler="popupX_Click" />
        </Style>
        <Style TargetType="{x:Type Border}">
          <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.MenuBrushKey}}" />
          <Setter Property="BorderThickness" Value="1" />
          <Setter Property="Padding" Value="2" />
        </Style>
        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
          <Setter Property="HorizontalAlignment"        Value="Stretch" />
          <Setter Property="HorizontalContentAlignment" Value="Left" />
        </Style>
      </ToolBar.Resources>

      <!-- Save Button -->
      <Button ToolTip="Save your project" Click="ButtonBase_OnClick">
        <StackPanel Orientation="Horizontal">
          <Image Source="Resources/Save.png" />
          <TextBlock Margin="2" VerticalAlignment="Center">Save</TextBlock>
        </StackPanel>
      </Button>

      <Separator />

      <!-- Print Toggle Button -->
      <ToggleButton Name="btnPrintX" Click="btnPrintX_Click" ToolTip="Print your documents">
        <StackPanel Orientation="Horizontal">
          <Image Source="Resources\Print.png" />
          <TextBlock Margin="2" VerticalAlignment="Center">Print</TextBlock>
        </StackPanel>
      </ToggleButton>

      <!-- Print Toggle Button Popup -->
      <Popup x:Name="popupPrintX" PlacementTarget="{Binding ElementName=btnPrintX}">
        <Border>
          <StackPanel>
            <!-- Print to local -->
            <Button ToolTip="Print your documents to a local printer">
              <StackPanel Orientation="Horizontal">
                <Image Source="Print.png" />
                <TextBlock Margin="2" VerticalAlignment="Center">Print to local</TextBlock>
              </StackPanel>
            </Button>
            <!-- Print to network -->
            <Button ToolTip="Print your documents to a network printer">
              <StackPanel Orientation="Horizontal">
                <Image Source="Print.png" />
                <TextBlock Margin="2" VerticalAlignment="Center">Print to network</TextBlock>
              </StackPanel>
            </Button>
          </StackPanel>
        </Border>
      </Popup>

      <Separator />

      <!-- Text Search -->
      <TextBlock VerticalAlignment="Center">Search:</TextBlock>
      <TextBox ToolTip="Search a keyword in your documents" Width="150" />

    </ToolBar>

  </DockPanel>
</Window>
