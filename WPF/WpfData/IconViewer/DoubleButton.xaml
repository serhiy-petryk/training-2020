<Window x:Class="IconViewer.DoubleButton"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:IconViewer"
        mc:Ignorable="d"
        d:DesignWidth="300" d:DesignHeight="150"
        Title="DoubleButton" Height="450" Width="800">

    <Window.Resources>
        <local:DoubleButtonConverter x:Key="DoubleButtonConverter" />
        <local:SquareDoubleButtonConverter x:Key="SquareDoubleButtonConverter"/>
        <local:DoubleButtonMultiConverter x:Key="DoubleButtonMultiConverter"/>

        <ControlTemplate x:Key="RightDownSquareButton" TargetType="{x:Type ButtonBase}">
            <Grid>
                <Polygon Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"
                         StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}"
                         Points="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth, Converter={StaticResource SquareDoubleButtonConverter}, ConverterParameter=RightDownButton}" >
                </Polygon>
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  RecognizesAccessKey ="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="LeftUpSquareButton" TargetType="{x:Type ButtonBase}">
            <Grid>
                <Polygon Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"
                         StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}"
                         Points="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth, Converter={StaticResource SquareDoubleButtonConverter}, ConverterParameter=LeftUpButton}" >
                </Polygon>
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  RecognizesAccessKey ="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
        </ControlTemplate>

        <Style x:Key="SquareButton" TargetType="ButtonBase">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FFA9B6C5"/>
                    <Setter Property="BorderBrush" Value="#FF787F89"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ========================= -->
        <ControlTemplate x:Key="RightDownButton" TargetType="{x:Type Button}">
            <Grid>
                <Polygon Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" Loaded="XXX_OnLoaded" Initialized="FrameworkElement_OnInitialized"
                         StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}">
                    <!--Points="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag, Converter={StaticResource DoubleButtonConverter}, ConverterParameter=RightDownButton}" >-->
                    <Polygon.Points>
                        <MultiBinding Converter="{StaticResource DoubleButtonMultiConverter}" ConverterParameter="Points">
                            <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="ActualWidth"></Binding>
                            <Binding RelativeSource="{RelativeSource TemplatedParent}"  Path="ActualHeight"></Binding>
                            <Binding Source="RightDownButton"></Binding>
                        </MultiBinding>
                    </Polygon.Points>
                </Polygon>
                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  RecognizesAccessKey ="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
        </ControlTemplate>

        <Style x:Key="Poly31" TargetType="{x:Type Button}">
            <!--<Setter Property="Width" Value="24"></Setter>
            <Setter Property="Height" Value="24"></Setter>-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Polygon x:Name="XXX" Loaded="XXX_OnLoaded" Fill="{TemplateBinding Background}"
                                     Points="{Binding ElementName=XXX, Path=Tag, Converter={StaticResource DoubleButtonConverter}, ConverterParameter=Points}"
                                     Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderThickness.Left}" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey ="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--<Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value="YellowGreen"/>
                </Trigger>
            </Style.Triggers>-->
        </Style>

        <Style x:Key="Poly21" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Polygon Fill="{TemplateBinding Background}" Points="0, 0, 24, 0, 0, 24" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey ="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value="YellowGreen"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Poly3" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="24"></Setter>
            <Setter Property="Height" Value="24"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Polygon Fill="{TemplateBinding Background}" Points="0, 24, 24, 0, 24, 24, 0, 24" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey ="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="6 6 0 0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value="YellowGreen"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Poly2" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="24"></Setter>
            <Setter Property="Height" Value="24"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Polygon Fill="{TemplateBinding Background}" Points="0, 0, 24, 0, 0, 24" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                            <!--<ContentPresenter HorizontAlalignment="{TemplateBinding HorizontalContentAlignment}" recognizesaccesskey="True" snapstodevicepixels="{TemplateBinding SnapsToDevicePixels}" verticalalignment="{TemplateBinding VerticalContentAlignment}" />-->
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey ="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="-6 -6 0 0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value="YellowGreen"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="Poly1" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Polygon Fill="{TemplateBinding Background}" Points="10,10 80,10 120,45 80,75 10,75 45,45" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="2" />
                            <!--<ContentPresenter HorizontAlalignment="{TemplateBinding HorizontalContentAlignment}" recognizesaccesskey="True" snapstodevicepixels="{TemplateBinding SnapsToDevicePixels}" verticalalignment="{TemplateBinding VerticalContentAlignment}" />-->
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RecognizesAccessKey ="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                        <!--<ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True" />
                            <Trigger Property="IsDefaulted" Value="True" />
                            <Trigger Property="IsMouseOver" Value="True" />
                            <Trigger Property="IsPressed" Value="True" />
                            <Trigger Property="IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Background" Value="YellowGreen"/>
                </Trigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="30"/>
        </Grid.ColumnDefinitions>
        <Grid Grid.Column="0">
            <Grid.LayoutTransform>
                <ScaleTransform
                    CenterX="0" CenterY="0"
                    ScaleX="{Binding ElementName=uiScaleSlider,Path=Value}"
                    ScaleY="{Binding ElementName=uiScaleSlider,Path=Value}"
                />
            </Grid.LayoutTransform>
            <Grid.RowDefinitions>
                <RowDefinition Height="29"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                <Border Grid.Column="0" Margin="0" Grid.Row="0" BorderBrush="Black" BorderThickness="0 0 0 1" Padding="0 2 0 2" Background="#FF8194AA">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        
                        <TabPanel Grid.Column="0" Margin="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" ></TabPanel>

                        <Border Grid.Column="1" Margin="0" >
                            <RepeatButton DataContext="{Binding ElementName=TabControl}" Content="&lt;" Padding="0" Focusable="False"
                                          Interval="15" IsEnabled="{Binding CanScrollLeft}" Visibility="{Binding ScrollButtonVisibility}"
                                          CommandTarget="{Binding ElementName=PART_ScrollBar}" Command="ScrollBar.LineLeftCommand"
                            />
                        </Border>

                        <!--<Border Grid.Column="2">
                            <RepeatButton DataContext="{Binding ElementName=TabControl}" Content="&gt;" Padding="0" Focusable="False"
                                          IsEnabled="{Binding CanScrollRight}" Visibility="{Binding ScrollButtonVisibility}"
                                          CommandTarget="{Binding ElementName=PART_ScrollBar}" Command="ScrollBar.LineRightCommand" Interval="15"
                            />
                        </Border>-->


                        <RepeatButton Grid.Column="2" Template="{StaticResource RightDownSquareButton}" Style="{StaticResource SquareButton}" 
                                      Width="24" Height="24" BorderThickness="1" 
                                      DataContext="{Binding ElementName=TabControl}" Padding="0" Focusable="False"
                                      IsEnabled="{Binding CanScrollRight}" Visibility="{Binding ScrollButtonVisibility}"
                                      CommandTarget="{Binding ElementName=PART_ScrollBar}" Command="ScrollBar.LineRightCommand" Interval="15"
                        >
                            <Path Margin="12 10 0 0" Fill="White" Data="M 0 0 L 4 4 L 0 8 Z" Width="4" Height="8"></Path>
                        </RepeatButton>

                            <RepeatButton Grid.Column="3" Template="{StaticResource LeftUpSquareButton}" Style="{StaticResource SquareButton}"
                                          Margin="0" Width="24" Height="24" BorderThickness="1" Focusable="False" Click="ButtonLeft_OnClick">
                                <Path Margin="-12 -10 0 0" Fill="White" Data="M 4 0 L 0 4 L 4 8 Z" Width="4" Height="8"></Path>
                            </RepeatButton>

                            <RepeatButton Grid.Column="4" Template="{StaticResource RightDownSquareButton}" Style="{StaticResource SquareButton}"
                                          Margin="-24 0 0 0" Width="24" Height="24" BorderThickness="1"  Focusable="False" Click="ButtonRight_OnClick">
                                <Path Margin="12 10 0 0" Fill="White" Data="M 0 0 L 4 4 L 0 8 Z" Width="4" Height="8"></Path>
                            </RepeatButton>


                        <Menu Grid.Column="5" Background="Transparent">
                            <!--<MenuItem Click="MenuItem_OnClick" Focusable="False"
                                                  ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=Items}"
                                                  Template="{StaticResource TabMenuButtonTemplate}" ItemContainerStyle="{StaticResource TabMenuItem}"/>-->
                            <MenuItem Click="MenuItem_OnClick" Focusable="False" Margin="0" Padding="0" Width="20" Height="24">
                                <!--ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=Items}"-->
                                <!--ItemContainerStyle="{StaticResource TabMenuItem}">-->
                                <MenuItem.HeaderTemplate>
                                    <DataTemplate>
                                        <Path Fill="White" Data="M 0 0 L 4 4 L 8 0 Z" Width="8" Height="4"></Path>
                                    </DataTemplate>
                                </MenuItem.HeaderTemplate>
                            </MenuItem>
                        </Menu>

                        <!--<Button Grid.Column="6" Margin="8 0" Background="Aqua">X</Button>-->
                        </Grid>
                </Border>
            </Grid>

            <WrapPanel Background="Gainsboro" Grid.Row="1">
                <Button Margin="8">X</Button>
                <Button Style="{DynamicResource Poly2}">
                    <Path Margin="2 6 0 0" Fill="White" Data="M 0 0 L 4 4 L 8 0 Z" Width="12" Height="12"></Path>
                </Button>

                <Button Style="{DynamicResource Poly3}" Margin="-24 0 0 0">
                    <Path Margin="6 10 0 0" Fill="White" Data="M 0 0 L 4 4 L 8 0 Z" Width="12" Height="12"></Path>
                </Button>

                <Button Margin="8" Background="Aqua">X</Button>

                <Button Style="{StaticResource Poly21}" Width="24" Height="24" BorderThickness="1" Click="ButtonLeft_OnClick">
                    <Path Margin="-4 -6 0 0" Fill="White" Data="M 4 0 L 0 4 L 4 8 Z" Width="12" Height="12"></Path>
                </Button>

                <Button Style="{StaticResource Poly31}" Margin="-24 0 0 0" Width="24" Height="24" BorderThickness="1" Click="ButtonRight_OnClick">
                    <Path Margin="16 12 0 0" Fill="White" Data="M 0 0 L 4 4 L 0 8 Z" Width="12" Height="12"></Path>
                </Button>

                <Button Margin="8" Background="Aqua">X</Button>
                <Button Margin="0 8" Background="Aqua">X</Button>

                <Button Template="{StaticResource LeftUpSquareButton}" Style="{StaticResource SquareButton}" Width="24" Height="24" BorderThickness="1" Click="ButtonLeft_OnClick">
                    <Path Margin="-12 -10 0 0" Fill="White" Data="M 4 0 L 0 4 L 4 8 Z" Width="4" Height="8"></Path>
                </Button>

                <Button x:Name="AA" Template="{StaticResource RightDownSquareButton}" Style="{StaticResource SquareButton}" Margin="-24 0 0 0" Width="24" Height="24" BorderThickness="1" Click="ButtonRight_OnClick">
                    <Path Margin="12 10 0 0" Fill="Black" Data="M 0 0 L 4 4 L 0 8 Z" Width="4" Height="8"></Path>
                </Button>

                <Button Style="{DynamicResource Poly1}" Margin="0 0 0 0" Click="ButtonBase_OnClick">YYYY</Button>
                <Button Style="{DynamicResource Poly1}">X</Button>
            </WrapPanel>
        </Grid>

        <Slider
        x:Name="uiScaleSlider"
        Grid.Column="1"
        HorizontalAlignment="Center"
        VerticalAlignment="Bottom"
        ToolTip="Determines the UI scale factor. Double-click to revert scaling back to 100%."
        Height="100"
        Value="1" Minimum="0.1" Maximum="10"
        Orientation="Vertical"
        Ticks="1"
        IsSnapToTickEnabled="False"
        TickPlacement="BottomRight"
        AutoToolTipPlacement="BottomRight"
        AutoToolTipPrecision="2"
    />

    </Grid>
</Window>
