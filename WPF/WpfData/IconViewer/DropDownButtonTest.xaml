<Window x:Class="IconViewer.DropDownButtonTest"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:IconViewer"
        mc:Ignorable="d"
        Title="DropDownButtonTest" Height="300" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <Geometry x:Key="UpArrowGeometry">M 0 4 L 4 0 L 8 4 Z</Geometry>
            <Geometry x:Key="DownArrowGeometry">M 0 0 L 4 4 L 8 0 Z</Geometry>
            <ContextMenu x:Key="AAA">
                <MenuItem Header="Add 1"/>
                <MenuItem Header="Add 2"/>
                <MenuItem Header="Add 3"/>
            </ContextMenu>
        </ResourceDictionary>
    </Window.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="30"/>
        </Grid.ColumnDefinitions>

        <StackPanel>
            <StackPanel.LayoutTransform>
                <ScaleTransform CenterX="0" CenterY="0" ScaleX="{Binding ElementName=uiScaleSlider,Path=Value}" ScaleY="{Binding ElementName=uiScaleSlider,Path=Value}"/>
            </StackPanel.LayoutTransform>

            <TextBlock>Menu item</TextBlock>
            <Grid Height="30"  Background="YellowGreen" FlowDirection="RightToLeft">
                <Menu Background="#FF94B4D1" BorderThickness="0">
                    <!--<Menu.Style>
                        <Style TargetType="Menu">
                            <Setter Property="BorderThickness" Value="4"></Setter>
                            <Setter Property="BorderBrush" Value="BlueViolet"></Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderThickness" Value="4"></Setter>
                                    <Setter Property="BorderBrush" Value="BlueViolet"></Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Menu.Style>-->
                    <!--<MenuItem Focusable="False" Margin="0" Padding="0" Width="20" Height="24" SubmenuOpened="MenuItem_SubmenuOpened">-->
                    <MenuItem Focusable="False" Width="20" Height="24">
                        <MenuItem.Template>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <Grid>
                                    <ToggleButton Grid.Column="0" x:Name="WindowsMenuButton" Focusable="False" IsThreeState="False" IsChecked="False"
                                                  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                        Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
                                        <Path x:Name="WindowsMenuPath" Width="10" Fill="Black">
                                            <Path.Style>
                                                <Style TargetType="Path">
                                                    <Setter Property="Height" Value="5"></Setter>
                                                    <Setter Property="Data" Value="M 0 0 L 5 5 L 10 0 Z"></Setter>
                                                    <!--<Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=DoubleButtonContainer, Path=Visibility}" Value="Visible">
                                                                <Setter Property="Height" Value="9"></Setter>
                                                                <Setter Property="Data" Value="M 0 0 L 10 0 L 10 2 L 0 2 Z M 0 4 L 5 9 L 10 4 Z"></Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>-->
                                                </Style>
                                            </Path.Style>
                                        </Path>
                                    </ToggleButton>
                                </Grid>
                            </ControlTemplate>
                        </MenuItem.Template>
                    </MenuItem>

                    <MenuItem Focusable="False" Margin="0" Padding="0" Width="20" Height="24">
                        <MenuItem.Style>
                            <Style TargetType="MenuItem">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="BorderBrush" Value="Transparent"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderThickness" Value="0" ></Setter>
                                        <Setter Property="BorderBrush" Value="#FF3399FF"/>
                                        <Setter Property="Background" Value="#FFC2E0FF"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="BorderBrush" Value="#FF3399FF"/>
                                        <Setter Property="Background" Value="#FF99CCFF"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.3"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </MenuItem.Style>
                        <MenuItem.HeaderTemplate>
                            <DataTemplate>
                                <Border BorderThickness="4">
                                    <Path Fill="White" Width="10">
                                        <Path.Style>
                                            <Style TargetType="Path">
                                                <Setter Property="Height" Value="5"></Setter>
                                                <Setter Property="Data" Value="M 0 0 L 5 5 L 10 0 Z"></Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=DoubleButtonContainer, Path=Visibility}" Value="Visible">
                                                        <Setter Property="Height" Value="9"></Setter>
                                                        <Setter Property="Data" Value="M 0 0 L 10 0 L 10 2 L 0 2 Z M 0 4 L 5 9 L 10 4 Z"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Path.Style>
                                    </Path>
                                </Border>
                            </DataTemplate>
                        </MenuItem.HeaderTemplate>

                    </MenuItem>
                </Menu>

            </Grid>

            <TextBlock>Split button</TextBlock>
            <!-- ===========================  -->
            <!-- ==== Split button =====  -->
            <!-- ===========================  -->
            <ToolBar Height="32">
                <Button>XXX</Button>
                <Button>XXX</Button>
                <Button>AAAA</Button>
                <Button VerticalAlignment="Stretch">
                    <ContentControl>
                        <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center"/>
                    </ContentControl>
                </Button>
                <Button>XXX</Button>
                <Button Padding="1">
                    <ContentControl>
                        <Grid Margin="0">
                            <Grid.RowDefinitions>
                                <RowDefinition></RowDefinition>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" Padding="0" Margin="0" CornerRadius="0" BorderThickness="1" BorderBrush="Black">
                                <Button Margin="0" BorderThickness="0" Background="Transparent" BorderBrush="Transparent">
                                    XXX
                                </Button>
                            </Border>

                            <Button Grid.Column="1" Background="Transparent" BorderBrush="Transparent" Margin="0 0 0 0">
                                <ContentControl>
                                    <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center"/>
                                </ContentControl>
                            </Button>
                        </Grid>
                    </ContentControl>
                </Button>
            </ToolBar>

            <!-- ===========================  -->
            <!-- ==== Dropdown button =====  -->
            <!-- ===========================  -->
            <TextBlock>Dropdown button</TextBlock>
            <ToolBar Height="32">

                <!-- Resources to manage the Popup Button -->
                <ToolBar.Resources>
                    <Style TargetType="{x:Type Popup}">
                        <EventSetter Event="Button.Click" Handler="popup_Click" />
                    </Style>
                    <!-- Popup outer border -->
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.MenuBrushKey}}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <!--<Setter Property="Padding" Value="2" />-->
                    </Style>
                    <!-- popup items -->
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                        <Setter Property="HorizontalAlignment"        Value="Stretch" />
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                    </Style>
                </ToolBar.Resources>

                <!-- Simplest -->
                <!--<ToggleButton Name="aa1" Background="Transparent" Click="aa1_OnClick" BorderBrush="Transparent" ContextMenuService.Placement="Bottom"-->
                <ToggleButton Name="aa1" Background="Transparent" BorderBrush="Transparent" ContextMenuService.Placement="Bottom" 
                    IsThreeState="False" Checked="Aa1_OnChecked">
                    <ContentControl>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Horizontal">
                                <Path Fill="Black" Width="24" Height="24" Data="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z"></Path>
                                <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center" />
                            </StackPanel>
                        </StackPanel>
                    </ContentControl>
                    <!--<ToggleButton.Style>
          <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="IsHitTestVisible" Value="True"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding ElementName=aa_cm, Path=IsOpen}" Value="True">
                <Setter Property="IsHitTestVisible" Value="False"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ToggleButton.Style>-->
                    <!--<ToggleButton.ContextMenu>
          <ContextMenu Name="aa_cm">
            <MenuItem Header="Копировать"></MenuItem>
            <MenuItem Header="Вставить"></MenuItem>
            <MenuItem Header="Вырезать"></MenuItem>
            <MenuItem Header="Удалить"></MenuItem>
          </ContextMenu>
        </ToggleButton.ContextMenu>-->
                    <ToggleButton.Resources>
                        <ContextMenu x:Key="cm" StaysOpen="False" Placement="Bottom" PlacementTarget="{Binding ElementName=BtnSelectLayout}"
                       IsOpen="{Binding IsChecked, ElementName=BtnSelectLayout, Mode=TwoWay}">
                            <!--IsOpen="{Binding IsChecked, ElementName=BtnSelectLayout, Mode=TwoWay}"-->
                            <MenuItem Header="Копировать"></MenuItem>
                            <MenuItem Header="Вставить"></MenuItem>
                            <MenuItem Header="Вырезать"></MenuItem>
                            <MenuItem Header="Удалить"></MenuItem>
                        </ContextMenu>
                    </ToggleButton.Resources>
                </ToggleButton>

                <!-- Simplest -->
                <Button Name="SvgBtnSelectLayout" Background="Transparent" BorderBrush="Transparent" Click="BtnSvgSelectLayout_OnClick" ContextMenuService.Placement="Bottom">
                    <ContentControl>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Horizontal">
                                <Path Fill="Black" Width="24" Height="24" Data="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z"></Path>
                                <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center" />
                            </StackPanel>
                        </StackPanel>
                    </ContentControl>
                    <Button.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Копировать"></MenuItem>
                            <MenuItem Header="Вставить"></MenuItem>
                            <MenuItem Header="Вырезать"></MenuItem>
                            <MenuItem Header="Удалить"></MenuItem>
                        </ContextMenu>
                    </Button.ContextMenu>
                </Button>


                <!-- Print Toggle Button -->
                <TextBlock>Print Toggle Button (popup)</TextBlock>
                <ToggleButton Name="ybtnPrint" ToolTip="Print your documents">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Resources\Print.png" />
                        <TextBlock Margin="2" VerticalAlignment="Center">Print</TextBlock>
                    </StackPanel>
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="IsHitTestVisible" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=ypopupPrint, Path=IsOpen}" Value="True">
                                    <Setter Property="IsHitTestVisible" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <!-- Print Toggle Button Popup -->
                <Popup x:Name="ypopupPrint" StaysOpen="False" PlacementTarget="{Binding ElementName=ybtnPrint}"
             IsOpen="{Binding IsChecked, ElementName=ybtnPrint, Mode=TwoWay}"  PopupAnimation="Slide">
                    <Menu BorderThickness="1" BorderBrush="Gainsboro">
                        <Menu.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Orientation="Vertical"/>
                            </ItemsPanelTemplate>
                        </Menu.ItemsPanel>
                        <MenuItem Header="Копировать"></MenuItem>
                        <MenuItem Header="Вставить"></MenuItem>
                        <MenuItem Header="Вырезать"></MenuItem>
                        <MenuItem Header="Удалить"></MenuItem>
                    </Menu>
                </Popup>

                <!-- Context Menu in control -->
                <ToggleButton Name="xBtnPrint" ToolTip="Print your documents">
                    <StackPanel Orientation="Horizontal">
                        <Path Fill="Black" Width="24" Height="24" Data="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z"></Path>
                        <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center" />
                    </StackPanel>
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="IsHitTestVisible" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=xBtnPrint.ContextMenu, Path=IsOpen}" Value="True">
                                    <Setter Property="IsHitTestVisible" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                    <ToggleButton.ContextMenu>
                        <ContextMenu  x:Name="xxCmPrintAA" StaysOpen="False" PlacementTarget="{Binding ElementName=xBtnPrint}"
                        IsOpen="{Binding IsChecked, ElementName=xBtnPrint, Mode=TwoWay}">
                            <MenuItem Header="Копировать"></MenuItem>
                            <MenuItem Header="Вставить"></MenuItem>
                            <MenuItem Header="Вырезать"></MenuItem>
                            <MenuItem Header="Удалить"></MenuItem>
                        </ContextMenu>
                    </ToggleButton.ContextMenu>
                </ToggleButton>

                <!-- Context Menu in resources -->
                <ToggleButton Name="BtnSelectLayout" Background="Transparent" BorderBrush="Transparent" Click="BtnSelectLayout_OnClick" ContextMenuService.Placement="Bottom">
                    <!--<ToggleButton Name="BtnSelectLayout" Background="Transparent" BorderBrush="Transparent" ContextMenuService.Placement="Bottom">-->
                    <ContentControl>
                        <StackPanel Orientation="Horizontal">
                            <Path Fill="Black" Width="24" Height="24" Data="M12,10L8,14H11V20H13V14H16M19,4H5C3.89,4 3,4.9 3,6V18A2,2 0 0,0 5,20H9V18H5V8H19V18H15V20H19A2,2 0 0,0 21,18V6A2,2 0 0,0 19,4Z"></Path>
                            <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center" />
                        </StackPanel>
                    </ContentControl>
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="IsHitTestVisible" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=cm, Path=IsOpen}" Value="True">
                                    <Setter Property="IsHitTestVisible" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                    <ToggleButton.Resources>
                        <ContextMenu x:Key="cm" x:Name="cm" StaysOpen="False" Placement="Bottom" PlacementTarget="{Binding ElementName=BtnSelectLayout}"
                       IsOpen="{Binding IsChecked, ElementName=BtnSelectLayout, Mode=TwoWay}">
                            <!--IsOpen="{Binding IsChecked, ElementName=BtnSelectLayout, Mode=TwoWay}"-->
                            <MenuItem Header="Копировать"></MenuItem>
                            <MenuItem Header="Вставить"></MenuItem>
                            <MenuItem Header="Вырезать"></MenuItem>
                            <MenuItem Header="Удалить"></MenuItem>
                        </ContextMenu>
                    </ToggleButton.Resources>
                    <!--<Button.ContextMenu>
          <ContextMenu>
            <MenuItem Header="Копировать"></MenuItem>
            <MenuItem Header="Вставить"></MenuItem>
            <MenuItem Header="Вырезать"></MenuItem>
            <MenuItem Header="Удалить"></MenuItem>
          </ContextMenu>
        </Button.ContextMenu>-->
                </ToggleButton>

                <Menu>
                    <MenuItem>
                        <MenuItem.Icon>
                            <Path Fill="Black" Width="24" Height="24" Data="M18,3H6V7H18M19,12A1,1 0 0,1 18,11A1,1 0 0,1 19,10A1,1 0 0,1 20,11A1,1 0 0,1 19,12M16,19H8V14H16M19,8H5A3,3 0 0,0 2,11V17H6V21H18V17H22V11A3,3 0 0,0 19,8Z"></Path>
                        </MenuItem.Icon>
                        <MenuItem Header="New Project" ></MenuItem>
                        <MenuItem x:Name="XXX" Header="Open Project">
                            <MenuItem Header="WinForms"></MenuItem>
                            <MenuItem Header="WPF" ></MenuItem>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="Exit" ></MenuItem>
                    </MenuItem>
                </Menu>

                <MenuItem x:Name="AddPresetButton" Click="AddPresetButton_OnClick">
                    <MenuItem.Icon>
                        <Path Fill="Black" Width="24" Height="24" Data="M18,3H6V7H18M19,12A1,1 0 0,1 18,11A1,1 0 0,1 19,10A1,1 0 0,1 20,11A1,1 0 0,1 19,12M16,19H8V14H16M19,8H5A3,3 0 0,0 2,11V17H6V21H18V17H22V11A3,3 0 0,0 19,8Z"></Path>
                    </MenuItem.Icon>
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Path Data="{StaticResource DownArrowGeometry}" Fill="Black" VerticalAlignment="Center" />
                        </StackPanel>
                    </MenuItem.Header>
                    <!--<MenuItem Header="WinForms"></MenuItem>
        <MenuItem Header="WPF" ></MenuItem>
        <MenuItem.ContextMenu>
          <ContextMenu x:Name="aa" PlacementTarget="{Binding ElementName=AddPresetButton}" Placement="Relative">
            <MenuItem Header="Add 1"/>
            <MenuItem Header="Add 2"/>
            <MenuItem Header="Add 3"/>
          </ContextMenu>
        </MenuItem.ContextMenu>-->
                </MenuItem>

                <MenuItem Click="MenuItem_OnClick">
                    <MenuItem.Header>
                        <Image Source="Resources\Print.png" HorizontalAlignment="Right" VerticalAlignment="Center" />
                    </MenuItem.Header>
                </MenuItem>

                <!-- -->
                <ToggleButton x:Name="TogglePopupButtonX">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Resources\Print.png" />
                        <TextBlock Margin="2" VerticalAlignment="Center">Print</TextBlock>
                    </StackPanel>
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="IsHitTestVisible" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=Popup, Path=IsOpen}" Value="True">
                                    <Setter Property="IsHitTestVisible" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <Popup StaysOpen="false" IsOpen="{Binding IsChecked, ElementName=TogglePopupButtonX, Mode=TwoWay}"
             PlacementTarget="{Binding ElementName=TogglePopupButtonX}" PopupAnimation="Slide" 
             x:Name="Popup">
                    <Border Width="100" Height="200" Background="White" BorderThickness="1" BorderBrush="Black">
                        <TextBlock>This is a test</TextBlock>
                    </Border>
                </Popup>

                <!-- Print Toggle Button -->
                <ToggleButton Name="btnPrint" ToolTip="Print your documents">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Resources\Print.png" />
                        <TextBlock Margin="2" VerticalAlignment="Center">Print</TextBlock>
                    </StackPanel>
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="IsHitTestVisible" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=popupPrint, Path=IsOpen}" Value="True">
                                    <Setter Property="IsHitTestVisible" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <!-- Print Toggle Button Popup -->
                <Popup x:Name="popupPrint" StaysOpen="False" PlacementTarget="{Binding ElementName=btnPrint}"
             IsOpen="{Binding IsChecked, ElementName=btnPrint, Mode=TwoWay}"  PopupAnimation="Slide">
                    <Border>
                        <StackPanel>
                            <!-- Print to local -->
                            <Button ToolTip="Print your documents to a local printer">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="Print.png" />
                                    <TextBlock Margin="0" VerticalAlignment="Center">Print to local</TextBlock>
                                </StackPanel>
                            </Button>
                            <!-- Print to network -->
                            <Button ToolTip="Print your documents to a network printer">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="Print.png" />
                                    <TextBlock Margin="0" VerticalAlignment="Center">Print to network</TextBlock>
                                </StackPanel>
                            </Button>
                            <Button ToolTip="Print your documents to a network printer">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Margin="2" VerticalAlignment="Center">XX Print to network</TextBlock>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Border>
                </Popup>

                <Separator />

                <!-- Text Search -->
                <TextBlock VerticalAlignment="Center">Search:</TextBlock>
                <TextBox ToolTip="Search a keyword in your documents" Width="150" />

            </ToolBar>

            <ToolBar Height="32">

                <!-- Resources to manage the Popup Button -->
                <ToolBar.Resources>
                    <Style TargetType="{x:Type Popup}">
                        <Setter Property="StaysOpen" Value="False" />
                        <EventSetter Event="Button.Click" Handler="popupX_Click" />
                    </Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Background" Value="{StaticResource {x:Static SystemColors.MenuBrushKey}}" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Padding" Value="2" />
                    </Style>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                        <Setter Property="HorizontalAlignment"        Value="Stretch" />
                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                    </Style>
                </ToolBar.Resources>

                <!-- Save Button -->
                <Button ToolTip="Save your project" Click="ButtonBase_OnClick">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Resources/Save.png" />
                        <TextBlock Margin="2" VerticalAlignment="Center">Save</TextBlock>
                    </StackPanel>
                </Button>

                <Separator />

                <!-- Print Toggle Button -->
                <ToggleButton Name="btnPrintX" Click="btnPrintX_Click" ToolTip="Print your documents">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Resources\Print.png" />
                        <TextBlock Margin="2" VerticalAlignment="Center">Print</TextBlock>
                    </StackPanel>
                </ToggleButton>

                <!-- Print Toggle Button Popup -->
                <Popup x:Name="popupPrintX" PlacementTarget="{Binding ElementName=btnPrintX}">
                    <Border>
                        <StackPanel>
                            <!-- Print to local -->
                            <Button ToolTip="Print your documents to a local printer">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="Print.png" />
                                    <TextBlock Margin="2" VerticalAlignment="Center">Print to local</TextBlock>
                                </StackPanel>
                            </Button>
                            <!-- Print to network -->
                            <Button ToolTip="Print your documents to a network printer">
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="Print.png" />
                                    <TextBlock Margin="2" VerticalAlignment="Center">Print to network</TextBlock>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                    </Border>
                </Popup>

                <Separator />

                <!-- Text Search -->
                <TextBlock VerticalAlignment="Center">Search:</TextBlock>
                <TextBox ToolTip="Search a keyword in your documents" Width="150" />

            </ToolBar>

        </StackPanel>

        <Grid Grid.Column="1" Background="AntiqueWhite">
            <Slider
                x:Name="uiScaleSlider"
                HorizontalAlignment="Center"
                VerticalAlignment="Bottom"
                ToolTip="Determines the UI scale factor. Double-click to revert scaling back to 100%."
                Height="100"
                Value="1" Minimum="0.1" Maximum="4"
                Orientation="Vertical"
                Ticks="1"
                IsSnapToTickEnabled="False"
                TickPlacement="BottomRight"
                AutoToolTipPlacement="BottomRight"
                AutoToolTipPrecision="2"
            />
        </Grid>

    </Grid>

</Window>
